var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AccueilComponent.html",[0,0.165,1,0.769]],["body/components/AccueilComponent.html",[0,0.276,1,1.359,2,1.344,3,0.311,4,0.27,5,1.115,6,1.115,7,1.115,8,0.27,9,3.208,10,1.115,11,1.957,12,1.687,13,4.163,14,1.447,15,1.344,16,1.344,17,1.466,18,1.385,19,3.643,20,1.447,21,4.953,22,3.255,23,4.953,24,0.824,25,0.029,26,0.491,27,3.816,28,3.816,29,1.115,30,3.816,31,0.311,32,0.54,33,1.036,34,1.447,35,1.447,36,1.115,37,1.7,38,1.115,39,0.458,40,1.115,41,0.891,42,1.492,43,0.961,44,1.447,45,0.891,46,1.248,47,0.891,48,1.115,49,0.961,50,1.115,51,0.891,52,1.447,53,1.115,54,0.961,55,1.115,56,0.891,57,1.115,58,1.115,59,0.891,60,1.115,61,0.891,62,1.115,63,1.115,64,0.891,65,1.115,66,0.891,67,1.036,68,1.115,69,1.115,70,0.021,71,0.021]],["title/components/AdminFormCandidatsComponent.html",[0,0.165,41,0.769]],["body/components/AdminFormCandidatsComponent.html",[0,0.218,1,0.572,2,0.987,3,0.199,4,0.173,5,0.716,6,0.716,7,0.716,8,0.173,10,0.716,11,1.844,12,1.59,14,1.062,15,0.987,16,0.987,17,0.617,18,0.617,20,1.062,24,0.76,25,0.029,26,0.315,29,0.716,31,0.199,32,0.347,33,0.665,34,1.062,35,1.062,36,0.716,37,1.402,38,0.716,39,0.529,40,0.716,41,1.12,42,1.611,43,1.624,44,1.062,45,0.572,46,0.916,47,0.572,48,0.716,49,0.617,50,0.716,51,0.572,52,1.062,53,0.716,54,0.617,55,0.716,56,0.572,57,0.716,58,0.716,59,0.572,60,0.716,61,0.572,62,0.716,63,0.716,64,0.572,65,0.716,66,0.572,67,0.665,68,0.716,69,0.716,70,0.015,71,0.015,72,0.962,73,3.529,74,3.529,75,1.801,76,1.428,77,1.839,78,2.674,79,2.389,80,1.668,81,1.428,82,3.644,83,3.056,84,0.199,85,0.422,86,4.335,87,2.578,88,0.726,89,2.035,90,3.153,91,0.726,92,1.609,93,3.153,94,2.578,95,3.529,96,2.551,97,2.768,98,0.944,99,3.056,100,0.489,101,0.401,102,0.347,103,2.389,104,2.448,105,0.67,106,1.509,107,2.448,108,2.849,109,2.058,110,0.467,111,2.388,112,0.489,113,0.489,114,1.609,115,1.328,116,1.609,117,1.509,118,1.123,119,1.038,120,2.448,121,1.12,122,2.448,123,1.609,124,3.153,125,3.368,126,2.78,127,2.058,128,1.801,129,4.335,130,2.058,131,2.448,132,1.839,133,2.448,134,2.677,135,2.352,136,1.328,137,2.448,138,3.056,139,2.448,140,2.448,141,2.674,142,3.635,143,2.448,144,2.389,145,3.635,146,2.058,147,2.448,148,2.058,149,2.058,150,2.448,151,2.448,152,1.801,153,3.834,154,2.448,155,2.674,156,3.529,157,3.153,158,2.389,159,3.635,160,3.056]],["title/components/AdminListCandidatsComponent.html",[0,0.165,45,0.769]],["body/components/AdminListCandidatsComponent.html",[0,0.187,1,0.449,2,0.82,3,0.157,4,0.136,5,0.562,6,0.562,7,0.562,8,0.136,10,0.562,11,1.766,12,1.523,14,0.883,15,1.248,16,0.82,17,0.484,18,0.484,20,0.883,24,0.749,25,0.029,26,0.247,29,0.562,31,0.157,32,0.272,33,0.522,34,0.883,35,0.883,36,0.562,37,1.236,38,0.562,39,0.49,40,0.562,41,0.449,42,1.511,43,0.484,44,0.883,45,0.988,46,1.668,47,0.449,48,0.562,49,0.484,50,0.562,51,0.449,52,0.883,53,0.562,54,0.484,55,0.562,56,0.449,57,0.562,58,0.562,59,0.449,60,0.562,61,0.449,62,0.562,63,0.562,64,0.449,65,0.562,66,0.449,67,0.522,68,0.562,69,0.562,70,0.013,71,0.013,72,0.756,73,3.973,74,3.973,75,1.415,76,1.187,77,1.583,78,2.223,81,1.187,82,3.138,83,2.54,84,0.157,85,0.351,88,0.604,89,1.795,91,0.604,96,2.343,97,2.431,98,1.103,99,1.617,100,0.845,101,0.515,102,0.599,105,0.974,106,1.711,109,1.617,110,0.389,111,2.431,112,0.919,113,0.919,116,1.264,117,1.698,118,0.882,121,0.706,125,1.986,126,1.64,132,1.282,134,2.24,135,1.64,136,1.043,138,1.617,141,1.415,156,2.223,157,1.986,161,2.746,162,2.746,163,2.746,164,2.454,165,3.235,166,3.733,167,3.138,168,3.138,169,3.733,170,3.138,171,4.231,172,3.557,173,3.557,174,3.022,175,4.231,176,2.54,177,2.54,178,1.617,179,3.022,180,1.923,181,1.923,182,1.923,183,3.022,184,1.923,185,1.923,186,1.923,187,2.54,188,3.557,189,1.923,190,3.022,191,1.923,192,2.107,193,1.923,194,2.223,195,1.923,196,2.427,197,1.923,198,1.415,199,1.415,200,1.415,201,1.264,202,1.923,203,1.617,204,3.138,205,4.231,206,2.54,207,0.701,208,2.223,209,1.617,210,1.617,211,3.022,212,1.415,213,1.617,214,1.617,215,1.923,216,1.923,217,4.231,218,3.138,219,1.923,220,3.022,221,3.022,222,3.022,223,1.923,224,1.617,225,1.923,226,1.923,227,1.923,228,1.986,229,2.223,230,2.223,231,2.223,232,2.223,233,2.223,234,2.54,235,2.223,236,2.54]],["title/components/AdminListUsersComponent.html",[0,0.165,47,0.769]],["body/components/AdminListUsersComponent.html",[0,0.188,1,0.45,2,0.822,3,0.157,4,0.136,5,0.563,6,0.563,7,0.563,8,0.136,10,0.563,11,1.767,12,1.523,14,0.885,15,1.249,16,0.822,17,0.485,18,0.485,20,0.885,24,0.771,25,0.029,26,0.248,29,0.563,31,0.157,32,0.273,33,0.523,34,0.885,35,0.885,36,0.563,37,1.238,38,0.563,39,0.49,40,0.563,41,0.45,42,1.567,43,0.485,44,0.885,45,0.45,46,1.668,47,0.989,48,0.563,49,0.485,50,0.563,51,0.45,52,0.885,53,0.563,54,0.485,55,0.563,56,0.45,57,0.563,58,0.563,59,0.45,60,0.563,61,0.45,62,0.563,63,0.563,64,0.45,65,0.563,66,0.45,67,0.523,68,0.563,69,0.563,70,0.013,71,0.013,72,0.757,73,3.974,76,1.189,77,1.585,80,1.389,81,1.189,84,0.157,85,0.351,88,0.605,89,1.797,91,0.385,96,2.345,98,1.103,100,0.846,101,0.516,102,0.6,105,0.975,106,1.712,110,0.389,111,2.433,112,0.92,113,0.92,119,0.817,121,0.45,126,2.298,132,1.284,134,2.242,135,1.642,136,1.045,161,2.75,162,2.75,163,2.75,164,1.989,167,3.142,168,3.142,170,3.142,172,3.561,176,2.544,177,2.544,187,2.544,188,3.561,192,2.109,194,2.227,196,2.428,198,1.417,199,1.417,200,1.417,201,1.266,206,2.544,207,0.702,208,2.227,209,1.62,210,1.62,212,1.417,213,1.62,214,1.62,218,3.142,224,1.62,233,2.227,234,2.544,235,2.227,236,2.544,237,4.448,238,1.62,239,4.178,240,3.738,241,3.027,242,3.738,243,3.738,244,4.235,245,3.561,246,2.544,247,4.235,248,1.927,249,2.905,250,3.027,251,1.927,252,1.927,253,1.927,254,3.027,255,2.282,256,1.927,257,1.927,258,1.927,259,1.927,260,3.027,261,1.927,262,1.927,263,1.927,264,1.927,265,1.927,266,1.927,267,1.266,268,1.62,269,1.927,270,0.652,271,1.927,272,1.927,273,3.738,274,4.235,275,3.027,276,1.927,277,1.927,278,4.235,279,1.927,280,3.027,281,3.027,282,3.027,283,1.927,284,1.927,285,1.927,286,1.927,287,2.544,288,2.227,289,3.027,290,3.027,291,3.027,292,3.027]],["title/components/AppComponent.html",[0,0.165,49,0.83]],["body/components/AppComponent.html",[0,0.262,1,0.802,2,1.253,3,0.279,4,0.243,5,1.003,6,1.003,7,1.003,8,0.243,10,1.003,11,1.933,12,1.667,14,1.349,15,1.253,16,1.253,17,0.865,18,0.865,19,3.838,20,1.349,22,3.034,24,0.903,25,0.029,26,0.441,29,1.003,31,0.279,32,0.486,33,0.931,34,1.349,35,1.349,36,1.003,37,1.631,38,1.003,39,0.427,40,1.003,41,0.802,42,1.416,43,0.865,44,1.349,45,0.802,46,1.163,47,0.802,48,1.003,49,1.406,50,1.003,51,1.078,52,1.349,53,1.003,54,1.163,55,1.003,56,1.078,57,1.003,58,1.003,59,1.078,60,1.003,61,1.078,62,1.003,63,1.003,64,0.802,65,1.003,66,1.078,67,0.931,68,1.003,69,1.003,70,0.02,71,0.02,84,0.279,85,0.536,98,0.632,101,0.318,110,0.441,112,0.686,113,0.686,293,2.885,294,3.034,295,5.217,296,2.213,297,1.958,298,4.617,299,4.617,300,4.386,301,3.881,302,3.432,303,2.885,304,3.881,305,2.255,306,2.885,307,2.885,308,2.885,309,2.885,310,3.432,311,1.456,312,2.885,313,2.885,314,2.255,315,2.885]],["title/modules/AppRoutingModule.html",[316,2.768,317,2.423]],["body/modules/AppRoutingModule.html",[0,0.324,1,1.088,3,0.283,4,0.246,8,0.246,13,3.917,16,0.944,24,0.92,25,0.029,26,0.447,29,1.017,31,0.379,32,0.493,41,1.227,43,1.174,45,1.088,46,1.414,47,1.088,51,1.088,56,1.088,59,1.088,61,1.088,64,1.088,66,1.088,67,0.944,70,0.02,71,0.02,74,3.063,158,2.287,165,2.771,207,1.268,237,2.559,239,2.559,303,2.925,304,2.925,305,2.287,306,2.925,307,2.925,308,2.925,309,2.925,317,3.428,318,2.559,319,3.479,320,4.659,321,2.771,322,5.254,323,5.254,324,4.659,325,3.479,326,3.479,327,3.479,328,6.57,329,4.659,330,3.428,331,3.479,332,5.254,333,2.287,334,2.559,335,3.479,336,3.479,337,3.479,338,3.479,339,4.659,340,3.479,341,3.479,342,2.925,343,3.479,344,2.069,345,2.925,346,2.925]],["title/injectables/AuthService.html",[347,0.769,348,0.962]],["body/injectables/AuthService.html",[3,0.247,4,0.214,8,0.214,24,0.789,25,0.029,26,0.39,31,0.247,32,0.429,39,0.49,70,0.018,71,0.018,84,0.247,85,0.493,88,0.847,91,0.606,98,1.159,100,1.058,101,0.49,102,0.75,105,1.114,106,1.666,110,0.809,111,2.435,112,0.847,113,0.847,121,1.436,192,2.112,194,3.598,207,1.106,255,2.106,267,1.993,270,1.027,296,2.247,297,1.286,311,1.286,333,3.215,347,0.991,348,1.239,349,1.286,350,2.549,351,2.244,352,4.112,353,5.297,354,5.297,355,5.297,356,5.297,357,4.453,358,4.241,359,4.241,360,1.392,361,4.241,362,1.946,363,3.033,364,5.297,365,3.033,366,3.033,367,3.033,368,2.721,369,3.033,370,3.481,371,3.033,372,2.909,373,3.033,374,4.241,375,3.033,376,4.241,377,3.033,378,3.897,379,4.241,380,3.033,381,3.215,382,4.241,383,3.033,384,1.286,385,1.192,386,1.392,387,1.392,388,1.733,389,3.12,390,3.033,391,3.033,392,4.891,393,4.891,394,3.033,395,3.033,396,3.033,397,4.241,398,3.033,399,2.549,400,3.033,401,3.033,402,3.033]],["title/components/CandidatDetailsComponent.html",[0,0.165,51,0.769]],["body/components/CandidatDetailsComponent.html",[0,0.164,1,0.366,2,0.697,3,0.128,4,0.111,5,0.458,6,0.458,7,0.458,8,0.111,10,0.458,11,1.691,12,1.458,14,0.75,15,1.127,16,0.697,17,0.395,18,0.395,20,0.75,24,0.787,25,0.029,26,0.202,29,0.458,31,0.128,32,0.222,33,0.426,34,0.75,35,0.75,36,0.458,37,1.1,38,0.458,39,0.435,40,0.458,41,0.366,42,0.884,43,0.395,44,0.75,45,0.366,46,0.647,47,0.366,48,0.458,49,0.395,50,0.458,51,0.879,52,1.484,53,0.458,54,0.395,55,0.458,56,0.366,57,0.458,58,0.458,59,0.366,60,0.458,61,0.366,62,0.458,63,0.458,64,0.366,65,0.458,66,0.366,67,0.426,68,0.458,69,0.458,70,0.011,71,0.011,72,0.616,76,1.008,77,1.381,80,1.494,81,1.008,84,0.128,85,0.298,87,2.65,88,0.513,89,1.596,91,0.513,94,1.526,95,2.768,97,2.529,98,1.097,100,0.829,101,0.506,102,0.666,105,0.936,106,1.857,110,0.726,112,0.89,113,0.89,115,0.851,116,1.031,117,1.552,118,0.72,119,0.665,121,0.969,126,1.392,130,1.319,132,2.154,134,2.865,135,2.756,136,1.767,141,1.154,144,1.031,148,1.319,149,2.157,157,1.687,160,2.157,164,2.141,192,2.443,196,2.398,201,1.031,207,0.936,228,1.687,235,1.888,255,0.936,294,1.687,305,3.881,344,0.933,381,1.687,388,0.75,403,4.344,404,1.319,405,3.338,406,3.02,407,2.756,408,2.738,409,3.257,410,3.257,411,3.257,412,2.566,413,3.257,414,4.456,415,4.15,416,4.15,417,3.257,418,4.15,419,3.163,420,3.163,421,2.566,422,2.566,423,3.763,424,2.157,425,2.157,426,3.763,427,1.569,428,2.566,429,1.569,430,1.569,431,2.566,432,1.569,433,2.566,434,1.569,435,1.569,436,2.157,437,1.569,438,1.526,439,2.157,440,1.569,441,1.569,442,1.569,443,1.569,444,1.569,445,3.02,446,1.569,447,1.569,448,1.569,449,1.569,450,1.569,451,1.319,452,1.154,453,1.319,454,1.569,455,1.154,456,1.569,457,1.569,458,1.569,459,1.569,460,1.569,461,1.569,462,1.569,463,3.257,464,1.569,465,1.569,466,1.319,467,2.157,468,3.763,469,1.569,470,2.738,471,1.569,472,2.566,473,1.319,474,2.396,475,1.569,476,3.257,477,1.319,478,1.569,479,3.746,480,2.157,481,2.552,482,2.566,483,1.569,484,1.569,485,2.566,486,1.569,487,1.569,488,2.566,489,2.396,490,1.569,491,1.569,492,1.569,493,1.569,494,1.569,495,1.569,496,1.569,497,1.569,498,1.569,499,3.257,500,1.569,501,1.569,502,1.569,503,1.569,504,2.566,505,2.157,506,2.157,507,2.566,508,2.566,509,2.566,510,2.566,511,2.566,512,1.569,513,2.566,514,2.566,515,2.157,516,2.566,517,1.569]],["title/components/CandidatDivComponent.html",[0,0.165,54,0.83]],["body/components/CandidatDivComponent.html",[0,0.26,1,0.788,2,1.239,3,0.275,4,0.238,5,0.986,6,0.986,7,0.986,8,0.238,10,0.986,11,1.929,12,1.663,14,1.334,15,1.239,16,0.916,17,0.85,18,0.85,20,1.334,24,0.732,25,0.029,26,0.434,29,0.986,31,0.275,32,0.478,33,0.916,34,1.334,35,1.334,36,0.986,37,1.62,38,0.986,39,0.479,40,0.986,41,0.788,42,1.404,43,0.85,44,1.334,45,0.788,46,1.15,47,0.788,48,0.986,49,0.85,50,0.986,51,0.788,52,1.838,53,0.986,54,1.396,55,0.986,56,0.788,57,0.986,58,0.986,59,0.788,60,0.986,61,0.788,62,0.986,63,0.986,64,0.788,65,0.986,66,0.788,67,0.916,68,0.986,69,0.986,70,0.019,71,0.019,72,1.326,81,1.793,84,0.275,88,0.912,91,0.674,96,2.738,98,0.953,100,0.674,101,0.423,102,0.478,105,0.622,106,1.061,117,1.656,118,1.548,208,3.358,229,4.077,230,3.358,231,3.358,232,3.358,270,1.142,314,3.642,403,4.077,408,4.348,518,2.836,519,4.564,520,5.172,521,4.564,522,5.542,523,4.564,524,2.482,525,4.564,526,3.374,527,3.374,528,4.564,529,3.374]],["title/interfaces/Candidate.html",[117,0.894,530,1.2]],["body/interfaces/Candidate.html",[3,0.348,4,0.302,8,0.302,25,0.028,31,0.348,39,0.561,70,0.023,71,0.023,84,0.348,85,0.618,101,0.604,102,0.923,110,0.875,117,1.444,125,3.986,126,3.29,127,5.098,128,4.462,530,1.557,531,2.317,532,3.59,533,3.606,534,3.606,535,3.606,536,3.783]],["title/injectables/CandidateService.html",[97,1.64,347,0.769]],["body/injectables/CandidateService.html",[3,0.274,4,0.238,8,0.238,24,0.844,25,0.029,26,0.432,31,0.274,32,0.476,39,0.535,70,0.019,71,0.019,84,0.274,85,0.529,88,0.91,91,0.672,97,2.267,98,1.123,100,1.156,101,0.535,102,0.819,105,1.065,110,0.808,112,0.672,113,0.672,117,1.765,118,1.543,121,1.293,173,3.828,270,1.138,296,2.347,297,1.426,311,1.426,347,1.064,348,1.782,349,1.426,351,2.369,360,1.543,362,2.09,368,2.942,384,1.426,385,1.321,386,1.543,387,1.543,388,1.69,424,3.828,436,3.828,438,3.071,537,2.827,538,4.554,539,4.652,540,4.554,541,4.554,542,4.554,543,3.363,544,4.554,545,3.363,546,3.363,547,3.363,548,4.554,549,3.363,550,4.554,551,1.674,552,2,553,2.654,554,2.879,555,2.474,556,2.474,557,2.827,558,2.474]],["title/interfaces/Comment.html",[445,1.958,530,1.2]],["body/interfaces/Comment.html",[3,0.358,4,0.311,8,0.311,25,0.029,31,0.358,39,0.407,70,0.023,71,0.023,84,0.358,85,0.629,101,0.607,110,0.876,117,1.664,255,2.295,445,3.223,530,1.605,531,2.388,533,3.743,534,3.645,535,3.645,559,3.7,560,5.153,561,4.557,562,3.7,563,4.402,564,3.7]],["title/injectables/CommentService.html",[347,0.769,405,2.164]],["body/injectables/CommentService.html",[3,0.291,4,0.252,8,0.252,24,0.859,25,0.029,26,0.459,31,0.291,32,0.506,39,0.525,70,0.02,71,0.02,84,0.291,85,0.551,87,3.372,88,0.948,91,0.714,98,1.087,100,1.133,101,0.525,102,0.803,105,0.981,110,0.839,112,0.714,113,0.714,121,1.325,207,1.302,270,1.209,296,2.405,297,1.515,311,1.515,347,1.108,348,1.809,349,1.515,351,2.443,360,1.639,362,2.176,368,2.841,384,1.515,385,1.404,386,1.639,387,1.639,388,1.556,389,2.628,405,3.117,419,4.475,425,3.986,439,3.986,445,2.124,453,3.003,551,1.778,553,2.443,554,2.65,560,4.767,565,3.003,566,4.742,567,4.742,568,3.572,569,3.572,570,4.742,571,3.572,572,3.572,573,3.572,574,4.742,575,3.986,576,3.572,577,3.572,578,3.572]],["title/components/DashboardComponent.html",[0,0.165,56,0.769]],["body/components/DashboardComponent.html",[0,0.267,1,0.833,2,1.286,3,0.29,4,0.252,5,1.042,6,1.042,7,1.042,8,0.252,10,1.042,11,1.942,12,1.674,14,1.384,15,1.286,16,1.286,17,0.898,18,0.898,19,3.484,20,1.384,22,3.113,24,0.671,25,0.029,26,0.459,29,1.042,31,0.29,32,0.505,33,0.968,34,1.384,35,1.384,36,1.042,37,1.656,38,1.042,39,0.525,40,1.042,41,0.833,42,1.444,43,0.898,44,1.384,45,0.833,46,1.193,47,0.833,48,1.042,49,0.898,50,1.042,51,0.833,52,1.384,53,1.042,54,0.898,55,1.042,56,1.324,57,1.042,58,1.042,59,0.833,60,1.042,61,0.833,62,1.042,63,1.042,64,0.833,65,1.042,66,0.833,67,0.968,68,1.042,69,1.042,70,0.02,71,0.02,78,3.484,84,0.29,88,0.946,91,0.712,94,2.12,96,2.782,98,0.873,100,0.946,101,0.438,102,0.671,105,0.657,106,1.122,110,0.684,239,3.484,270,1.207,321,2.817,334,4.169,524,2.623,579,2.997,580,4.736,581,4.736,582,3.982,583,3.566,584,3.982,585,3.566,586,3.566,587,3.566]],["title/interfaces/Election.html",[530,1.2,588,1.64]],["body/interfaces/Election.html",[3,0.343,4,0.298,8,0.298,25,0.028,31,0.343,70,0.022,71,0.022,84,0.343,85,0.613,101,0.602,102,0.936,110,0.844,117,1.145,165,3.59,192,2.868,300,5.075,530,1.537,531,2.288,533,3.59,534,3.59,535,3.59,536,3.971,588,2.628,589,3.545,590,6.037,591,6.037,592,6.037,593,3.545,594,3.545]],["title/injectables/ElectionService.html",[347,0.769,595,2.423]],["body/injectables/ElectionService.html",[3,0.274,4,0.238,8,0.238,24,0.844,25,0.029,26,0.432,31,0.274,32,0.476,39,0.535,70,0.019,71,0.019,84,0.274,85,0.529,88,0.91,91,0.672,98,1.123,100,1.156,101,0.535,102,0.819,105,1.065,110,0.808,112,0.672,113,0.672,121,1.293,270,1.138,296,2.347,297,1.426,311,1.426,347,1.064,348,1.782,349,1.426,351,2.369,360,1.543,362,2.09,368,2.942,384,1.426,385,1.321,386,1.543,387,1.543,388,1.69,438,3.071,551,1.674,552,2,553,2.654,554,2.879,555,2.474,556,2.474,557,2.827,558,2.474,588,3.238,595,3.35,596,2.827,597,4.554,598,4.554,599,4.554,600,5.534,601,4.554,602,4.554,603,4.554,604,3.363,605,4.554,606,3.363,607,4.554,608,3.363,609,3.363,610,4.554,611,3.363,612,4.554,613,3.363]],["title/injectables/FavoriteService.html",[347,0.769,406,1.958]],["body/injectables/FavoriteService.html",[3,0.304,4,0.264,8,0.264,24,0.87,25,0.029,26,0.48,31,0.304,32,0.528,39,0.503,70,0.021,71,0.021,84,0.304,85,0.567,87,2.902,88,0.975,91,0.746,98,1.103,100,1.087,101,0.503,102,0.77,105,1.002,110,0.79,112,0.746,113,0.746,117,1.013,118,1.712,121,1.347,270,1.263,296,2.447,297,1.583,311,1.583,347,1.14,348,1.828,349,1.583,351,2.496,360,1.712,362,2.239,368,2.871,384,1.583,385,1.466,386,1.712,387,1.712,388,1.589,389,2.745,406,2.902,551,1.858,552,2.219,553,2.496,554,2.708,614,3.137,615,4.88,616,5.769,617,4.88,618,4.88,619,4.88,620,3.731,621,3.731,622,4.88,623,3.731,624,4.88,625,3.731,626,3.731]],["title/components/FooterComponent.html",[0,0.165,18,0.83]],["body/components/FooterComponent.html",[0,0.27,1,0.851,2,1.304,3,0.297,4,0.257,5,1.065,6,1.065,7,1.065,8,0.257,10,1.065,11,1.947,12,1.697,14,1.404,15,1.304,16,0.989,17,0.918,18,1.44,20,1.404,22,3.158,24,0.516,25,0.028,26,0.469,31,0.297,32,0.516,33,0.989,34,1.404,35,1.404,36,1.065,37,1.67,38,1.065,39,0.445,40,1.065,41,0.851,42,1.459,43,0.918,44,1.404,45,0.851,46,1.21,47,0.851,48,1.065,49,0.918,50,1.065,51,0.851,52,1.404,53,1.065,54,0.918,55,1.065,56,0.851,57,1.065,58,1.065,59,0.851,60,1.065,61,0.851,62,1.065,63,1.065,64,0.851,65,1.065,66,0.851,67,0.989,68,1.065,69,1.065,70,0.02,71,0.02,588,2.846,627,3.063,628,4.804,629,4.804,630,4.804,631,4.204,632,5.715,633,4.804,634,4.804,635,4.804,636,4.804,637,4.804,638,4.804,639,4.804,640,4.804,641,4.804,642,4.804,643,4.804,644,4.804,645,4.804]],["title/components/HomeComponent.html",[0,0.165,59,0.769]],["body/components/HomeComponent.html",[0,0.186,1,0.444,2,0.813,3,0.155,4,0.134,5,0.556,6,0.556,7,0.556,8,0.134,10,0.556,11,1.762,12,1.519,14,0.875,15,0.813,16,0.813,17,0.479,18,0.479,20,0.875,24,0.768,25,0.029,26,0.245,29,0.556,31,0.155,32,0.269,33,0.516,34,0.875,35,1.229,36,0.556,37,1.705,38,0.556,39,0.343,40,0.556,41,0.444,42,1.006,43,0.479,44,0.875,45,0.444,46,1.059,47,0.444,48,0.556,49,0.479,50,0.556,51,0.444,52,1.083,53,0.556,54,1.059,55,0.556,56,0.444,57,0.556,58,0.556,59,0.982,60,0.556,61,0.444,62,0.556,63,0.556,64,0.444,65,0.556,66,0.444,67,0.516,68,0.556,69,0.556,70,0.021,71,0.013,72,1.456,76,1.177,77,1.572,80,1.7,81,1.177,84,0.244,85,0.348,88,0.598,89,1.783,91,0.598,94,2.204,95,3.093,97,2.419,98,0.999,100,0.38,101,0.389,102,0.269,105,0.843,106,1.705,110,0.477,112,0.38,113,0.38,116,1.25,117,1.242,118,0.872,119,0.806,121,1.135,132,0.806,134,1.929,135,1.625,136,1.625,155,2.203,165,3.133,178,1.598,203,1.598,204,1.598,207,1.667,212,3.574,314,1.25,315,1.598,330,2.203,344,2.204,345,4.084,388,0.556,407,2.758,452,1.399,474,1.399,480,2.518,536,1.781,539,3.534,588,2.419,631,3.093,646,1.598,647,3.706,648,3.706,649,3.706,650,3.706,651,3.706,652,3.706,653,5.42,654,5.42,655,5.42,656,4.858,657,3.706,658,3.706,659,5.42,660,3.706,661,3.706,662,3.706,663,3.706,664,3.706,665,3.706,666,3.115,667,3.706,668,3.706,669,3.706,670,5.42,671,3.706,672,3.706,673,3.115,674,3.706,675,3.706,676,4.084,677,3.706,678,2.995,679,3.706,680,4.204,681,4.204,682,4.204,683,2.995,684,1.901,685,1.901,686,1.901,687,1.901,688,1.901,689,1.901,690,1.901,691,1.901,692,1.901,693,2.995,694,1.901,695,1.901,696,3.706,697,1.598,698,3.706,699,2.995,700,2.995,701,2.995,702,2.995,703,2.995,704,3.706,705,1.901,706,1.901,707,1.901,708,1.901,709,1.901,710,1.901,711,1.901,712,1.901,713,1.901,714,1.901,715,1.901,716,1.901,717,1.901,718,1.901,719,1.901,720,1.901,721,1.901,722,1.901,723,2.518,724,2.518,725,2.518,726,2.995,727,2.995,728,2.995,729,2.995,730,4.204,731,2.995,732,2.995,733,2.995,734,2.518]],["title/components/LoginComponent.html",[0,0.165,61,0.769]],["body/components/LoginComponent.html",[0,0.228,1,0.62,2,1.047,3,0.216,4,0.188,5,0.776,6,0.776,7,0.776,8,0.188,10,0.776,11,1.868,12,1.61,14,1.128,15,1.233,16,1.047,17,0.669,18,0.669,20,1.128,24,0.75,25,0.029,26,0.342,29,0.776,31,0.216,32,0.376,33,0.721,34,1.128,35,1.128,36,0.776,37,1.458,38,0.776,39,0.421,40,0.776,41,0.62,42,1.233,43,0.669,44,1.128,45,0.62,46,0.972,47,0.62,48,0.776,49,0.669,50,0.776,51,0.62,52,1.128,53,0.776,54,0.669,55,0.776,56,0.62,57,0.776,58,0.776,59,0.62,60,0.776,61,1.165,62,0.776,63,0.776,64,0.62,65,0.776,66,0.62,67,0.721,68,0.776,69,0.776,70,0.016,71,0.016,72,1.043,76,1.516,77,1.927,79,2.987,80,1.77,81,1.516,84,0.216,85,0.448,88,0.771,89,2.116,90,3.278,91,0.771,92,1.745,93,3.278,96,2.617,98,1.018,100,0.531,101,0.421,102,0.376,103,2.536,105,0.711,106,1.569,108,2.987,110,0.496,111,2.483,112,0.771,113,0.771,114,1.745,115,1.441,119,1.126,121,1.061,123,1.745,124,2.536,132,1.126,134,2.085,144,1.745,153,3.278,196,2.085,207,0.968,321,2.294,333,3.482,334,1.954,348,1.667,370,3.84,372,3.475,378,1.954,388,0.776,455,2.838,489,2.838,506,2.232,735,2.232,736,4.544,737,3.858,738,3.897,739,3.343,740,4.544,741,3.858,742,2.656,743,2.656,744,2.656,745,2.656,746,1.954,747,2.232,748,2.656,749,1.954,750,2.232,751,4.544,752,1.954,753,2.656,754,2.656,755,2.656,756,2.656,757,2.656,758,2.656,759,3.243,760,2.232,761,2.232,762,4.544,763,2.656,764,2.232,765,2.232,766,1.954,767,2.232,768,3.243,769,3.243,770,3.243,771,3.243,772,3.243,773,3.243,774,3.243,775,3.243,776,3.243]],["title/components/NavbarComponent.html",[0,0.165,17,0.83]],["body/components/NavbarComponent.html",[0,0.246,1,0.71,2,1.154,3,0.248,4,0.215,5,0.889,6,0.889,7,0.889,8,0.215,10,0.889,11,1.904,12,1.641,14,1.242,15,1.154,16,1.154,17,1.336,18,0.766,20,1.242,24,0.751,25,0.029,26,0.391,29,0.889,31,0.248,32,0.431,33,0.826,34,1.242,35,1.242,36,0.889,37,1.55,38,0.889,39,0.491,40,0.889,41,0.71,42,1.33,43,0.766,44,1.242,45,0.71,46,1.071,47,0.71,48,0.889,49,0.766,50,0.889,51,0.71,52,1.242,53,0.889,54,0.766,55,0.889,56,0.71,57,0.889,58,0.889,59,0.71,60,0.889,61,0.71,62,0.889,63,0.889,64,0.71,65,0.889,66,0.71,67,0.826,68,0.889,69,0.889,70,0.018,71,0.018,72,1.195,76,1.67,77,2.078,80,2.248,81,1.67,84,0.248,85,0.494,88,0.849,89,2.25,91,0.608,94,1.809,96,2.653,98,1.028,100,0.849,101,0.454,102,0.602,105,0.902,106,1.819,110,0.63,112,0.608,113,0.608,119,1.29,121,0.71,158,2.794,192,2.116,196,1.95,270,1.03,321,2.913,330,3.127,333,2.794,348,1.734,352,4.118,357,4.86,524,2.238,582,3.573,584,3.573,588,2.116,631,3.127,666,2.557,673,2.557,676,3.573,723,3.573,724,3.573,746,2.238,777,2.557,778,4.25,779,4.899,780,4.25,781,4.25,782,3.042,783,3.042,784,3.042,785,3.042,786,3.042,787,3.042,788,3.042,789,3.042,790,2.557,791,3.042,792,3.042,793,4.25,794,3.042,795,2.557]],["title/components/ProfilComponent.html",[0,0.165,64,0.769]],["body/components/ProfilComponent.html",[0,0.186,1,0.445,2,0.814,3,0.155,4,0.134,5,0.556,6,0.556,7,0.556,8,0.134,10,0.556,11,1.763,12,1.52,14,0.876,15,1.006,16,0.814,17,0.479,18,0.479,20,0.876,24,0.815,25,0.029,26,0.245,31,0.155,32,0.269,33,0.517,34,0.876,35,0.876,36,0.556,37,1.229,38,0.556,39,0.514,40,0.556,41,0.445,42,1.006,43,0.479,44,0.876,45,0.445,46,1.06,47,0.445,48,0.556,49,0.479,50,0.556,51,0.445,52,0.876,53,0.556,54,0.479,55,0.556,56,0.445,57,0.556,58,0.556,59,0.445,60,0.556,61,0.445,62,0.556,63,0.556,64,0.983,65,0.556,66,0.445,67,0.517,68,0.556,69,0.556,70,0.013,71,0.013,72,0.748,76,1.178,77,1.573,79,2.437,80,1.701,81,1.178,84,0.155,85,0.348,88,0.599,89,1.784,90,2.765,91,0.599,92,1.251,93,2.765,98,1.101,100,0.38,101,0.471,102,0.269,103,1.97,105,0.937,106,1.859,108,2.437,110,0.541,111,2.906,112,0.971,113,0.971,114,1.251,115,1.033,117,1.242,118,0.873,119,0.807,121,0.983,123,1.251,124,1.97,125,1.97,126,2.637,132,1.784,134,2.641,135,2.282,136,2.012,146,1.6,153,2.765,155,2.205,156,2.205,157,1.97,158,2.437,161,2.728,162,2.728,163,2.728,164,2.437,165,3.025,192,1.492,196,2.1,198,1.4,199,1.4,200,1.4,201,1.251,229,2.205,230,2.205,231,2.205,232,2.205,233,2.205,246,3.536,249,3.025,255,2.128,267,1.251,268,1.6,344,1.132,372,2.721,388,0.556,406,3.025,407,2.759,451,1.6,452,1.4,466,1.6,470,1.6,473,1.6,474,2.205,477,1.6,479,3.536,481,1.626,562,1.6,738,2.728,739,2.728,749,1.4,752,1.4,766,1.4,796,1.6,797,2.997,798,3.708,799,2.997,800,3.708,801,3.708,802,3.708,803,4.576,804,4.207,805,4.207,806,4.207,807,4.207,808,2.997,809,1.903,810,1.903,811,1.903,812,1.903,813,1.903,814,1.903,815,1.903,816,1.903,817,1.903,818,1.903,819,1.903,820,1.903,821,1.903,822,1.903,823,1.6,824,1.903,825,1.903,826,1.903,827,1.903,828,2.997,829,1.903,830,1.903,831,2.997,832,1.903,833,4.576,834,1.903,835,1.903,836,1.903,837,1.903,838,1.903,839,1.903,840,2.997,841,2.997,842,2.52,843,2.52,844,2.997,845,2.997,846,2.52,847,2.52,848,2.997]],["title/injectables/ResultsService.html",[347,0.769,849,2.423]],["body/injectables/ResultsService.html",[3,0.337,4,0.292,8,0.292,24,0.875,25,0.029,26,0.532,31,0.337,32,0.586,39,0.483,70,0.022,71,0.022,84,0.337,85,0.606,88,1.042,91,0.827,98,1.052,100,1.042,101,0.483,102,0.739,105,0.762,110,0.735,112,0.827,113,0.827,121,1.401,270,1.401,296,2.544,297,1.756,311,1.756,347,1.218,348,1.873,349,1.756,351,2.621,360,1.899,362,2.394,368,2.621,384,1.756,385,1.626,386,1.899,387,1.899,388,1.21,551,2.061,553,1.899,554,2.061,849,3.837,850,3.479,851,5.216,852,5.216,853,5.216,854,4.139,855,4.139,856,5.216,857,4.139]],["title/components/SignupComponent.html",[0,0.165,66,0.769]],["body/components/SignupComponent.html",[0,0.211,1,0.545,2,0.951,3,0.19,4,0.165,5,0.681,6,0.681,7,0.681,8,0.165,10,0.681,11,1.829,12,1.577,14,1.024,15,1.271,16,0.951,17,0.587,18,0.587,20,1.024,24,0.711,25,0.029,26,0.3,29,0.681,31,0.19,32,0.33,33,0.633,34,1.024,35,1.024,36,0.681,37,1.368,38,0.681,39,0.551,40,0.681,41,0.545,42,1.143,43,0.587,44,1.024,45,0.545,46,0.883,47,0.545,48,0.681,49,0.587,50,0.681,51,0.545,52,1.024,53,0.681,54,0.587,55,0.681,56,0.545,57,0.681,58,0.681,59,0.545,60,0.681,61,0.545,62,0.681,63,0.681,64,0.545,65,0.681,66,1.094,67,1.143,68,0.681,69,0.681,70,0.015,71,0.015,72,0.916,76,1.377,77,1.786,79,2.768,80,1.608,81,1.377,84,0.19,85,0.407,88,0.7,89,1.986,90,3.078,91,0.7,92,1.533,93,3.078,96,2.51,98,1.008,100,0.7,101,0.433,102,0.496,103,2.304,105,0.776,106,1.579,108,3.595,110,0.724,111,2.331,112,0.841,113,0.7,114,1.533,115,1.265,119,0.989,121,0.984,123,1.533,124,3.078,132,0.989,134,1.932,144,1.533,153,3.699,196,1.608,207,1.278,255,0.85,288,2.578,321,2.084,348,1.599,370,3.966,372,3.253,388,1.231,455,2.578,489,2.578,505,2.946,515,3.936,738,3.693,739,3.098,746,1.715,747,1.96,749,1.715,750,1.96,752,1.715,759,2.946,760,1.96,761,1.96,766,1.715,767,1.96,768,2.946,769,2.946,770,2.946,771,2.946,772,2.946,773,3.936,774,3.936,775,3.936,776,4.433,790,1.96,823,1.96,847,4.433,858,1.96,859,4.211,860,3.505,861,4.211,862,3.505,863,3.505,864,3.505,865,5.02,866,2.332,867,2.332,868,2.332,869,2.332,870,2.332,871,2.332,872,3.505,873,2.332,874,2.332,875,1.96,876,4.211,877,4.211,878,2.332,879,2.332,880,2.332,881,2.332,882,2.332,883,2.332,884,2.332,885,2.332,886,2.332,887,2.332,888,2.332,889,2.332,890,2.332,891,2.332,892,2.332,893,3.505,894,3.505]],["title/interfaces/User.html",[255,1.2,530,1.2]],["body/interfaces/User.html",[3,0.316,4,0.274,8,0.274,25,0.029,31,0.316,39,0.542,42,1.505,70,0.021,71,0.021,84,0.316,85,0.582,101,0.608,102,0.955,110,0.873,117,1.054,128,4.309,255,2.21,287,4.923,288,4.309,370,3.85,372,3.483,467,4.923,530,1.415,531,2.107,533,3.483,534,3.483,535,3.483,536,3.691,593,3.264,594,3.264,697,4.66,895,3.264,896,5.857]],["title/injectables/UserService.html",[249,1.958,347,0.769]],["body/injectables/UserService.html",[3,0.281,4,0.244,8,0.244,24,0.851,25,0.029,26,0.444,31,0.281,32,0.489,39,0.518,70,0.02,71,0.02,84,0.281,85,0.539,88,0.927,91,0.69,98,1.131,100,1.118,101,0.518,102,0.792,105,1.075,110,0.773,112,0.69,113,0.69,121,1.307,245,3.899,249,2.758,255,2.191,267,2.271,270,1.17,296,2.373,297,1.466,311,1.466,347,1.083,348,1.794,349,1.466,351,2.402,360,1.585,362,2.128,368,2.956,384,1.466,385,1.358,386,1.585,387,1.585,388,1.706,438,2.758,551,1.72,552,2.055,553,2.678,554,2.906,555,2.542,558,2.542,897,2.905,898,4.638,899,5.596,900,5.596,901,4.638,902,4.638,903,4.638,904,3.455,905,4.638,906,3.455,907,3.455,908,3.455,909,4.638,910,3.455,911,4.638,912,3.455,913,3.455]],["title/interfaces/Vote.html",[481,1.787,530,1.2]],["body/interfaces/Vote.html",[3,0.36,4,0.312,8,0.312,25,0.029,31,0.36,39,0.409,70,0.023,71,0.023,84,0.36,85,0.631,101,0.602,102,0.909,110,0.836,117,1.711,255,2.297,438,3.232,481,2.949,530,1.612,531,2.399,533,3.748,534,3.651,535,3.651,536,3.815,561,4.569,914,3.717,915,4.421]],["title/injectables/VoteService.html",[347,0.769,407,1.787]],["body/injectables/VoteService.html",[3,0.292,4,0.253,8,0.253,24,0.86,25,0.029,26,0.461,31,0.292,32,0.508,39,0.494,70,0.02,71,0.02,84,0.292,85,0.552,87,3.171,88,0.95,91,0.716,98,1.119,100,1.066,101,0.494,102,0.755,105,1.046,110,0.781,112,0.716,113,0.716,121,1.326,207,1.307,270,1.214,296,2.409,297,1.52,311,1.52,347,1.11,348,1.811,349,1.52,351,2.447,360,1.645,362,2.181,368,2.922,384,1.52,385,1.409,386,1.645,387,1.645,388,1.66,407,2.579,420,3.996,481,1.945,551,1.785,552,2.132,553,2.606,554,2.828,556,2.637,575,3.996,916,3.013,917,5.679,918,5.679,919,4.753,920,4.753,921,4.753,922,3.585,923,3.585,924,3.585,925,4.753,926,3.585,927,4.753,928,3.585,929,3.585,930,3.585]],["title/coverage.html",[931,3.774]],["body/coverage.html",[0,0.327,1,0.76,8,0.23,9,2.735,12,0.82,17,0.82,18,0.82,25,0.029,41,0.76,43,1.122,45,0.76,46,1.375,47,0.76,49,0.82,51,0.76,54,0.82,56,0.76,59,0.76,61,0.76,64,0.76,66,0.76,70,0.019,71,0.019,73,3.337,74,2.927,75,3.276,97,1.62,101,0.301,117,0.883,237,2.394,238,2.735,249,1.935,255,1.186,293,2.735,305,2.139,314,2.139,344,4.062,347,1.437,348,0.951,350,2.735,381,2.139,385,1.75,403,3.276,404,2.735,405,2.139,406,1.935,407,1.765,445,1.935,481,1.765,518,2.735,530,2.084,532,2.735,537,2.735,559,2.735,565,2.735,579,2.735,588,1.62,589,2.735,595,2.394,596,2.735,614,2.735,627,2.735,646,2.735,735,2.735,777,2.735,796,2.735,849,2.394,850,2.735,858,2.735,895,2.735,897,2.735,914,2.735,916,2.735,931,2.735,932,3.254,933,3.254,934,3.254,935,3.743,936,4.453,937,6.375,938,2.394,939,3.254,940,3.743,941,6.044,942,2.735,943,2.735,944,2.735,945,2.735,946,3.254,947,4.453,948,5.717,949,5.077,950,3.254,951,3.254,952,5.077,953,5.459,954,4.453,955,4.453,956,2.735,957,2.735,958,2.735,959,2.735,960,2.735,961,2.394,962,3.254,963,3.254]],["title/dependencies.html",[964,2.025,965,2.913]],["body/dependencies.html",[25,0.029,26,0.572,29,1.301,70,0.023,71,0.023,115,2.415,119,1.888,312,4.962,313,4.588,384,1.888,795,3.741,965,3.274,966,4.451,967,6.622,968,4.451,969,4.451,970,3.741,971,4.451,972,3.741,973,4.451,974,4.451,975,4.451,976,4.451,977,5.457,978,4.451,979,5.457,980,4.451,981,4.451,982,4.451,983,4.451,984,4.451,985,4.451,986,4.451,987,4.451,988,4.451,989,4.451,990,4.451,991,4.451,992,4.451,993,4.451,994,4.451,995,4.451,996,4.451,997,4.451]],["title/miscellaneous/functions.html",[998,1.809,999,3.328]],["body/miscellaneous/functions.html",[12,1.575,25,0.027,70,0.025,71,0.025,84,0.415,105,1.09,106,1.602,935,5.255,938,4.599,998,3.348,999,4.282,1000,5.094]],["title/index.html",[84,0.224,1001,2.752,1002,2.752]],["body/index.html",[0,0.289,4,0.297,25,0.022,39,0.389,70,0.022,71,0.022,76,1.65,152,3.089,228,2.76,301,3.53,342,3.53,381,2.76,725,3.53,734,3.53,764,3.53,765,3.53,843,3.53,846,3.53,875,3.53,938,4.567,964,3.089,970,4.425,972,3.53,1003,5.264,1004,4.199,1005,5.75,1006,5.75,1007,3.53,1008,4.199,1009,6.428,1010,4.199,1011,4.199,1012,4.199,1013,4.199,1014,4.199,1015,4.199,1016,4.199,1017,5.75,1018,5.75,1019,4.199,1020,6.028,1021,4.199,1022,4.199,1023,4.199,1024,4.199,1025,5.264,1026,5.264,1027,6.028,1028,4.199,1029,5.264,1030,5.264,1031,4.199,1032,6.335,1033,4.199,1034,4.199,1035,4.199,1036,5.264,1037,4.199,1038,4.199,1039,4.199,1040,4.199,1041,4.199,1042,5.75,1043,3.089,1044,4.199]],["title/modules.html",[318,3.303]],["body/modules.html",[25,0.026,70,0.026,71,0.026,317,3.876,318,3.876,842,4.429,1045,5.268,1046,5.268]],["title/overview.html",[1043,3.303]],["body/overview.html",[2,1.376,25,0.025,33,1.376,70,0.025,71,0.025,152,3.729,294,3.331,316,4.958,346,4.261,349,2.15,531,2.75,961,3.729,965,3.729,1043,3.729,1047,5.069,1048,5.898,1049,5.069,1050,5.069,1051,5.069,1052,5.069,1053,5.069]],["title/properties.html",[85,0.46,964,2.025]],["body/properties.html",[25,0.027,70,0.026,71,0.026,85,0.613,1007,4.44,1054,5.282]],["title/miscellaneous/variables.html",[998,1.809,1055,3.328]],["body/miscellaneous/variables.html",[15,1.349,25,0.029,70,0.021,71,0.021,84,0.313,101,0.559,112,1.259,113,1.259,132,1.628,196,1.761,207,2.01,228,3.267,294,3.267,348,1.122,378,4.444,385,2.291,388,1.453,399,3.227,553,1.761,564,4.179,940,3.227,942,4.635,943,4.635,944,3.227,945,4.179,956,3.227,957,4.179,958,3.227,959,3.227,960,3.227,961,3.657,998,2.523,1055,3.227,1056,3.838,1057,3.838,1058,3.838,1059,4.971,1060,3.838,1061,3.838,1062,4.971,1063,3.838,1064,3.838,1065,3.838,1066,3.838,1067,3.838,1068,3.838,1069,3.838,1070,3.838,1071,3.838,1072,3.838,1073,4.971,1074,4.971,1075,5.513,1076,3.838,1077,3.838,1078,3.838,1079,3.838,1080,3.838,1081,3.838,1082,3.838,1083,3.838,1084,4.971,1085,4.971,1086,4.971]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"interfaces/Candidate.html":{},"injectables/CandidateService.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"interfaces/Election.html":{},"injectables/ElectionService.html":{},"injectables/FavoriteService.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"injectables/ResultsService.html":{},"components/SignupComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/Vote.html":{},"injectables/VoteService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":344,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CandidatDetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProfilComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1054,"title":{},"body":{"properties.html":{}}}],["0.14.10",{"_index":997,"title":{},"body":{"dependencies.html":{}}}],["0.15.0",{"_index":975,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":937,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":951,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":955,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":949,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":946,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":939,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":950,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":947,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":948,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":952,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":953,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":954,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":1050,"title":{},"body":{"overview.html":{}}}],["100",{"_index":658,"title":{},"body":{"components/HomeComponent.html":{}}}],["14",{"_index":1051,"title":{},"body":{"overview.html":{}}}],["16.1.3",{"_index":984,"title":{},"body":{"dependencies.html":{}}}],["17.18.11",{"_index":992,"title":{},"body":{"dependencies.html":{}}}],["18.2.0",{"_index":967,"title":{},"body":{"dependencies.html":{}}}],["18.2.7",{"_index":972,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["1px",{"_index":794,"title":{},"body":{"components/NavbarComponent.html":{}}}],["2.3.0",{"_index":995,"title":{},"body":{"dependencies.html":{}}}],["2024",{"_index":632,"title":{},"body":{"components/FooterComponent.html":{}}}],["3",{"_index":894,"title":{},"body":{"components/SignupComponent.html":{}}}],["300",{"_index":671,"title":{},"body":{"components/HomeComponent.html":{}}}],["36a2eb",{"_index":702,"title":{},"body":{"components/HomeComponent.html":{}}}],["3s",{"_index":661,"title":{},"body":{"components/HomeComponent.html":{}}}],["4.18.2",{"_index":988,"title":{},"body":{"dependencies.html":{}}}],["4.4.6",{"_index":986,"title":{},"body":{"dependencies.html":{}}}],["4bc0c0",{"_index":700,"title":{},"body":{"components/HomeComponent.html":{}}}],["5",{"_index":1053,"title":{},"body":{"overview.html":{}}}],["50",{"_index":345,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{}}}],["6",{"_index":772,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["6.6.0",{"_index":979,"title":{},"body":{"dependencies.html":{}}}],["600",{"_index":672,"title":{},"body":{"components/HomeComponent.html":{}}}],["7.0.0",{"_index":990,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":993,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1052,"title":{},"body":{"overview.html":{}}}],["9966ff",{"_index":703,"title":{},"body":{"components/HomeComponent.html":{}}}],["_id",{"_index":533,"title":{},"body":{"interfaces/Candidate.html":{},"interfaces/Comment.html":{},"interfaces/Election.html":{},"interfaces/User.html":{},"interfaces/Vote.html":{}}}],["a.active",{"_index":791,"title":{},"body":{"components/NavbarComponent.html":{}}}],["account",{"_index":776,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["accueil",{"_index":13,"title":{},"body":{"components/AccueilComponent.html":{},"modules/AppRoutingModule.html":{}}}],["accueil'},{'name",{"_index":40,"title":{},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{}}}],["accueil.component.css",{"_index":23,"title":{},"body":{"components/AccueilComponent.html":{}}}],["accueil.component.html",{"_index":21,"title":{},"body":{"components/AccueilComponent.html":{}}}],["accueilcomponent",{"_index":1,"title":{"components/AccueilComponent.html":{}},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{}}}],["actions",{"_index":289,"title":{},"body":{"components/AdminListUsersComponent.html":{}}}],["activatedroute",{"_index":95,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/HomeComponent.html":{}}}],["actual_component",{"_index":69,"title":{},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{}}}],["add",{"_index":228,"title":{},"body":{"components/AdminListCandidatsComponent.html":{},"components/CandidatDetailsComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["addcandidate",{"_index":171,"title":{},"body":{"components/AdminListCandidatsComponent.html":{}}}],["addcomment",{"_index":419,"title":{},"body":{"components/CandidatDetailsComponent.html":{},"injectables/CommentService.html":{}}}],["addcomment(candidateid",{"_index":568,"title":{},"body":{"injectables/CommentService.html":{}}}],["addcomment(this.candidate._id",{"_index":487,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["added",{"_index":148,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/CandidatDetailsComponent.html":{}}}],["addfavorite",{"_index":615,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["addfavorite(candidateid",{"_index":619,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["adding",{"_index":149,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/CandidatDetailsComponent.html":{}}}],["address",{"_index":771,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["adduser",{"_index":244,"title":{},"body":{"components/AdminListUsersComponent.html":{}}}],["admin",{"_index":42,"title":{},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{},"interfaces/User.html":{}}}],["adminformcandidatscomponent",{"_index":41,"title":{"components/AdminFormCandidatsComponent.html":{}},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{}}}],["adminlistcandidatscomponent",{"_index":45,"title":{"components/AdminListCandidatsComponent.html":{}},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{}}}],["adminlistuserscomponent",{"_index":47,"title":{"components/AdminListUsersComponent.html":{}},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{}}}],["affiliated",{"_index":642,"title":{},"body":{"components/FooterComponent.html":{}}}],["afterviewchecked",{"_index":647,"title":{},"body":{"components/HomeComponent.html":{}}}],["again",{"_index":839,"title":{},"body":{"components/ProfilComponent.html":{}}}],["age",{"_index":287,"title":{},"body":{"components/AdminListUsersComponent.html":{},"interfaces/User.html":{}}}],["agency",{"_index":645,"title":{},"body":{"components/FooterComponent.html":{}}}],["alert('candidate",{"_index":142,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{}}}],["alert('please",{"_index":150,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{}}}],["already",{"_index":505,"title":{},"body":{"components/CandidatDetailsComponent.html":{},"components/SignupComponent.html":{}}}],["alreadyfavorite",{"_index":413,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["anchorscrolling",{"_index":340,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["angular",{"_index":1005,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":966,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":119,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":311,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CandidateService.html":{},"injectables/CommentService.html":{},"injectables/ElectionService.html":{},"injectables/FavoriteService.html":{},"injectables/ResultsService.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{}}}],["angular/compiler",{"_index":968,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":26,"title":{},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"injectables/CandidateService.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"injectables/ElectionService.html":{},"injectables/FavoriteService.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"injectables/ResultsService.html":{},"components/SignupComponent.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":115,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/LoginComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":312,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":29,"title":{},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SignupComponent.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":971,"title":{},"body":{"dependencies.html":{}}}],["animateonscrollmodule",{"_index":649,"title":{},"body":{"components/HomeComponent.html":{}}}],["animation",{"_index":659,"title":{},"body":{"components/HomeComponent.html":{}}}],["another",{"_index":506,"title":{},"body":{"components/CandidatDetailsComponent.html":{},"components/LoginComponent.html":{}}}],["apibaseurl",{"_index":1085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiurl",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CandidateService.html":{},"injectables/CommentService.html":{},"injectables/ElectionService.html":{},"injectables/FavoriteService.html":{},"injectables/ResultsService.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["app.component.css",{"_index":299,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":298,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":49,"title":{"components/AppComponent.html":{}},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":945,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":725,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["applicationconfig",{"_index":1062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["approutingmodule",{"_index":317,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules.html":{}}}],["array",{"_index":593,"title":{},"body":{"interfaces/Election.html":{},"interfaces/User.html":{}}}],["artifacts",{"_index":1021,"title":{},"body":{"index.html":{}}}],["auth.service",{"_index":551,"title":{},"body":{"injectables/CandidateService.html":{},"injectables/CommentService.html":{},"injectables/ElectionService.html":{},"injectables/FavoriteService.html":{},"injectables/ResultsService.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{}}}],["authinterceptor",{"_index":957,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authorization",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{}}}],["authservice",{"_index":348,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/CandidateService.html":{},"injectables/CommentService.html":{},"injectables/ElectionService.html":{},"injectables/FavoriteService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/ResultsService.html":{},"components/SignupComponent.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authservice.gettoken",{"_index":1072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["automatically",{"_index":1013,"title":{},"body":{"index.html":{}}}],["available",{"_index":842,"title":{},"body":{"components/ProfilComponent.html":{},"modules.html":{}}}],["background",{"_index":666,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{}}}],["backgroundcolor",{"_index":698,"title":{},"body":{"components/HomeComponent.html":{}}}],["bearer",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["behavior",{"_index":721,"title":{},"body":{"components/HomeComponent.html":{}}}],["behaviorsubject",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{}}}],["behaviorsubject(this.hastoken",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{}}}],["bio",{"_index":896,"title":{},"body":{"interfaces/User.html":{}}}],["biography",{"_index":126,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/CandidatDetailsComponent.html":{},"interfaces/Candidate.html":{},"components/ProfilComponent.html":{}}}],["body",{"_index":575,"title":{},"body":{"injectables/CommentService.html":{},"injectables/VoteService.html":{}}}],["boolean",{"_index":192,"title":{},"body":{"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"injectables/AuthService.html":{},"components/CandidatDetailsComponent.html":{},"interfaces/Election.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{}}}],["bootstrap",{"_index":961,"title":{},"body":{"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(appcomponent",{"_index":1081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["border",{"_index":673,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{}}}],["box",{"_index":665,"title":{},"body":{"components/HomeComponent.html":{}}}],["browse",{"_index":1046,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":313,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["browsermodule",{"_index":295,"title":{},"body":{"components/AppComponent.html":{}}}],["build",{"_index":1020,"title":{},"body":{"index.html":{}}}],["c",{"_index":220,"title":{},"body":{"components/AdminListCandidatsComponent.html":{}}}],["c._id",{"_index":221,"title":{},"body":{"components/AdminListCandidatsComponent.html":{}}}],["cancel",{"_index":516,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["cancelch",{"_index":804,"title":{},"body":{"components/ProfilComponent.html":{}}}],["cancelsup",{"_index":172,"title":{},"body":{"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{}}}],["candidat",{"_index":52,"title":{},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{}}}],["candidatdetailscomponent",{"_index":51,"title":{"components/CandidatDetailsComponent.html":{}},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{}}}],["candidatdivcomponent",{"_index":54,"title":{"components/CandidatDivComponent.html":{}},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{}}}],["candidate",{"_index":117,"title":{"interfaces/Candidate.html":{}},"body":{"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"interfaces/Candidate.html":{},"injectables/CandidateService.html":{},"interfaces/Comment.html":{},"interfaces/Election.html":{},"injectables/FavoriteService.html":{},"components/HomeComponent.html":{},"components/ProfilComponent.html":{},"interfaces/User.html":{},"interfaces/Vote.html":{},"coverage.html":{}}}],["candidate._id",{"_index":227,"title":{},"body":{"components/AdminListCandidatsComponent.html":{}}}],["candidate.biography",{"_index":231,"title":{},"body":{"components/AdminListCandidatsComponent.html":{},"components/CandidatDivComponent.html":{},"components/ProfilComponent.html":{}}}],["candidate.electoralprogram",{"_index":232,"title":{},"body":{"components/AdminListCandidatsComponent.html":{},"components/CandidatDivComponent.html":{},"components/ProfilComponent.html":{}}}],["candidate.name",{"_index":229,"title":{},"body":{"components/AdminListCandidatsComponent.html":{},"components/CandidatDivComponent.html":{},"components/ProfilComponent.html":{}}}],["candidate.party",{"_index":230,"title":{},"body":{"components/AdminListCandidatsComponent.html":{},"components/CandidatDivComponent.html":{},"components/ProfilComponent.html":{}}}],["candidate/:id",{"_index":331,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["candidate?.biography",{"_index":507,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["candidate?.electoralprogram",{"_index":508,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["candidate?.name",{"_index":504,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["candidateform",{"_index":86,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{}}}],["candidateid",{"_index":87,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/CandidatDetailsComponent.html":{},"injectables/CommentService.html":{},"injectables/FavoriteService.html":{},"injectables/VoteService.html":{}}}],["candidates",{"_index":165,"title":{},"body":{"components/AdminListCandidatsComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/Election.html":{},"components/HomeComponent.html":{},"components/ProfilComponent.html":{}}}],["candidates/add",{"_index":335,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["candidates/edit/:id",{"_index":336,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["candidateservice",{"_index":97,"title":{"injectables/CandidateService.html":{}},"body":{"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/CandidatDetailsComponent.html":{},"injectables/CandidateService.html":{},"components/HomeComponent.html":{},"coverage.html":{}}}],["candidats",{"_index":78,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/DashboardComponent.html":{}}}],["candidats'},{'name",{"_index":44,"title":{},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{}}}],["candidats.component",{"_index":324,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["candidats.component.css",{"_index":82,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{}}}],["candidats.component.html",{"_index":83,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{}}}],["candidats.component.ts",{"_index":75,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"coverage.html":{}}}],["candidats.component.ts:18",{"_index":193,"title":{},"body":{"components/AdminListCandidatsComponent.html":{}}}],["candidats.component.ts:19",{"_index":197,"title":{},"body":{"components/AdminListCandidatsComponent.html":{}}}],["candidats.component.ts:20",{"_index":195,"title":{},"body":{"components/AdminListCandidatsComponent.html":{}}}],["candidats.component.ts:21",{"_index":109,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{}}}],["candidats.component.ts:22",{"_index":99,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{}}}],["candidats.component.ts:23",{"_index":179,"title":{},"body":{"components/AdminListCandidatsComponent.html":{}}}],["candidats.component.ts:30",{"_index":186,"title":{},"body":{"components/AdminListCandidatsComponent.html":{}}}],["candidats.component.ts:34",{"_index":185,"title":{},"body":{"components/AdminListCandidatsComponent.html":{}}}],["candidats.component.ts:39",{"_index":104,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{}}}],["candidats.component.ts:48",{"_index":189,"title":{},"body":{"components/AdminListCandidatsComponent.html":{}}}],["candidats.component.ts:53",{"_index":107,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{}}}],["candidats.component.ts:61",{"_index":191,"title":{},"body":{"components/AdminListCandidatsComponent.html":{}}}],["candidats.component.ts:66",{"_index":181,"title":{},"body":{"components/AdminListCandidatsComponent.html":{}}}],["candidats.component.ts:71",{"_index":182,"title":{},"body":{"components/AdminListCandidatsComponent.html":{}}}],["candidats.component.ts:93",{"_index":180,"title":{},"body":{"components/AdminListCandidatsComponent.html":{}}}],["candidats.component.ts:97",{"_index":184,"title":{},"body":{"components/AdminListCandidatsComponent.html":{}}}],["candidats/admin",{"_index":74,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["capabilities",{"_index":1040,"title":{},"body":{"index.html":{}}}],["cast",{"_index":502,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["casting",{"_index":503,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["castvote",{"_index":420,"title":{},"body":{"components/CandidatDetailsComponent.html":{},"injectables/VoteService.html":{}}}],["castvote(candidateid",{"_index":921,"title":{},"body":{"injectables/VoteService.html":{}}}],["catch((error",{"_index":716,"title":{},"body":{"components/HomeComponent.html":{}}}],["change",{"_index":846,"title":{},"body":{"components/ProfilComponent.html":{},"index.html":{}}}],["changeinfoform",{"_index":800,"title":{},"body":{"components/ProfilComponent.html":{}}}],["characters",{"_index":773,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["chart.js",{"_index":985,"title":{},"body":{"dependencies.html":{}}}],["chartmodule",{"_index":648,"title":{},"body":{"components/HomeComponent.html":{}}}],["check",{"_index":875,"title":{},"body":{"components/SignupComponent.html":{},"index.html":{}}}],["checkfavorite",{"_index":421,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["checkfavorite(candidateid",{"_index":431,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["checking",{"_index":472,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["checkvote",{"_index":422,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["checkvote(candidateid",{"_index":433,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["children",{"_index":329,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["choice",{"_index":1035,"title":{},"body":{"index.html":{}}}],["class",{"_index":32,"title":{},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"injectables/CandidateService.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"injectables/ElectionService.html":{},"injectables/FavoriteService.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"injectables/ResultsService.html":{},"components/SignupComponent.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{}}}],["cli",{"_index":1006,"title":{},"body":{"index.html":{}}}],["cloned",{"_index":1075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["code",{"_index":1015,"title":{},"body":{"index.html":{}}}],["color",{"_index":676,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{}}}],["command",{"_index":1036,"title":{},"body":{"index.html":{}}}],["comment",{"_index":445,"title":{"interfaces/Comment.html":{}},"body":{"components/CandidatDetailsComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"coverage.html":{}}}],["comment.content",{"_index":513,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["comment.createdat",{"_index":511,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["comment.user.name",{"_index":510,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["commentid",{"_index":572,"title":{},"body":{"injectables/CommentService.html":{}}}],["comments",{"_index":414,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["commentservice",{"_index":405,"title":{"injectables/CommentService.html":{}},"body":{"components/CandidatDetailsComponent.html":{},"injectables/CommentService.html":{},"coverage.html":{}}}],["commonmodule",{"_index":80,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{}}}],["commonmodule,routermodule",{"_index":747,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["component",{"_index":0,"title":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{}},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":38,"title":{},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{},"overview.html":{}}}],["components/accueil/accueil.component",{"_index":326,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/candidat",{"_index":304,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{}}}],["components/dashboard/admin",{"_index":323,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/dashboard/dashboard/dashboard.component",{"_index":309,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{}}}],["components/home/home.component",{"_index":303,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{}}}],["components/login/login.component",{"_index":307,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{}}}],["components/profil/profil.component",{"_index":327,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/signup/signup.component",{"_index":308,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{}}}],["config",{"_index":942,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["confirm",{"_index":515,"title":{},"body":{"components/CandidatDetailsComponent.html":{},"components/SignupComponent.html":{}}}],["confirmpasscontrol",{"_index":880,"title":{},"body":{"components/SignupComponent.html":{}}}],["confirmpasscontrol.errors",{"_index":882,"title":{},"body":{"components/SignupComponent.html":{}}}],["confirmpasscontrol.errors['mismatch",{"_index":883,"title":{},"body":{"components/SignupComponent.html":{}}}],["confirmpasscontrol.seterrors",{"_index":886,"title":{},"body":{"components/SignupComponent.html":{}}}],["confirmpasscontrol.seterrors(null",{"_index":888,"title":{},"body":{"components/SignupComponent.html":{}}}],["confirmpasscontrol.value",{"_index":885,"title":{},"body":{"components/SignupComponent.html":{}}}],["confirmpassword",{"_index":865,"title":{},"body":{"components/SignupComponent.html":{}}}],["confirmvote",{"_index":423,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["console",{"_index":456,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["console.error('candidate",{"_index":485,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["console.error('error",{"_index":135,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProfilComponent.html":{}}}],["console.log('has",{"_index":478,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["console.log('interceptor",{"_index":1073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log('navigating",{"_index":527,"title":{},"body":{"components/CandidatDivComponent.html":{}}}],["console.log('new",{"_index":491,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["console.log('user",{"_index":761,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["console.log('vote",{"_index":501,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["console.log('votes",{"_index":475,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["console.log(this.hasvoted",{"_index":461,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["const",{"_index":207,"title":{},"body":{"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CandidatDetailsComponent.html":{},"injectables/CommentService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"injectables/VoteService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":91,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"injectables/AuthService.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"injectables/CandidateService.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"injectables/ElectionService.html":{},"injectables/FavoriteService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"injectables/ResultsService.html":{},"components/SignupComponent.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{}}}],["constructor(candidateservice",{"_index":178,"title":{},"body":{"components/AdminListCandidatsComponent.html":{},"components/HomeComponent.html":{}}}],["constructor(fb",{"_index":92,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/LoginComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{}}}],["constructor(http",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CandidateService.html":{},"injectables/CommentService.html":{},"injectables/ElectionService.html":{},"injectables/FavoriteService.html":{},"injectables/ResultsService.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{}}}],["constructor(private",{"_index":270,"title":{},"body":{"components/AdminListUsersComponent.html":{},"injectables/AuthService.html":{},"components/CandidatDivComponent.html":{},"injectables/CandidateService.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"injectables/ElectionService.html":{},"injectables/FavoriteService.html":{},"components/NavbarComponent.html":{},"injectables/ResultsService.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{}}}],["constructor(route",{"_index":427,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["constructor(router",{"_index":524,"title":{},"body":{"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/NavbarComponent.html":{}}}],["constructor(userservice",{"_index":248,"title":{},"body":{"components/AdminListUsersComponent.html":{}}}],["contact",{"_index":637,"title":{},"body":{"components/FooterComponent.html":{}}}],["content",{"_index":560,"title":{},"body":{"interfaces/Comment.html":{},"injectables/CommentService.html":{}}}],["core",{"_index":978,"title":{},"body":{"dependencies.html":{}}}],["count",{"_index":663,"title":{},"body":{"components/HomeComponent.html":{}}}],["coverage",{"_index":931,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":775,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["createcandidate",{"_index":538,"title":{},"body":{"injectables/CandidateService.html":{}}}],["createcandidate(candidate",{"_index":542,"title":{},"body":{"injectables/CandidateService.html":{}}}],["createcandidate(this.candidateform.value",{"_index":147,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{}}}],["createdat",{"_index":534,"title":{},"body":{"interfaces/Candidate.html":{},"interfaces/Comment.html":{},"interfaces/Election.html":{},"interfaces/User.html":{},"interfaces/Vote.html":{}}}],["createelection",{"_index":597,"title":{},"body":{"injectables/ElectionService.html":{}}}],["createelection(election",{"_index":603,"title":{},"body":{"injectables/ElectionService.html":{}}}],["current",{"_index":480,"title":{},"body":{"components/CandidatDetailsComponent.html":{},"components/HomeComponent.html":{}}}],["custom",{"_index":874,"title":{},"body":{"components/SignupComponent.html":{}}}],["dashboard",{"_index":334,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{}}}],["dashboard'},{'name",{"_index":57,"title":{},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{}}}],["dashboard.component.css",{"_index":581,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.html",{"_index":580,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboardcomponent",{"_index":56,"title":{"components/DashboardComponent.html":{}},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{}}}],["data",{"_index":212,"title":{},"body":{"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/HomeComponent.html":{}}}],["data.email",{"_index":276,"title":{},"body":{"components/AdminListUsersComponent.html":{}}}],["data.email.tolowercase().includes(input",{"_index":277,"title":{},"body":{"components/AdminListUsersComponent.html":{}}}],["data.name",{"_index":213,"title":{},"body":{"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{}}}],["data.name.tolowercase().includes(input",{"_index":214,"title":{},"body":{"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{}}}],["data.party",{"_index":215,"title":{},"body":{"components/AdminListCandidatsComponent.html":{}}}],["data.party.tolowercase().includes(input",{"_index":216,"title":{},"body":{"components/AdminListCandidatsComponent.html":{}}}],["data.push(votes!.length",{"_index":712,"title":{},"body":{"components/HomeComponent.html":{}}}],["datasets",{"_index":715,"title":{},"body":{"components/HomeComponent.html":{}}}],["date",{"_index":536,"title":{},"body":{"interfaces/Candidate.html":{},"interfaces/Election.html":{},"components/HomeComponent.html":{},"interfaces/User.html":{},"interfaces/Vote.html":{}}}],["date:'short",{"_index":512,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["date:\\'short",{"_index":517,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["declarations",{"_index":1047,"title":{},"body":{"overview.html":{}}}],["default",{"_index":112,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CandidatDetailsComponent.html":{},"injectables/CandidateService.html":{},"injectables/CommentService.html":{},"injectables/ElectionService.html":{},"injectables/FavoriteService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"injectables/ResultsService.html":{},"components/SignupComponent.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":98,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"injectables/CandidateService.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"injectables/ElectionService.html":{},"injectables/FavoriteService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"injectables/ResultsService.html":{},"components/SignupComponent.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{}}}],["delete",{"_index":236,"title":{},"body":{"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{}}}],["deletecandidate",{"_index":173,"title":{},"body":{"components/AdminListCandidatsComponent.html":{},"injectables/CandidateService.html":{}}}],["deletecandidate(id",{"_index":544,"title":{},"body":{"injectables/CandidateService.html":{}}}],["deletecandidate(this.selectedcandidate._id",{"_index":219,"title":{},"body":{"components/AdminListCandidatsComponent.html":{}}}],["deleteelection",{"_index":598,"title":{},"body":{"injectables/ElectionService.html":{}}}],["deleteelection(id",{"_index":605,"title":{},"body":{"injectables/ElectionService.html":{}}}],["deleteuser",{"_index":245,"title":{},"body":{"components/AdminListUsersComponent.html":{},"injectables/UserService.html":{}}}],["deleteuser(id",{"_index":903,"title":{},"body":{"injectables/UserService.html":{}}}],["deleting",{"_index":224,"title":{},"body":{"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{}}}],["dependencies",{"_index":965,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["details",{"_index":408,"title":{},"body":{"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{}}}],["details'},{'name",{"_index":53,"title":{},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{}}}],["details.component",{"_index":306,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{}}}],["details.component.css",{"_index":411,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["details.component.html",{"_index":412,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["details.component.ts",{"_index":404,"title":{},"body":{"components/CandidatDetailsComponent.html":{},"coverage.html":{}}}],["details.component.ts:103",{"_index":429,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["details.component.ts:133",{"_index":442,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["details.component.ts:155",{"_index":435,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["details.component.ts:159",{"_index":430,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["details.component.ts:24",{"_index":444,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["details.component.ts:25",{"_index":446,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["details.component.ts:26",{"_index":443,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["details.component.ts:27",{"_index":447,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["details.component.ts:28",{"_index":449,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["details.component.ts:29",{"_index":448,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["details.component.ts:30",{"_index":428,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["details.component.ts:40",{"_index":441,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["details.component.ts:49",{"_index":437,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["details.component.ts:60",{"_index":440,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["details.component.ts:71",{"_index":432,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["details.component.ts:84",{"_index":434,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["details/candidat",{"_index":305,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CandidatDetailsComponent.html":{},"coverage.html":{}}}],["dev",{"_index":1011,"title":{},"body":{"index.html":{}}}],["development",{"_index":1008,"title":{},"body":{"index.html":{}}}],["dialogmodule",{"_index":164,"title":{},"body":{"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/ProfilComponent.html":{}}}],["dialogmodule,commonmodule",{"_index":269,"title":{},"body":{"components/AdminListUsersComponent.html":{}}}],["directive",{"_index":36,"title":{},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{}}}],["directives",{"_index":68,"title":{},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1019,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1024,"title":{},"body":{"index.html":{}}}],["dist",{"_index":1023,"title":{},"body":{"index.html":{}}}],["div",{"_index":519,"title":{},"body":{"components/CandidatDivComponent.html":{}}}],["div'},{'name",{"_index":55,"title":{},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{}}}],["div.component",{"_index":315,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["div.component.css",{"_index":520,"title":{},"body":{"components/CandidatDivComponent.html":{}}}],["div.component.html",{"_index":521,"title":{},"body":{"components/CandidatDivComponent.html":{}}}],["div.component.ts",{"_index":518,"title":{},"body":{"components/CandidatDivComponent.html":{},"coverage.html":{}}}],["div.component.ts:13",{"_index":525,"title":{},"body":{"components/CandidatDivComponent.html":{}}}],["div.component.ts:17",{"_index":526,"title":{},"body":{"components/CandidatDivComponent.html":{}}}],["div/candidat",{"_index":314,"title":{},"body":{"components/AppComponent.html":{},"components/CandidatDivComponent.html":{},"components/HomeComponent.html":{},"coverage.html":{}}}],["document.getelementbyid(fragment",{"_index":719,"title":{},"body":{"components/HomeComponent.html":{}}}],["documentation",{"_index":932,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{}}}],["duration",{"_index":660,"title":{},"body":{"components/HomeComponent.html":{}}}],["dynamic",{"_index":969,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1033,"title":{},"body":{"index.html":{}}}],["editcandidate",{"_index":174,"title":{},"body":{"components/AdminListCandidatsComponent.html":{}}}],["editcandidate(candidate",{"_index":183,"title":{},"body":{"components/AdminListCandidatsComponent.html":{}}}],["edituser",{"_index":246,"title":{},"body":{"components/AdminListUsersComponent.html":{},"components/ProfilComponent.html":{}}}],["edituser(user",{"_index":254,"title":{},"body":{"components/AdminListUsersComponent.html":{}}}],["election",{"_index":588,"title":{"interfaces/Election.html":{}},"body":{"interfaces/Election.html":{},"injectables/ElectionService.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"coverage.html":{}}}],["electionid",{"_index":855,"title":{},"body":{"injectables/ResultsService.html":{}}}],["electionservice",{"_index":595,"title":{"injectables/ElectionService.html":{}},"body":{"injectables/ElectionService.html":{},"coverage.html":{}}}],["electoral",{"_index":156,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/ProfilComponent.html":{}}}],["electoralprogram",{"_index":127,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"interfaces/Candidate.html":{}}}],["element",{"_index":35,"title":{},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{}}}],["element.scrollintoview",{"_index":720,"title":{},"body":{"components/HomeComponent.html":{}}}],["email",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{},"interfaces/User.html":{}}}],["enabled",{"_index":339,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["end",{"_index":1032,"title":{},"body":{"index.html":{}}}],["enddate",{"_index":590,"title":{},"body":{"interfaces/Election.html":{}}}],["env/core",{"_index":983,"title":{},"body":{"dependencies.html":{}}}],["environment",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CandidateService.html":{},"injectables/CommentService.html":{},"injectables/ElectionService.html":{},"injectables/FavoriteService.html":{},"injectables/ResultsService.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apibaseurl}/api/auth",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{}}}],["environment.apibaseurl}/api/candidates",{"_index":550,"title":{},"body":{"injectables/CandidateService.html":{}}}],["environment.apibaseurl}/api/comments",{"_index":574,"title":{},"body":{"injectables/CommentService.html":{}}}],["environment.apibaseurl}/api/elections",{"_index":612,"title":{},"body":{"injectables/ElectionService.html":{}}}],["environment.apibaseurl}/api/favorites",{"_index":624,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["environment.apibaseurl}/api/results",{"_index":856,"title":{},"body":{"injectables/ResultsService.html":{}}}],["environment.apibaseurl}/api/users",{"_index":911,"title":{},"body":{"injectables/UserService.html":{}}}],["environment.apibaseurl}/api/votes",{"_index":927,"title":{},"body":{"injectables/VoteService.html":{}}}],["environments/environment",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CandidateService.html":{},"injectables/CommentService.html":{},"injectables/ElectionService.html":{},"injectables/FavoriteService.html":{},"injectables/ResultsService.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{}}}],["error",{"_index":134,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{}}}],["error.error.message",{"_index":767,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["errormessage",{"_index":738,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{}}}],["event",{"_index":188,"title":{},"body":{"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{}}}],["event.target",{"_index":209,"title":{},"body":{"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{}}}],["eventcoalescing",{"_index":1065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["events",{"_index":733,"title":{},"body":{"components/HomeComponent.html":{}}}],["execute",{"_index":1029,"title":{},"body":{"index.html":{}}}],["expect",{"_index":563,"title":{},"body":{"interfaces/Comment.html":{}}}],["export",{"_index":31,"title":{},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"interfaces/Candidate.html":{},"injectables/CandidateService.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"interfaces/Election.html":{},"injectables/ElectionService.html":{},"injectables/FavoriteService.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"injectables/ResultsService.html":{},"components/SignupComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/Vote.html":{},"injectables/VoteService.html":{}}}],["exports",{"_index":346,"title":{},"body":{"modules/AppRoutingModule.html":{},"overview.html":{}}}],["express",{"_index":987,"title":{},"body":{"dependencies.html":{}}}],["express.express",{"_index":1000,"title":{},"body":{"miscellaneous/functions.html":{}}}],["failed",{"_index":836,"title":{},"body":{"components/ProfilComponent.html":{}}}],["false",{"_index":196,"title":{},"body":{"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["favorite",{"_index":470,"title":{},"body":{"components/CandidatDetailsComponent.html":{},"components/ProfilComponent.html":{}}}],["favorite._id",{"_index":471,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["favoritecandidates",{"_index":801,"title":{},"body":{"components/ProfilComponent.html":{}}}],["favorites",{"_index":467,"title":{},"body":{"components/CandidatDetailsComponent.html":{},"interfaces/User.html":{}}}],["favorites.some",{"_index":469,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["favoriteservice",{"_index":406,"title":{"injectables/FavoriteService.html":{}},"body":{"components/CandidatDetailsComponent.html":{},"injectables/FavoriteService.html":{},"components/ProfilComponent.html":{},"coverage.html":{}}}],["favourited",{"_index":845,"title":{},"body":{"components/ProfilComponent.html":{}}}],["fb",{"_index":103,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/LoginComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{}}}],["fetch",{"_index":492,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["fetchcandidates",{"_index":175,"title":{},"body":{"components/AdminListCandidatsComponent.html":{}}}],["fetchedcomment",{"_index":494,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["fetchfavoritecandidates",{"_index":805,"title":{},"body":{"components/ProfilComponent.html":{}}}],["fetching",{"_index":136,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProfilComponent.html":{}}}],["fetchuserprofile",{"_index":806,"title":{},"body":{"components/ProfilComponent.html":{}}}],["fetchusers",{"_index":247,"title":{},"body":{"components/AdminListUsersComponent.html":{}}}],["fetchuservotes",{"_index":807,"title":{},"body":{"components/ProfilComponent.html":{}}}],["ff6384",{"_index":699,"title":{},"body":{"components/HomeComponent.html":{}}}],["ffce56",{"_index":701,"title":{},"body":{"components/HomeComponent.html":{}}}],["fields",{"_index":154,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"interfaces/Candidate.html":{},"injectables/CandidateService.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"interfaces/Election.html":{},"injectables/ElectionService.html":{},"injectables/FavoriteService.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"injectables/ResultsService.html":{},"components/SignupComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/Vote.html":{},"injectables/VoteService.html":{},"coverage.html":{}}}],["files",{"_index":1014,"title":{},"body":{"index.html":{}}}],["fill",{"_index":151,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{}}}],["filteredcandidates",{"_index":166,"title":{},"body":{"components/AdminListCandidatsComponent.html":{}}}],["filteredusers",{"_index":242,"title":{},"body":{"components/AdminListUsersComponent.html":{}}}],["first",{"_index":1038,"title":{},"body":{"index.html":{}}}],["fontawesome",{"_index":974,"title":{},"body":{"dependencies.html":{}}}],["footer",{"_index":628,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":58,"title":{},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{}}}],["footer.component.css",{"_index":630,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.html",{"_index":629,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.component",{"_index":28,"title":{},"body":{"components/AccueilComponent.html":{}}}],["footercomponent",{"_index":18,"title":{"components/FooterComponent.html":{}},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{}}}],["footercomponent,routeroutlet",{"_index":30,"title":{},"body":{"components/AccueilComponent.html":{}}}],["form",{"_index":43,"title":{},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{}}}],["formbuilder",{"_index":93,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/LoginComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{}}}],["formgroup",{"_index":108,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/LoginComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{}}}],["formgroup.controls[confirmpassword",{"_index":881,"title":{},"body":{"components/SignupComponent.html":{}}}],["formgroup.controls[password",{"_index":879,"title":{},"body":{"components/SignupComponent.html":{}}}],["formsmodule",{"_index":410,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["formsubmitted",{"_index":739,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{}}}],["fortawesome/angular",{"_index":973,"title":{},"body":{"dependencies.html":{}}}],["fortawesome/fontawesome",{"_index":976,"title":{},"body":{"dependencies.html":{}}}],["fortawesome/free",{"_index":980,"title":{},"body":{"dependencies.html":{}}}],["forum",{"_index":509,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["found",{"_index":233,"title":{},"body":{"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/ProfilComponent.html":{}}}],["fragment",{"_index":718,"title":{},"body":{"components/HomeComponent.html":{}}}],["frontendprojetnode",{"_index":301,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["full",{"_index":847,"title":{},"body":{"components/ProfilComponent.html":{},"components/SignupComponent.html":{}}}],["function",{"_index":936,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":999,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1041,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1017,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1004,"title":{},"body":{"index.html":{}}}],["getauthheaders",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcandidate",{"_index":424,"title":{},"body":{"components/CandidatDetailsComponent.html":{},"injectables/CandidateService.html":{}}}],["getcandidate(id",{"_index":436,"title":{},"body":{"components/CandidatDetailsComponent.html":{},"injectables/CandidateService.html":{}}}],["getcandidates",{"_index":539,"title":{},"body":{"injectables/CandidateService.html":{},"components/HomeComponent.html":{}}}],["getcomment",{"_index":566,"title":{},"body":{"injectables/CommentService.html":{}}}],["getcomment(commentid",{"_index":570,"title":{},"body":{"injectables/CommentService.html":{}}}],["getcomments",{"_index":425,"title":{},"body":{"components/CandidatDetailsComponent.html":{},"injectables/CommentService.html":{}}}],["getcomments(candidateid",{"_index":439,"title":{},"body":{"components/CandidatDetailsComponent.html":{},"injectables/CommentService.html":{}}}],["getelection",{"_index":599,"title":{},"body":{"injectables/ElectionService.html":{}}}],["getelection(id",{"_index":607,"title":{},"body":{"injectables/ElectionService.html":{}}}],["getelectionresults",{"_index":851,"title":{},"body":{"injectables/ResultsService.html":{}}}],["getelectionresults(electionid",{"_index":853,"title":{},"body":{"injectables/ResultsService.html":{}}}],["getelections",{"_index":600,"title":{},"body":{"injectables/ElectionService.html":{}}}],["getfavorites",{"_index":616,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["getting",{"_index":1001,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserbyid",{"_index":898,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserbyid(id",{"_index":905,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserprofile",{"_index":899,"title":{},"body":{"injectables/UserService.html":{}}}],["getusers",{"_index":900,"title":{},"body":{"injectables/UserService.html":{}}}],["getuservotes",{"_index":917,"title":{},"body":{"injectables/VoteService.html":{}}}],["getvotes",{"_index":918,"title":{},"body":{"injectables/VoteService.html":{}}}],["getvotesbycandidate",{"_index":919,"title":{},"body":{"injectables/VoteService.html":{}}}],["getvotesbycandidate(candidate._id",{"_index":708,"title":{},"body":{"components/HomeComponent.html":{}}}],["getvotesbycandidate(candidateid",{"_index":925,"title":{},"body":{"injectables/VoteService.html":{}}}],["go",{"_index":843,"title":{},"body":{"components/ProfilComponent.html":{},"index.html":{}}}],["government",{"_index":644,"title":{},"body":{"components/FooterComponent.html":{}}}],["gradient",{"_index":669,"title":{},"body":{"components/HomeComponent.html":{}}}],["graph",{"_index":1045,"title":{},"body":{"modules.html":{}}}],["handle",{"_index":759,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["hastoken",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{}}}],["hasvoted",{"_index":415,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["headers",{"_index":553,"title":{},"body":{"injectables/CandidateService.html":{},"injectables/CommentService.html":{},"injectables/ElectionService.html":{},"injectables/FavoriteService.html":{},"injectables/ResultsService.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{},"miscellaneous/variables.html":{}}}],["help",{"_index":1042,"title":{},"body":{"index.html":{}}}],["here",{"_index":729,"title":{},"body":{"components/HomeComponent.html":{}}}],["home",{"_index":330,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{}}}],["home'},{'name",{"_index":60,"title":{},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{}}}],["home.component.css",{"_index":650,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":678,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":59,"title":{"components/HomeComponent.html":{}},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{}}}],["host",{"_index":651,"title":{},"body":{"components/HomeComponent.html":{}}}],["hoverbackgroundcolor",{"_index":704,"title":{},"body":{"components/HomeComponent.html":{}}}],["html",{"_index":34,"title":{},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{}}}],["htmlinputelement).value.tolowercase",{"_index":210,"title":{},"body":{"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{}}}],["http",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CandidateService.html":{},"injectables/CommentService.html":{},"injectables/ElectionService.html":{},"injectables/FavoriteService.html":{},"injectables/ResultsService.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{}}}],["http://localhost:4200",{"_index":1012,"title":{},"body":{"index.html":{}}}],["http://localhost:5000",{"_index":1086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":296,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CandidateService.html":{},"injectables/CommentService.html":{},"injectables/ElectionService.html":{},"injectables/FavoriteService.html":{},"injectables/ResultsService.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{}}}],["httpclientmodule",{"_index":310,"title":{},"body":{"components/AppComponent.html":{}}}],["httpheaders",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpinterceptorfn",{"_index":1069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon",{"_index":654,"title":{},"body":{"components/HomeComponent.html":{}}}],["icons",{"_index":981,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":438,"title":{},"body":{"components/CandidatDetailsComponent.html":{},"injectables/CandidateService.html":{},"injectables/ElectionService.html":{},"injectables/UserService.html":{},"interfaces/Vote.html":{}}}],["identifier",{"_index":933,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":594,"title":{},"body":{"interfaces/Election.html":{},"interfaces/User.html":{}}}],["image",{"_index":667,"title":{},"body":{"components/HomeComponent.html":{}}}],["implements",{"_index":76,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{},"index.html":{}}}],["import",{"_index":24,"title":{},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"injectables/CandidateService.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"injectables/ElectionService.html":{},"injectables/FavoriteService.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"injectables/ResultsService.html":{},"components/SignupComponent.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{}}}],["important",{"_index":675,"title":{},"body":{"components/HomeComponent.html":{}}}],["imports",{"_index":16,"title":{},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{}}}],["index",{"_index":84,"title":{"index.html":{}},"body":{"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"interfaces/Candidate.html":{},"injectables/CandidateService.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"interfaces/Election.html":{},"injectables/ElectionService.html":{},"injectables/FavoriteService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"injectables/ResultsService.html":{},"components/SignupComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/Vote.html":{},"injectables/VoteService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["infinite",{"_index":664,"title":{},"body":{"components/HomeComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"interfaces/Candidate.html":{},"injectables/CandidateService.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"interfaces/Election.html":{},"injectables/ElectionService.html":{},"injectables/FavoriteService.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"injectables/ResultsService.html":{},"components/SignupComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/Vote.html":{},"injectables/VoteService.html":{}}}],["information",{"_index":155,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/HomeComponent.html":{},"components/ProfilComponent.html":{}}}],["informational",{"_index":640,"title":{},"body":{"components/FooterComponent.html":{}}}],["informations",{"_index":769,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["inject(authservice",{"_index":1071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":347,"title":{"injectables/AuthService.html":{},"injectables/CandidateService.html":{},"injectables/CommentService.html":{},"injectables/ElectionService.html":{},"injectables/FavoriteService.html":{},"injectables/ResultsService.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/CandidateService.html":{},"injectables/CommentService.html":{},"injectables/ElectionService.html":{},"injectables/FavoriteService.html":{},"injectables/ResultsService.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{},"coverage.html":{}}}],["injectables",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CandidateService.html":{},"injectables/CommentService.html":{},"injectables/ElectionService.html":{},"injectables/FavoriteService.html":{},"injectables/ResultsService.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{},"overview.html":{}}}],["input",{"_index":208,"title":{},"body":{"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/CandidatDivComponent.html":{}}}],["inputs",{"_index":523,"title":{},"body":{"components/CandidatDivComponent.html":{}}}],["interface",{"_index":530,"title":{"interfaces/Candidate.html":{},"interfaces/Comment.html":{},"interfaces/Election.html":{},"interfaces/User.html":{},"interfaces/Vote.html":{}},"body":{"interfaces/Candidate.html":{},"interfaces/Comment.html":{},"interfaces/Election.html":{},"interfaces/User.html":{},"interfaces/Vote.html":{},"coverage.html":{}}}],["interfaces",{"_index":531,"title":{},"body":{"interfaces/Candidate.html":{},"interfaces/Comment.html":{},"interfaces/Election.html":{},"interfaces/User.html":{},"interfaces/Vote.html":{},"overview.html":{}}}],["invalid",{"_index":770,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["isactive",{"_index":591,"title":{},"body":{"interfaces/Election.html":{}}}],["isloggedin",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{}}}],["iteration",{"_index":662,"title":{},"body":{"components/HomeComponent.html":{}}}],["karma",{"_index":1031,"title":{},"body":{"index.html":{}}}],["keyframes",{"_index":652,"title":{},"body":{"components/HomeComponent.html":{}}}],["labels",{"_index":696,"title":{},"body":{"components/HomeComponent.html":{}}}],["labels.push(candidate.name",{"_index":711,"title":{},"body":{"components/HomeComponent.html":{}}}],["legend",{"_index":33,"title":{},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{},"overview.html":{}}}],["list",{"_index":46,"title":{},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{}}}],["literal",{"_index":561,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Vote.html":{}}}],["loading",{"_index":167,"title":{},"body":{"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{}}}],["localstorage.getitem('authtoken",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('authtoken",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('authtoken",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{}}}],["log",{"_index":455,"title":{},"body":{"components/CandidatDetailsComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["logged",{"_index":762,"title":{},"body":{"components/LoginComponent.html":{}}}],["loggedin",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["logging",{"_index":1074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["login",{"_index":333,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["login'},{'name",{"_index":62,"title":{},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{}}}],["login(email",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.css",{"_index":736,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":737,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":61,"title":{"components/LoginComponent.html":{}},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{}}}],["loginform",{"_index":740,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["long",{"_index":774,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["match",{"_index":877,"title":{},"body":{"components/SignupComponent.html":{}}}],["matching",{"_index":71,"title":{},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"interfaces/Candidate.html":{},"injectables/CandidateService.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"interfaces/Election.html":{},"injectables/ElectionService.html":{},"injectables/FavoriteService.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"injectables/ResultsService.html":{},"components/SignupComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/Vote.html":{},"injectables/VoteService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["matchpasswords",{"_index":862,"title":{},"body":{"components/SignupComponent.html":{}}}],["matchpasswords(password",{"_index":864,"title":{},"body":{"components/SignupComponent.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":1082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{}}}],["methods",{"_index":88,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"injectables/AuthService.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"injectables/CandidateService.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"injectables/ElectionService.html":{},"injectables/FavoriteService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"injectables/ResultsService.html":{},"components/SignupComponent.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{}}}],["miscellaneous",{"_index":998,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mismatch",{"_index":887,"title":{},"body":{"components/SignupComponent.html":{}}}],["models/candidate.model",{"_index":118,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"injectables/CandidateService.html":{},"injectables/FavoriteService.html":{},"components/HomeComponent.html":{},"components/ProfilComponent.html":{}}}],["models/comment.model",{"_index":453,"title":{},"body":{"components/CandidatDetailsComponent.html":{},"injectables/CommentService.html":{}}}],["models/election.model",{"_index":613,"title":{},"body":{"injectables/ElectionService.html":{}}}],["models/user.model",{"_index":267,"title":{},"body":{"components/AdminListUsersComponent.html":{},"injectables/AuthService.html":{},"components/ProfilComponent.html":{},"injectables/UserService.html":{}}}],["models/vote.model",{"_index":928,"title":{},"body":{"injectables/VoteService.html":{}}}],["module",{"_index":316,"title":{"modules/AppRoutingModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":318,"title":{"modules.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules.html":{}}}],["more",{"_index":734,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["name",{"_index":39,"title":{},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"interfaces/Candidate.html":{},"injectables/CandidateService.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"injectables/ElectionService.html":{},"injectables/FavoriteService.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"injectables/ResultsService.html":{},"components/SignupComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/Vote.html":{},"injectables/VoteService.html":{},"index.html":{}}}],["navbar",{"_index":778,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":63,"title":{},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{}}}],["navbar.component.css",{"_index":779,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":780,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar/navbar.component",{"_index":27,"title":{},"body":{"components/AccueilComponent.html":{}}}],["navbarcomponent",{"_index":17,"title":{"components/NavbarComponent.html":{}},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{}}}],["navigate",{"_index":764,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["navigateto",{"_index":582,"title":{},"body":{"components/DashboardComponent.html":{},"components/NavbarComponent.html":{}}}],["navigateto(route",{"_index":584,"title":{},"body":{"components/DashboardComponent.html":{},"components/NavbarComponent.html":{}}}],["necessary",{"_index":893,"title":{},"body":{"components/SignupComponent.html":{}}}],["need",{"_index":1037,"title":{},"body":{"index.html":{}}}],["new",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{},"components/CandidatDetailsComponent.html":{},"coverage.html":{},"index.html":{}}}],["newcomment",{"_index":416,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["next",{"_index":132,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["next(cloned",{"_index":1079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next(req",{"_index":1080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ng",{"_index":1009,"title":{},"body":{"index.html":{}}}],["ngafterviewchecked",{"_index":680,"title":{},"body":{"components/HomeComponent.html":{}}}],["ngmodule",{"_index":320,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":89,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{}}}],["ngx",{"_index":982,"title":{},"body":{"dependencies.html":{}}}],["now",{"_index":844,"title":{},"body":{"components/ProfilComponent.html":{}}}],["null",{"_index":111,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{}}}],["number",{"_index":697,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/User.html":{}}}],["object",{"_index":564,"title":{},"body":{"interfaces/Comment.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CandidateService.html":{},"injectables/CommentService.html":{},"injectables/ElectionService.html":{},"injectables/FavoriteService.html":{},"injectables/ResultsService.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{}}}],["official",{"_index":643,"title":{},"body":{"components/FooterComponent.html":{}}}],["oninit",{"_index":77,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{}}}],["onsameurlnavigation",{"_index":341,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["onsearchchange",{"_index":176,"title":{},"body":{"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{}}}],["onsearchchange(event",{"_index":187,"title":{},"body":{"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{}}}],["onsubmit",{"_index":90,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/LoginComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{}}}],["optional",{"_index":102,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"injectables/AuthService.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"interfaces/Candidate.html":{},"injectables/CandidateService.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"interfaces/Election.html":{},"injectables/ElectionService.html":{},"injectables/FavoriteService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"injectables/ResultsService.html":{},"components/SignupComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/Vote.html":{},"injectables/VoteService.html":{}}}],["options",{"_index":679,"title":{},"body":{"components/HomeComponent.html":{}}}],["out",{"_index":152,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":1043,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":964,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["page",{"_index":765,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["parameters",{"_index":100,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"injectables/AuthService.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"injectables/CandidateService.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"injectables/ElectionService.html":{},"injectables/FavoriteService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"injectables/ResultsService.html":{},"components/SignupComponent.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{}}}],["party",{"_index":125,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"interfaces/Candidate.html":{},"components/ProfilComponent.html":{}}}],["passcontrol",{"_index":878,"title":{},"body":{"components/SignupComponent.html":{}}}],["passcontrol.value",{"_index":884,"title":{},"body":{"components/SignupComponent.html":{}}}],["password",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"interfaces/User.html":{}}}],["password).subscribe",{"_index":756,"title":{},"body":{"components/LoginComponent.html":{}}}],["passwords",{"_index":876,"title":{},"body":{"components/SignupComponent.html":{}}}],["path",{"_index":328,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["picture",{"_index":159,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{}}}],["platform",{"_index":1034,"title":{},"body":{"index.html":{}}}],["please",{"_index":837,"title":{},"body":{"components/ProfilComponent.html":{}}}],["policy",{"_index":634,"title":{},"body":{"components/FooterComponent.html":{}}}],["portal",{"_index":724,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{}}}],["presidential",{"_index":631,"title":{},"body":{"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{}}}],["primary",{"_index":670,"title":{},"body":{"components/HomeComponent.html":{}}}],["primeicons",{"_index":989,"title":{},"body":{"dependencies.html":{}}}],["primeng",{"_index":991,"title":{},"body":{"dependencies.html":{}}}],["primeng/animateonscroll",{"_index":692,"title":{},"body":{"components/HomeComponent.html":{}}}],["primeng/chart",{"_index":691,"title":{},"body":{"components/HomeComponent.html":{}}}],["primeng/dialog",{"_index":201,"title":{},"body":{"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/ProfilComponent.html":{}}}],["primeng/speeddial",{"_index":199,"title":{},"body":{"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/ProfilComponent.html":{}}}],["primeng/table",{"_index":198,"title":{},"body":{"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/ProfilComponent.html":{}}}],["primeng/toast",{"_index":200,"title":{},"body":{"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/ProfilComponent.html":{}}}],["primeng/tooltip",{"_index":454,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["privacy",{"_index":633,"title":{},"body":{"components/FooterComponent.html":{}}}],["private",{"_index":121,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"injectables/AuthService.html":{},"components/CandidatDetailsComponent.html":{},"injectables/CandidateService.html":{},"injectables/CommentService.html":{},"injectables/ElectionService.html":{},"injectables/FavoriteService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"injectables/ResultsService.html":{},"components/SignupComponent.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{}}}],["production",{"_index":1084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profil",{"_index":797,"title":{},"body":{"components/ProfilComponent.html":{}}}],["profil'},{'name",{"_index":65,"title":{},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{}}}],["profil.component.css",{"_index":798,"title":{},"body":{"components/ProfilComponent.html":{}}}],["profil.component.html",{"_index":799,"title":{},"body":{"components/ProfilComponent.html":{}}}],["profilcomponent",{"_index":64,"title":{"components/ProfilComponent.html":{}},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{}}}],["profile",{"_index":158,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"modules/AppRoutingModule.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{}}}],["profilepicture",{"_index":128,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"interfaces/Candidate.html":{},"interfaces/User.html":{}}}],["profiles",{"_index":731,"title":{},"body":{"components/HomeComponent.html":{}}}],["program",{"_index":157,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/ProfilComponent.html":{}}}],["project",{"_index":1003,"title":{},"body":{"index.html":{}}}],["promise.all(requests",{"_index":713,"title":{},"body":{"components/HomeComponent.html":{}}}],["properties",{"_index":85,"title":{"properties.html":{}},"body":{"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CandidatDetailsComponent.html":{},"interfaces/Candidate.html":{},"injectables/CandidateService.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"interfaces/Election.html":{},"injectables/ElectionService.html":{},"injectables/FavoriteService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"injectables/ResultsService.html":{},"components/SignupComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/Vote.html":{},"injectables/VoteService.html":{},"properties.html":{}}}],["provideanimationsasync",{"_index":1063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideclienthydration",{"_index":1067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CandidateService.html":{},"injectables/CommentService.html":{},"injectables/ElectionService.html":{},"injectables/FavoriteService.html":{},"injectables/ResultsService.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{}}}],["providehttpclient",{"_index":1068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":1066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":294,"title":{},"body":{"components/AppComponent.html":{},"components/CandidatDetailsComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["provides",{"_index":726,"title":{},"body":{"components/HomeComponent.html":{}}}],["provideserverrendering",{"_index":1083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":1064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["radial",{"_index":668,"title":{},"body":{"components/HomeComponent.html":{}}}],["radius",{"_index":674,"title":{},"body":{"components/HomeComponent.html":{}}}],["reactiveformsmodule",{"_index":79,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/LoginComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{}}}],["reactiveformsmodule,commonmodule",{"_index":120,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{}}}],["really",{"_index":234,"title":{},"body":{"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{}}}],["red",{"_index":793,"title":{},"body":{"components/NavbarComponent.html":{}}}],["redirectto",{"_index":332,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":1044,"title":{},"body":{"index.html":{}}}],["register",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{}}}],["register(user",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{}}}],["registered",{"_index":892,"title":{},"body":{"components/SignupComponent.html":{}}}],["registration",{"_index":891,"title":{},"body":{"components/SignupComponent.html":{}}}],["reload",{"_index":342,"title":{},"body":{"modules/AppRoutingModule.html":{},"index.html":{}}}],["remember",{"_index":751,"title":{},"body":{"components/LoginComponent.html":{}}}],["removefavorite",{"_index":617,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["removefavorite(candidateid",{"_index":622,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["removing",{"_index":497,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["req",{"_index":1070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.clone",{"_index":1076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.headers.set('authorization",{"_index":1077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request",{"_index":1078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requests",{"_index":705,"title":{},"body":{"components/HomeComponent.html":{}}}],["required",{"_index":153,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/LoginComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{}}}],["reserved",{"_index":639,"title":{},"body":{"components/FooterComponent.html":{}}}],["reset",{"_index":1049,"title":{},"body":{"overview.html":{}}}],["resource",{"_index":641,"title":{},"body":{"components/FooterComponent.html":{}}}],["resources",{"_index":728,"title":{},"body":{"components/HomeComponent.html":{}}}],["response",{"_index":489,"title":{},"body":{"components/CandidatDetailsComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["response.comment",{"_index":490,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["results",{"_index":70,"title":{},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"interfaces/Candidate.html":{},"injectables/CandidateService.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"interfaces/Election.html":{},"injectables/ElectionService.html":{},"injectables/FavoriteService.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"injectables/ResultsService.html":{},"components/SignupComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/Vote.html":{},"injectables/VoteService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["resultsservice",{"_index":849,"title":{"injectables/ResultsService.html":{}},"body":{"injectables/ResultsService.html":{},"coverage.html":{}}}],["return",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{},"components/CandidatDetailsComponent.html":{},"injectables/CandidateService.html":{},"injectables/CommentService.html":{},"injectables/ElectionService.html":{},"injectables/FavoriteService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProfilComponent.html":{},"injectables/ResultsService.html":{},"components/SignupComponent.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":105,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"injectables/AuthService.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"injectables/CandidateService.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"injectables/ElectionService.html":{},"injectables/FavoriteService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"injectables/ResultsService.html":{},"components/SignupComponent.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{},"miscellaneous/functions.html":{}}}],["rights",{"_index":638,"title":{},"body":{"components/FooterComponent.html":{}}}],["role",{"_index":288,"title":{},"body":{"components/AdminListUsersComponent.html":{},"components/SignupComponent.html":{},"interfaces/User.html":{}}}],["root",{"_index":297,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CandidateService.html":{},"injectables/CommentService.html":{},"injectables/ElectionService.html":{},"injectables/FavoriteService.html":{},"injectables/ResultsService.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{}}}],["root'},{'name",{"_index":50,"title":{},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{}}}],["route",{"_index":94,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/DashboardComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{}}}],["router",{"_index":96,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SignupComponent.html":{}}}],["routermodule",{"_index":321,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SignupComponent.html":{}}}],["routermodule.forroot(routes",{"_index":337,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routeroutlet",{"_index":19,"title":{},"body":{"components/AccueilComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["routeroutlet,routermodule",{"_index":586,"title":{},"body":{"components/DashboardComponent.html":{}}}],["routes",{"_index":322,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":938,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["running",{"_index":1025,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CandidateService.html":{},"injectables/CommentService.html":{},"injectables/ElectionService.html":{},"injectables/FavoriteService.html":{},"injectables/ResultsService.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{},"dependencies.html":{}}}],["save",{"_index":757,"title":{},"body":{"components/LoginComponent.html":{}}}],["savetoken",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{}}}],["savetoken(token",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{}}}],["scaffolding",{"_index":1016,"title":{},"body":{"index.html":{}}}],["scrolloffset",{"_index":343,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["scrollpositionrestoration",{"_index":338,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["scrolltofragment",{"_index":681,"title":{},"body":{"components/HomeComponent.html":{}}}],["searchvalue",{"_index":168,"title":{},"body":{"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{}}}],["selectedcandidate",{"_index":169,"title":{},"body":{"components/AdminListCandidatsComponent.html":{}}}],["selecteduser",{"_index":243,"title":{},"body":{"components/AdminListUsersComponent.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{}}}],["serve",{"_index":1010,"title":{},"body":{"index.html":{}}}],["server",{"_index":970,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["server.ts",{"_index":935,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["serverconfig",{"_index":943,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":636,"title":{},"body":{"components/FooterComponent.html":{}}}],["services/auth.service",{"_index":746,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SignupComponent.html":{}}}],["services/candidate.service",{"_index":116,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/HomeComponent.html":{}}}],["services/comment.service",{"_index":450,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["services/favorite.service",{"_index":451,"title":{},"body":{"components/CandidatDetailsComponent.html":{},"components/ProfilComponent.html":{}}}],["services/user.service",{"_index":268,"title":{},"body":{"components/AdminListUsersComponent.html":{},"components/ProfilComponent.html":{}}}],["services/vote.service",{"_index":452,"title":{},"body":{"components/CandidatDetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProfilComponent.html":{}}}],["show",{"_index":802,"title":{},"body":{"components/ProfilComponent.html":{}}}],["showdialogue",{"_index":170,"title":{},"body":{"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{}}}],["showit",{"_index":177,"title":{},"body":{"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{}}}],["showit(candidate",{"_index":190,"title":{},"body":{"components/AdminListCandidatsComponent.html":{}}}],["showit(user",{"_index":260,"title":{},"body":{"components/AdminListUsersComponent.html":{}}}],["signup",{"_index":67,"title":{},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{}}}],["signup.component.css",{"_index":859,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup.component.html",{"_index":860,"title":{},"body":{"components/SignupComponent.html":{}}}],["signupcomponent",{"_index":66,"title":{"components/SignupComponent.html":{}},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{}}}],["signupform",{"_index":861,"title":{},"body":{"components/SignupComponent.html":{}}}],["slidedown",{"_index":653,"title":{},"body":{"components/HomeComponent.html":{}}}],["smooth",{"_index":722,"title":{},"body":{"components/HomeComponent.html":{}}}],["solid",{"_index":795,"title":{},"body":{"components/NavbarComponent.html":{},"dependencies.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"interfaces/Candidate.html":{},"injectables/CandidateService.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"interfaces/Election.html":{},"injectables/ElectionService.html":{},"injectables/FavoriteService.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"injectables/ResultsService.html":{},"components/SignupComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/Vote.html":{},"injectables/VoteService.html":{},"index.html":{}}}],["speeddialmodule",{"_index":163,"title":{},"body":{"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/ProfilComponent.html":{}}}],["src/.../app.config.server.ts",{"_index":1059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":1056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.interceptor.ts",{"_index":1057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.server.ts",{"_index":1058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":293,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:23",{"_index":302,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.server.ts",{"_index":940,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":944,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routes.ts",{"_index":319,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/components/accueil/accueil.component.ts",{"_index":9,"title":{},"body":{"components/AccueilComponent.html":{},"coverage.html":{}}}],["src/app/components/candidat",{"_index":403,"title":{},"body":{"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"coverage.html":{}}}],["src/app/components/dashboard/admin",{"_index":73,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"coverage.html":{}}}],["src/app/components/dashboard/dashboard/dashboard.component.ts",{"_index":579,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/components/dashboard/dashboard/dashboard.component.ts:11",{"_index":583,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard/dashboard.component.ts:14",{"_index":585,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/footer/footer.component.ts",{"_index":627,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/components/home/home.component.ts",{"_index":646,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/components/home/home.component.ts:135",{"_index":687,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:58",{"_index":689,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:59",{"_index":690,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:60",{"_index":683,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:68",{"_index":685,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:72",{"_index":686,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:77",{"_index":684,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:89",{"_index":688,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/login/login.component.ts",{"_index":735,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:15",{"_index":745,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:16",{"_index":744,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:17",{"_index":741,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:25",{"_index":742,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:33",{"_index":743,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts",{"_index":777,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/components/navbar/navbar.component.ts:14",{"_index":781,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:18",{"_index":784,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:24",{"_index":783,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:28",{"_index":782,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/profil/profil.component.ts",{"_index":796,"title":{},"body":{"components/ProfilComponent.html":{},"coverage.html":{}}}],["src/app/components/profil/profil.component.ts:102",{"_index":815,"title":{},"body":{"components/ProfilComponent.html":{}}}],["src/app/components/profil/profil.component.ts:120",{"_index":809,"title":{},"body":{"components/ProfilComponent.html":{}}}],["src/app/components/profil/profil.component.ts:34",{"_index":816,"title":{},"body":{"components/ProfilComponent.html":{}}}],["src/app/components/profil/profil.component.ts:35",{"_index":819,"title":{},"body":{"components/ProfilComponent.html":{}}}],["src/app/components/profil/profil.component.ts:36",{"_index":817,"title":{},"body":{"components/ProfilComponent.html":{}}}],["src/app/components/profil/profil.component.ts:37",{"_index":820,"title":{},"body":{"components/ProfilComponent.html":{}}}],["src/app/components/profil/profil.component.ts:38",{"_index":821,"title":{},"body":{"components/ProfilComponent.html":{}}}],["src/app/components/profil/profil.component.ts:39",{"_index":818,"title":{},"body":{"components/ProfilComponent.html":{}}}],["src/app/components/profil/profil.component.ts:40",{"_index":808,"title":{},"body":{"components/ProfilComponent.html":{}}}],["src/app/components/profil/profil.component.ts:49",{"_index":814,"title":{},"body":{"components/ProfilComponent.html":{}}}],["src/app/components/profil/profil.component.ts:60",{"_index":812,"title":{},"body":{"components/ProfilComponent.html":{}}}],["src/app/components/profil/profil.component.ts:72",{"_index":811,"title":{},"body":{"components/ProfilComponent.html":{}}}],["src/app/components/profil/profil.component.ts:83",{"_index":813,"title":{},"body":{"components/ProfilComponent.html":{}}}],["src/app/components/profil/profil.component.ts:98",{"_index":810,"title":{},"body":{"components/ProfilComponent.html":{}}}],["src/app/components/signup/signup.component.ts",{"_index":858,"title":{},"body":{"components/SignupComponent.html":{},"coverage.html":{}}}],["src/app/components/signup/signup.component.ts:17",{"_index":870,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/components/signup/signup.component.ts:18",{"_index":869,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/components/signup/signup.component.ts:19",{"_index":863,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/components/signup/signup.component.ts:27",{"_index":867,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/components/signup/signup.component.ts:41",{"_index":866,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/components/signup/signup.component.ts:56",{"_index":868,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/models/candidate.model.ts",{"_index":532,"title":{},"body":{"interfaces/Candidate.html":{},"coverage.html":{}}}],["src/app/models/comment.model.ts",{"_index":559,"title":{},"body":{"interfaces/Comment.html":{},"coverage.html":{}}}],["src/app/models/election.model.ts",{"_index":589,"title":{},"body":{"interfaces/Election.html":{},"coverage.html":{}}}],["src/app/models/user.model.ts",{"_index":895,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/models/vote.model.ts",{"_index":914,"title":{},"body":{"interfaces/Vote.html":{},"coverage.html":{}}}],["src/app/services/auth.interceptor.ts",{"_index":956,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/auth.service.ts",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:11",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:12",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:16",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:23",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:33",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:40",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:47",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:54",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:61",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:65",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/candidate.service.ts",{"_index":537,"title":{},"body":{"injectables/CandidateService.html":{},"coverage.html":{}}}],["src/app/services/candidate.service.ts:12",{"_index":541,"title":{},"body":{"injectables/CandidateService.html":{}}}],["src/app/services/candidate.service.ts:16",{"_index":547,"title":{},"body":{"injectables/CandidateService.html":{}}}],["src/app/services/candidate.service.ts:22",{"_index":546,"title":{},"body":{"injectables/CandidateService.html":{}}}],["src/app/services/candidate.service.ts:28",{"_index":543,"title":{},"body":{"injectables/CandidateService.html":{}}}],["src/app/services/candidate.service.ts:34",{"_index":549,"title":{},"body":{"injectables/CandidateService.html":{}}}],["src/app/services/candidate.service.ts:40",{"_index":545,"title":{},"body":{"injectables/CandidateService.html":{}}}],["src/app/services/comment.service.ts",{"_index":565,"title":{},"body":{"injectables/CommentService.html":{},"coverage.html":{}}}],["src/app/services/comment.service.ts:12",{"_index":567,"title":{},"body":{"injectables/CommentService.html":{}}}],["src/app/services/comment.service.ts:16",{"_index":569,"title":{},"body":{"injectables/CommentService.html":{}}}],["src/app/services/comment.service.ts:30",{"_index":571,"title":{},"body":{"injectables/CommentService.html":{}}}],["src/app/services/comment.service.ts:36",{"_index":573,"title":{},"body":{"injectables/CommentService.html":{}}}],["src/app/services/election.service.ts",{"_index":596,"title":{},"body":{"injectables/ElectionService.html":{},"coverage.html":{}}}],["src/app/services/election.service.ts:12",{"_index":602,"title":{},"body":{"injectables/ElectionService.html":{}}}],["src/app/services/election.service.ts:16",{"_index":609,"title":{},"body":{"injectables/ElectionService.html":{}}}],["src/app/services/election.service.ts:22",{"_index":608,"title":{},"body":{"injectables/ElectionService.html":{}}}],["src/app/services/election.service.ts:28",{"_index":604,"title":{},"body":{"injectables/ElectionService.html":{}}}],["src/app/services/election.service.ts:34",{"_index":611,"title":{},"body":{"injectables/ElectionService.html":{}}}],["src/app/services/election.service.ts:40",{"_index":606,"title":{},"body":{"injectables/ElectionService.html":{}}}],["src/app/services/favorite.service.ts",{"_index":614,"title":{},"body":{"injectables/FavoriteService.html":{},"coverage.html":{}}}],["src/app/services/favorite.service.ts:12",{"_index":618,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["src/app/services/favorite.service.ts:16",{"_index":621,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["src/app/services/favorite.service.ts:22",{"_index":620,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["src/app/services/favorite.service.ts:32",{"_index":623,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["src/app/services/results.service.ts",{"_index":850,"title":{},"body":{"injectables/ResultsService.html":{},"coverage.html":{}}}],["src/app/services/results.service.ts:11",{"_index":852,"title":{},"body":{"injectables/ResultsService.html":{}}}],["src/app/services/results.service.ts:15",{"_index":854,"title":{},"body":{"injectables/ResultsService.html":{}}}],["src/app/services/user.service.ts",{"_index":897,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/services/user.service.ts:12",{"_index":902,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:16",{"_index":907,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:22",{"_index":910,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:28",{"_index":906,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:34",{"_index":908,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:40",{"_index":904,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/vote.service.ts",{"_index":916,"title":{},"body":{"injectables/VoteService.html":{},"coverage.html":{}}}],["src/app/services/vote.service.ts:12",{"_index":920,"title":{},"body":{"injectables/VoteService.html":{}}}],["src/app/services/vote.service.ts:16",{"_index":922,"title":{},"body":{"injectables/VoteService.html":{}}}],["src/app/services/vote.service.ts:23",{"_index":924,"title":{},"body":{"injectables/VoteService.html":{}}}],["src/app/services/vote.service.ts:29",{"_index":923,"title":{},"body":{"injectables/VoteService.html":{}}}],["src/app/services/vote.service.ts:35",{"_index":926,"title":{},"body":{"injectables/VoteService.html":{}}}],["src/environments/environment.prod.ts",{"_index":958,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":959,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.server.ts",{"_index":960,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["standalone",{"_index":14,"title":{},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{}}}],["startdate",{"_index":592,"title":{},"body":{"interfaces/Election.html":{}}}],["started",{"_index":1002,"title":{"index.html":{}},"body":{}}],["statements",{"_index":934,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":787,"title":{},"body":{"components/NavbarComponent.html":{}}}],["stored",{"_index":1022,"title":{},"body":{"index.html":{}}}],["string",{"_index":110,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CandidatDetailsComponent.html":{},"interfaces/Candidate.html":{},"injectables/CandidateService.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"interfaces/Election.html":{},"injectables/ElectionService.html":{},"injectables/FavoriteService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"injectables/ResultsService.html":{},"components/SignupComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/Vote.html":{},"injectables/VoteService.html":{}}}],["string,party:string",{"_index":915,"title":{},"body":{"interfaces/Vote.html":{}}}],["styles",{"_index":72,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{}}}],["styleurl",{"_index":22,"title":{},"body":{"components/AccueilComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{}}}],["styleurls",{"_index":81,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{}}}],["submit",{"_index":160,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/CandidatDetailsComponent.html":{}}}],["subscribe",{"_index":141,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/CandidatDetailsComponent.html":{}}}],["successful",{"_index":760,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["successfully",{"_index":144,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["sure",{"_index":514,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["svg",{"_index":977,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":963,"title":{},"body":{"coverage.html":{}}}],["tablemodule",{"_index":161,"title":{},"body":{"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/ProfilComponent.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":962,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{}}}],["templateurl",{"_index":20,"title":{},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{}}}],["terms",{"_index":635,"title":{},"body":{"components/FooterComponent.html":{}}}],["test",{"_index":1028,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1039,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1027,"title":{},"body":{"index.html":{}}}],["text",{"_index":677,"title":{},"body":{"components/HomeComponent.html":{}}}],["then((votes",{"_index":710,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.alreadyfavorite",{"_index":468,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["this.apiurl",{"_index":576,"title":{},"body":{"injectables/CommentService.html":{}}}],["this.apiurl}/${candidateid",{"_index":625,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["this.apiurl}/login",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.apiurl}/register",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authservice.getauthheaders",{"_index":554,"title":{},"body":{"injectables/CandidateService.html":{},"injectables/CommentService.html":{},"injectables/ElectionService.html":{},"injectables/FavoriteService.html":{},"injectables/ResultsService.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{}}}],["this.authservice.isloggedin().subscribe((status",{"_index":785,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.authservice.login(email",{"_index":755,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logout",{"_index":789,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.authservice.register(this.signupform.value).subscribe",{"_index":890,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.authservice.savetoken(response.token",{"_index":758,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.candidate",{"_index":463,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["this.candidate._id",{"_index":528,"title":{},"body":{"components/CandidatDivComponent.html":{}}}],["this.candidateform",{"_index":122,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{}}}],["this.candidateform.patchvalue(candidate",{"_index":133,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{}}}],["this.candidateform.valid",{"_index":137,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{}}}],["this.candidateform.value",{"_index":140,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{}}}],["this.candidateid",{"_index":129,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{}}}],["this.candidates",{"_index":204,"title":{},"body":{"components/AdminListCandidatsComponent.html":{},"components/HomeComponent.html":{}}}],["this.candidates.filter",{"_index":211,"title":{},"body":{"components/AdminListCandidatsComponent.html":{}}}],["this.candidates.map((candidate",{"_index":706,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.candidateservice",{"_index":138,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{}}}],["this.candidateservice.getcandidate(id).subscribe",{"_index":462,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["this.candidateservice.getcandidate(this.candidateid).subscribe",{"_index":131,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{}}}],["this.candidateservice.getcandidates().subscribe",{"_index":203,"title":{},"body":{"components/AdminListCandidatsComponent.html":{},"components/HomeComponent.html":{}}}],["this.changeinfoform",{"_index":822,"title":{},"body":{"components/ProfilComponent.html":{}}}],["this.changeinfoform.invalid",{"_index":834,"title":{},"body":{"components/ProfilComponent.html":{}}}],["this.changeinfoform.patchvalue(user",{"_index":829,"title":{},"body":{"components/ProfilComponent.html":{}}}],["this.checkfavorite(candidateid",{"_index":459,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["this.checkvote(candidateid",{"_index":460,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["this.comments",{"_index":465,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["this.comments.push(fetchedcomment",{"_index":495,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["this.commentservice",{"_index":486,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["this.commentservice.getcomment(newcomment._id!).subscribe",{"_index":493,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["this.commentservice.getcomments(candidateid).subscribe",{"_index":464,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["this.data",{"_index":714,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.errormessage",{"_index":766,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{}}}],["this.favoritecandidates",{"_index":830,"title":{},"body":{"components/ProfilComponent.html":{}}}],["this.favoriteservice.addfavorite(this.candidate?._id!).subscribe",{"_index":498,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["this.favoriteservice.getfavorites().subscribe",{"_index":466,"title":{},"body":{"components/CandidatDetailsComponent.html":{},"components/ProfilComponent.html":{}}}],["this.favoriteservice.removefavorite(this.candidate?._id!).subscribe",{"_index":496,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["this.fb.group",{"_index":123,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/LoginComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{}}}],["this.fetchcandidates",{"_index":202,"title":{},"body":{"components/AdminListCandidatsComponent.html":{}}}],["this.fetchfavoritecandidates",{"_index":825,"title":{},"body":{"components/ProfilComponent.html":{}}}],["this.fetchuserprofile",{"_index":824,"title":{},"body":{"components/ProfilComponent.html":{}}}],["this.fetchusers",{"_index":271,"title":{},"body":{"components/AdminListUsersComponent.html":{}}}],["this.fetchuservotes",{"_index":826,"title":{},"body":{"components/ProfilComponent.html":{}}}],["this.filteredcandidates",{"_index":205,"title":{},"body":{"components/AdminListCandidatsComponent.html":{}}}],["this.filteredcandidates.filter",{"_index":223,"title":{},"body":{"components/AdminListCandidatsComponent.html":{}}}],["this.filteredusers",{"_index":274,"title":{},"body":{"components/AdminListUsersComponent.html":{}}}],["this.filteredusers.filter",{"_index":283,"title":{},"body":{"components/AdminListUsersComponent.html":{}}}],["this.formsubmitted",{"_index":752,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{}}}],["this.getcandidate(candidateid",{"_index":457,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["this.getcandidates",{"_index":694,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.getcomments(candidateid",{"_index":458,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["this.gettoken",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.hasvoted",{"_index":476,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["this.http.delete(`${this.apiurl}/${candidateid",{"_index":626,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["this.http.delete(`${this.apiurl}/${id",{"_index":558,"title":{},"body":{"injectables/CandidateService.html":{},"injectables/ElectionService.html":{},"injectables/UserService.html":{}}}],["this.http.get(`${this.apiurl}/${candidateid",{"_index":578,"title":{},"body":{"injectables/CommentService.html":{}}}],["this.http.get(`${this.apiurl}/${electionid",{"_index":857,"title":{},"body":{"injectables/ResultsService.html":{}}}],["this.http.get(`${this.apiurl}/${id",{"_index":555,"title":{},"body":{"injectables/CandidateService.html":{},"injectables/ElectionService.html":{},"injectables/UserService.html":{}}}],["this.http.get(`${this.apiurl}/candidate/${candidateid",{"_index":930,"title":{},"body":{"injectables/VoteService.html":{}}}],["this.http.get(`${this.apiurl}/comment/${commentid",{"_index":577,"title":{},"body":{"injectables/CommentService.html":{}}}],["this.http.get(`${this.apiurl}/profile",{"_index":912,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(`${this.apiurl}/user",{"_index":929,"title":{},"body":{"injectables/VoteService.html":{}}}],["this.http.get(this.apiurl",{"_index":552,"title":{},"body":{"injectables/CandidateService.html":{},"injectables/ElectionService.html":{},"injectables/FavoriteService.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{}}}],["this.http.post",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CommentService.html":{},"injectables/FavoriteService.html":{}}}],["this.http.post(this.apiurl",{"_index":556,"title":{},"body":{"injectables/CandidateService.html":{},"injectables/ElectionService.html":{},"injectables/VoteService.html":{}}}],["this.http.put(`${this.apiurl}/${id",{"_index":557,"title":{},"body":{"injectables/CandidateService.html":{},"injectables/ElectionService.html":{}}}],["this.http.put(`${this.apiurl}/profile",{"_index":913,"title":{},"body":{"injectables/UserService.html":{}}}],["this.loading",{"_index":206,"title":{},"body":{"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{}}}],["this.loggedin",{"_index":786,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.loggedin.asobservable",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loggedin.next(false",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loggedin.next(true",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loginform",{"_index":748,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.invalid",{"_index":753,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value",{"_index":754,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.matchpasswords('password",{"_index":873,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.newcomment",{"_index":488,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["this.route.fragment?.subscribe((fragment",{"_index":717,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.route.snapshot.parammap.get('id",{"_index":130,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/CandidatDetailsComponent.html":{}}}],["this.router.navigate(['/accueil/candidate",{"_index":529,"title":{},"body":{"components/CandidatDivComponent.html":{}}}],["this.router.navigate(['/dashboard/candidates",{"_index":145,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{}}}],["this.router.navigate(['/dashboard/candidates/add",{"_index":225,"title":{},"body":{"components/AdminListCandidatsComponent.html":{}}}],["this.router.navigate(['/dashboard/candidates/edit",{"_index":226,"title":{},"body":{"components/AdminListCandidatsComponent.html":{}}}],["this.router.navigate(['/dashboard/users/add",{"_index":284,"title":{},"body":{"components/AdminListUsersComponent.html":{}}}],["this.router.navigate(['/dashboard/users/edit",{"_index":285,"title":{},"body":{"components/AdminListUsersComponent.html":{}}}],["this.router.navigate(['/home",{"_index":763,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['/login",{"_index":790,"title":{},"body":{"components/NavbarComponent.html":{},"components/SignupComponent.html":{}}}],["this.router.navigate([`${route",{"_index":587,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.router.navigate([route",{"_index":788,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.scrolltofragment",{"_index":693,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.selectedcandidate",{"_index":217,"title":{},"body":{"components/AdminListCandidatsComponent.html":{}}}],["this.selectedcandidate!._id",{"_index":222,"title":{},"body":{"components/AdminListCandidatsComponent.html":{}}}],["this.selecteduser",{"_index":278,"title":{},"body":{"components/AdminListUsersComponent.html":{}}}],["this.selecteduser!._id",{"_index":282,"title":{},"body":{"components/AdminListUsersComponent.html":{}}}],["this.show",{"_index":833,"title":{},"body":{"components/ProfilComponent.html":{}}}],["this.showdialogue",{"_index":218,"title":{},"body":{"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{}}}],["this.signupform",{"_index":871,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.signupform.invalid",{"_index":889,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.updatechartdata",{"_index":695,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.user",{"_index":828,"title":{},"body":{"components/ProfilComponent.html":{}}}],["this.users",{"_index":273,"title":{},"body":{"components/AdminListUsersComponent.html":{}}}],["this.users.filter",{"_index":275,"title":{},"body":{"components/AdminListUsersComponent.html":{}}}],["this.userservice.deleteuser(this.selecteduser._id!).subscribe",{"_index":279,"title":{},"body":{"components/AdminListUsersComponent.html":{}}}],["this.userservice.getuserprofile().subscribe",{"_index":827,"title":{},"body":{"components/ProfilComponent.html":{}}}],["this.userservice.getusers().subscribe",{"_index":272,"title":{},"body":{"components/AdminListUsersComponent.html":{}}}],["this.userservice.updateuserprofile(this.changeinfoform.value).subscribe",{"_index":835,"title":{},"body":{"components/ProfilComponent.html":{}}}],["this.visible",{"_index":499,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["this.votedcandidatename",{"_index":831,"title":{},"body":{"components/ProfilComponent.html":{}}}],["this.votedforcurrentcandidate",{"_index":482,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["this.voteservice",{"_index":707,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.voteservice.castvote(this.candidate._id!).subscribe",{"_index":500,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["this.voteservice.getuservotes().subscribe",{"_index":473,"title":{},"body":{"components/CandidatDetailsComponent.html":{},"components/ProfilComponent.html":{}}}],["title",{"_index":300,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Election.html":{}}}],["toastmodule",{"_index":162,"title":{},"body":{"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/ProfilComponent.html":{}}}],["todetails",{"_index":522,"title":{},"body":{"components/CandidatDivComponent.html":{}}}],["togglefavorite",{"_index":426,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["token",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["tooltipmodule",{"_index":409,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["topromise",{"_index":709,"title":{},"body":{"components/HomeComponent.html":{}}}],["track",{"_index":732,"title":{},"body":{"components/HomeComponent.html":{}}}],["transform",{"_index":655,"title":{},"body":{"components/HomeComponent.html":{}}}],["translatey(0",{"_index":656,"title":{},"body":{"components/HomeComponent.html":{}}}],["translatey(20px",{"_index":657,"title":{},"body":{"components/HomeComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{}}}],["true",{"_index":15,"title":{},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":838,"title":{},"body":{"components/ProfilComponent.html":{}}}],["tslib",{"_index":994,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":101,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"interfaces/Candidate.html":{},"injectables/CandidateService.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"interfaces/Election.html":{},"injectables/ElectionService.html":{},"injectables/FavoriteService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"injectables/ResultsService.html":{},"components/SignupComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/Vote.html":{},"injectables/VoteService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{}}}],["u",{"_index":280,"title":{},"body":{"components/AdminListUsersComponent.html":{}}}],["u._id",{"_index":281,"title":{},"body":{"components/AdminListUsersComponent.html":{}}}],["undefined",{"_index":194,"title":{},"body":{"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"injectables/AuthService.html":{}}}],["unit",{"_index":1026,"title":{},"body":{"index.html":{}}}],["up",{"_index":727,"title":{},"body":{"components/HomeComponent.html":{}}}],["update",{"_index":562,"title":{},"body":{"interfaces/Comment.html":{},"components/ProfilComponent.html":{}}}],["updatecandidate",{"_index":540,"title":{},"body":{"injectables/CandidateService.html":{}}}],["updatecandidate(id",{"_index":548,"title":{},"body":{"injectables/CandidateService.html":{}}}],["updatecandidate(this.candidateid",{"_index":139,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{}}}],["updatechartdata",{"_index":682,"title":{},"body":{"components/HomeComponent.html":{}}}],["updated",{"_index":143,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{}}}],["updatedat",{"_index":535,"title":{},"body":{"interfaces/Candidate.html":{},"interfaces/Comment.html":{},"interfaces/Election.html":{},"interfaces/User.html":{},"interfaces/Vote.html":{}}}],["updateelection",{"_index":601,"title":{},"body":{"injectables/ElectionService.html":{}}}],["updateelection(id",{"_index":610,"title":{},"body":{"injectables/ElectionService.html":{}}}],["updateuserprofile",{"_index":901,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserprofile(user",{"_index":909,"title":{},"body":{"injectables/UserService.html":{}}}],["updating",{"_index":146,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/ProfilComponent.html":{}}}],["use",{"_index":1018,"title":{},"body":{"index.html":{}}}],["user",{"_index":255,"title":{"interfaces/User.html":{}},"body":{"components/AdminListUsersComponent.html":{},"injectables/AuthService.html":{},"components/CandidatDetailsComponent.html":{},"interfaces/Comment.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/Vote.html":{},"coverage.html":{}}}],["user._id",{"_index":286,"title":{},"body":{"components/AdminListUsersComponent.html":{}}}],["user.age",{"_index":291,"title":{},"body":{"components/AdminListUsersComponent.html":{}}}],["user.bio",{"_index":292,"title":{},"body":{"components/AdminListUsersComponent.html":{}}}],["user.name",{"_index":290,"title":{},"body":{"components/AdminListUsersComponent.html":{}}}],["user?.bio",{"_index":841,"title":{},"body":{"components/ProfilComponent.html":{}}}],["user?.name",{"_index":840,"title":{},"body":{"components/ProfilComponent.html":{}}}],["users",{"_index":239,"title":{},"body":{"components/AdminListUsersComponent.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{}}}],["users'},{'name",{"_index":48,"title":{},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{}}}],["users.component",{"_index":325,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["users.component.css",{"_index":240,"title":{},"body":{"components/AdminListUsersComponent.html":{}}}],["users.component.html",{"_index":241,"title":{},"body":{"components/AdminListUsersComponent.html":{}}}],["users.component.ts",{"_index":238,"title":{},"body":{"components/AdminListUsersComponent.html":{},"coverage.html":{}}}],["users.component.ts:19",{"_index":263,"title":{},"body":{"components/AdminListUsersComponent.html":{}}}],["users.component.ts:20",{"_index":265,"title":{},"body":{"components/AdminListUsersComponent.html":{}}}],["users.component.ts:21",{"_index":264,"title":{},"body":{"components/AdminListUsersComponent.html":{}}}],["users.component.ts:22",{"_index":262,"title":{},"body":{"components/AdminListUsersComponent.html":{}}}],["users.component.ts:23",{"_index":266,"title":{},"body":{"components/AdminListUsersComponent.html":{}}}],["users.component.ts:24",{"_index":250,"title":{},"body":{"components/AdminListUsersComponent.html":{}}}],["users.component.ts:28",{"_index":258,"title":{},"body":{"components/AdminListUsersComponent.html":{}}}],["users.component.ts:32",{"_index":257,"title":{},"body":{"components/AdminListUsersComponent.html":{}}}],["users.component.ts:46",{"_index":259,"title":{},"body":{"components/AdminListUsersComponent.html":{}}}],["users.component.ts:59",{"_index":261,"title":{},"body":{"components/AdminListUsersComponent.html":{}}}],["users.component.ts:64",{"_index":252,"title":{},"body":{"components/AdminListUsersComponent.html":{}}}],["users.component.ts:69",{"_index":253,"title":{},"body":{"components/AdminListUsersComponent.html":{}}}],["users.component.ts:89",{"_index":251,"title":{},"body":{"components/AdminListUsersComponent.html":{}}}],["users.component.ts:93",{"_index":256,"title":{},"body":{"components/AdminListUsersComponent.html":{}}}],["users/admin",{"_index":237,"title":{},"body":{"components/AdminListUsersComponent.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["userservice",{"_index":249,"title":{"injectables/UserService.html":{}},"body":{"components/AdminListUsersComponent.html":{},"components/ProfilComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["valid",{"_index":848,"title":{},"body":{"components/ProfilComponent.html":{}}}],["validator",{"_index":872,"title":{},"body":{"components/SignupComponent.html":{}}}],["validators",{"_index":114,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/LoginComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{}}}],["validators.email",{"_index":749,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{}}}],["validators.minlength(3",{"_index":823,"title":{},"body":{"components/ProfilComponent.html":{},"components/SignupComponent.html":{}}}],["validators.minlength(6",{"_index":750,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["validators.required",{"_index":124,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/LoginComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{}}}],["value",{"_index":113,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CandidatDetailsComponent.html":{},"injectables/CandidateService.html":{},"injectables/CommentService.html":{},"injectables/ElectionService.html":{},"injectables/FavoriteService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"injectables/ResultsService.html":{},"components/SignupComponent.html":{},"injectables/UserService.html":{},"injectables/VoteService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":37,"title":{},"body":{"components/AccueilComponent.html":{},"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/AppComponent.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{}}}],["variable",{"_index":941,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1055,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1007,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":1030,"title":{},"body":{"index.html":{}}}],["view",{"_index":730,"title":{},"body":{"components/HomeComponent.html":{}}}],["visible",{"_index":417,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["void",{"_index":106,"title":{},"body":{"components/AdminFormCandidatsComponent.html":{},"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"injectables/AuthService.html":{},"components/CandidatDetailsComponent.html":{},"components/CandidatDivComponent.html":{},"components/DashboardComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfilComponent.html":{},"components/SignupComponent.html":{},"miscellaneous/functions.html":{}}}],["vote",{"_index":481,"title":{"interfaces/Vote.html":{}},"body":{"components/CandidatDetailsComponent.html":{},"components/ProfilComponent.html":{},"interfaces/Vote.html":{},"injectables/VoteService.html":{},"coverage.html":{}}}],["vote.candidate._id",{"_index":484,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["voted",{"_index":479,"title":{},"body":{"components/CandidatDetailsComponent.html":{},"components/ProfilComponent.html":{}}}],["votedcandidatename",{"_index":803,"title":{},"body":{"components/ProfilComponent.html":{}}}],["votedforcurrentcandidate",{"_index":418,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["votes",{"_index":474,"title":{},"body":{"components/CandidatDetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProfilComponent.html":{}}}],["votes.length",{"_index":477,"title":{},"body":{"components/CandidatDetailsComponent.html":{},"components/ProfilComponent.html":{}}}],["votes.some",{"_index":483,"title":{},"body":{"components/CandidatDetailsComponent.html":{}}}],["votes[0].candidate.name",{"_index":832,"title":{},"body":{"components/ProfilComponent.html":{}}}],["voteservice",{"_index":407,"title":{"injectables/VoteService.html":{}},"body":{"components/CandidatDetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProfilComponent.html":{},"injectables/VoteService.html":{},"coverage.html":{}}}],["want",{"_index":235,"title":{},"body":{"components/AdminListCandidatsComponent.html":{},"components/AdminListUsersComponent.html":{},"components/CandidatDetailsComponent.html":{}}}],["welcome",{"_index":723,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{}}}],["white",{"_index":792,"title":{},"body":{"components/NavbarComponent.html":{}}}],["window",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{}}}],["write",{"_index":768,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["zone.js",{"_index":996,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":1048,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AccueilComponent.html":{"url":"components/AccueilComponent.html","title":"component - AccueilComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AccueilComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/accueil/accueil.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-accueil\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                NavbarComponent\n                                FooterComponent\n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./accueil.component.html\n            \n\n\n\n            \n                styleUrl\n                ./accueil.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { NavbarComponent } from \"../navbar/navbar.component\";\nimport { FooterComponent } from \"../footer/footer.component\";\n\nimport { RouterOutlet } from '@angular/router';\n@Component({\n  selector: 'app-accueil',\n  standalone: true,\n  imports: [NavbarComponent, FooterComponent,RouterOutlet],\n  templateUrl: './accueil.component.html',\n  styleUrl: './accueil.component.css'\n})\nexport class AccueilComponent {\n\n}\n\n    \n\n    \n        \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccueilComponent', 'selector': 'app-accueil'},{'name': 'AdminFormCandidatsComponent', 'selector': 'app-admin-form-candidats'},{'name': 'AdminListCandidatsComponent', 'selector': 'app-admin-list-candidats'},{'name': 'AdminListUsersComponent', 'selector': 'app-admin-list-users'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CandidatDetailsComponent', 'selector': 'app-candidat-details'},{'name': 'CandidatDivComponent', 'selector': 'app-candidat-div'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProfilComponent', 'selector': 'app-profil'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AccueilComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminFormCandidatsComponent.html":{"url":"components/AdminFormCandidatsComponent.html","title":"component - AdminFormCandidatsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdminFormCandidatsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/dashboard/admin-form-candidats/admin-form-candidats.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin-form-candidats\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./admin-form-candidats.component.css\n            \n\n\n\n            \n                templateUrl\n                ./admin-form-candidats.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                candidateForm\n                            \n                            \n                                candidateId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, route: ActivatedRoute, router: Router, candidateService: CandidateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/dashboard/admin-form-candidats/admin-form-candidats.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        candidateService\n                                                  \n                                                        \n                                                                        CandidateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/dashboard/admin-form-candidats/admin-form-candidats.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/dashboard/admin-form-candidats/admin-form-candidats.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        candidateForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/admin-form-candidats/admin-form-candidats.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        candidateId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/admin-form-candidats/admin-form-candidats.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CandidateService } from '../../../services/candidate.service';\nimport { Candidate } from '../../../models/candidate.model';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-admin-form-candidats',\n  standalone: true,\n  imports: [ReactiveFormsModule,CommonModule],\n  templateUrl: './admin-form-candidats.component.html',\n  styleUrls: ['./admin-form-candidats.component.css'],\n})\nexport class AdminFormCandidatsComponent implements OnInit {\n  candidateForm: FormGroup;\n  candidateId: string | null = null;\n\n  constructor(\n    private fb: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private candidateService: CandidateService\n  ) {\n    this.candidateForm = this.fb.group({\n      name: ['', Validators.required],\n      party: ['', Validators.required],\n      biography: ['', Validators.required],\n      electoralProgram: ['', Validators.required],\n      profilePicture: [''],\n    });\n  }\n\n  ngOnInit(): void {\n    this.candidateId = this.route.snapshot.paramMap.get('id');\n    if (this.candidateId) {\n      this.candidateService.getCandidate(this.candidateId).subscribe({\n        next: (candidate) => {\n          this.candidateForm.patchValue(candidate);\n        },\n        error: (error) => {\n          console.error('Error fetching candidate:', error);\n        },\n      });\n    }\n  }\n\n  onSubmit(): void {\n    if (this.candidateForm.valid) {\n      if (this.candidateId) {\n        this.candidateService\n          .updateCandidate(this.candidateId, this.candidateForm.value)\n          .subscribe({\n            next: () => {\n              alert('Candidate updated successfully!');\n              this.router.navigate(['/dashboard/candidates']);\n            },\n            error: (error) => {\n              console.error('Error updating candidate:', error);\n            },\n          });\n      } else {\n        this.candidateService\n          .createCandidate(this.candidateForm.value)\n          .subscribe({\n            next: () => {\n              alert('Candidate added successfully!');\n              this.router.navigate(['/dashboard/candidates']);\n            },\n            error: (error) => {\n              console.error('Error adding candidate:', error);\n            },\n          });\n      }\n    } else {\n      alert('Please fill out all required fields.');\n    }\n  }\n}\n\n    \n\n    \n        \n    Candidate Information\n    \n\n    \n        \n            \n                \n                \n                    Name:\n                    \n                    \n                        Name is required.\n                    \n                \n\n                \n                \n                    Party:\n                    \n                    \n                        Party is required.\n                    \n                \n\n                \n                \n                    Biography:\n                    \n                    \n                        Biography is required.\n                    \n                \n\n                \n                \n                    Electoral Program:\n                    \n                    \n                        Electoral Program is required.\n                    \n                \n\n                \n                \n                    Profile Picture:\n                    \n                \n            \n\n            \n                Submit\n            \n        \n    \n\n    \n\n    \n                \n                    ./admin-form-candidats.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Candidate Information                                                                                Name:                                                                Name is required.                                                                                        Party:                                                                Party is required.                                                                                        Biography:                                                                Biography is required.                                                                                        Electoral Program:                                                                Electoral Program is required.                                                                                        Profile Picture:                                                                            Submit                        '\n    var COMPONENTS = [{'name': 'AccueilComponent', 'selector': 'app-accueil'},{'name': 'AdminFormCandidatsComponent', 'selector': 'app-admin-form-candidats'},{'name': 'AdminListCandidatsComponent', 'selector': 'app-admin-list-candidats'},{'name': 'AdminListUsersComponent', 'selector': 'app-admin-list-users'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CandidatDetailsComponent', 'selector': 'app-candidat-details'},{'name': 'CandidatDivComponent', 'selector': 'app-candidat-div'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProfilComponent', 'selector': 'app-profil'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminFormCandidatsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminListCandidatsComponent.html":{"url":"components/AdminListCandidatsComponent.html","title":"component - AdminListCandidatsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdminListCandidatsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/dashboard/admin-list-candidats/admin-list-candidats.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin-list-candidats\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            TableModule\n                            ToastModule\n                            SpeedDialModule\n                            DialogModule\n                \n            \n\n            \n                styleUrls\n                ./admin-list-candidats.component.css\n            \n\n\n\n            \n                templateUrl\n                ./admin-list-candidats.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                candidates\n                            \n                            \n                                filteredCandidates\n                            \n                            \n                                loading\n                            \n                            \n                                searchValue\n                            \n                            \n                                selectedCandidate\n                            \n                            \n                                showDialogue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCandidate\n                            \n                            \n                                cancelSup\n                            \n                            \n                                deleteCandidate\n                            \n                            \n                                editCandidate\n                            \n                            \n                                fetchCandidates\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSearchChange\n                            \n                            \n                                showIt\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(candidateService: CandidateService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/dashboard/admin-list-candidats/admin-list-candidats.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        candidateService\n                                                  \n                                                        \n                                                                        CandidateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addCandidate\n                        \n                    \n                \n            \n            \n                \naddCandidate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/dashboard/admin-list-candidats/admin-list-candidats.component.ts:93\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cancelSup\n                        \n                    \n                \n            \n            \n                \ncancelSup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/dashboard/admin-list-candidats/admin-list-candidats.component.ts:66\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteCandidate\n                        \n                    \n                \n            \n            \n                \ndeleteCandidate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/dashboard/admin-list-candidats/admin-list-candidats.component.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editCandidate\n                        \n                    \n                \n            \n            \n                \neditCandidate(candidate: Candidate)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/dashboard/admin-list-candidats/admin-list-candidats.component.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                candidate\n                                            \n                                                            Candidate\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchCandidates\n                        \n                    \n                \n            \n            \n                \nfetchCandidates()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/dashboard/admin-list-candidats/admin-list-candidats.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/dashboard/admin-list-candidats/admin-list-candidats.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSearchChange\n                        \n                    \n                \n            \n            \n                \nonSearchChange(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/dashboard/admin-list-candidats/admin-list-candidats.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showIt\n                        \n                    \n                \n            \n            \n                \nshowIt(candidate: Candidate)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/dashboard/admin-list-candidats/admin-list-candidats.component.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                candidate\n                                            \n                                                            Candidate\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        candidates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Candidate[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/admin-list-candidats/admin-list-candidats.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredCandidates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Candidate[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/admin-list-candidats/admin-list-candidats.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/admin-list-candidats/admin-list-candidats.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/admin-list-candidats/admin-list-candidats.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedCandidate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Candidate | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/admin-list-candidats/admin-list-candidats.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showDialogue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/admin-list-candidats/admin-list-candidats.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TableModule } from 'primeng/table';\nimport { SpeedDialModule } from 'primeng/speeddial';\nimport { ToastModule } from 'primeng/toast';\nimport { DialogModule } from 'primeng/dialog';\nimport { Candidate } from '../../../models/candidate.model';\nimport { CandidateService } from '../../../services/candidate.service';\n\n@Component({\n  selector: 'app-admin-list-candidats',\n  standalone: true,\n  imports: [TableModule, ToastModule, SpeedDialModule, DialogModule],\n  templateUrl: './admin-list-candidats.component.html',\n  styleUrls: ['./admin-list-candidats.component.css'],\n})\nexport class AdminListCandidatsComponent implements OnInit {\n  loading: boolean = true;\n  showDialogue: boolean = false;\n  searchValue: string | undefined;\n  filteredCandidates: Candidate[] = [];\n  candidates: Candidate[] = [];\n  selectedCandidate: Candidate | null = null;\n\n  constructor(\n    private candidateService: CandidateService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.fetchCandidates();\n  }\n\n  fetchCandidates(): void {\n    this.candidateService.getCandidates().subscribe({\n      next: (candidates) => {\n        this.candidates = candidates;\n        this.filteredCandidates = candidates;\n        this.loading = false;\n      },\n      error: (error) => {\n        console.error('Error fetching candidates:', error);\n        this.loading = false;\n      },\n    });\n  }\n\n  onSearchChange(event: Event) {\n    const input = (event.target as HTMLInputElement).value.toLowerCase();\n    if (input === '') {\n      this.filteredCandidates = this.candidates;\n    } else {\n      this.filteredCandidates = this.candidates.filter(\n        (data) =>\n          (data.name ? data.name.toLowerCase().includes(input) : false) ||\n          (data.party ? data.party.toLowerCase().includes(input) : false)\n      );\n    }\n  }\n\n  showIt(candidate: Candidate) {\n    this.selectedCandidate = candidate;\n    this.showDialogue = true;\n  }\n\n  cancelSup() {\n    this.showDialogue = false;\n    this.selectedCandidate = null;\n  }\n\n  deleteCandidate() {\n    if (this.selectedCandidate) {\n      this.candidateService\n        .deleteCandidate(this.selectedCandidate._id!)\n        .subscribe({\n          next: () => {\n            this.candidates = this.candidates.filter(\n              (c) => c._id !== this.selectedCandidate!._id\n            );\n            this.filteredCandidates = this.filteredCandidates.filter(\n              (c) => c._id !== this.selectedCandidate!._id\n            );\n            this.showDialogue = false;\n            this.selectedCandidate = null;\n          },\n          error: (error) => {\n            console.error('Error deleting candidate:', error);\n          },\n        });\n    }\n  }\n\n  addCandidate() {\n    this.router.navigate(['/dashboard/candidates/add']);\n  }\n\n  editCandidate(candidate: Candidate) {\n    this.router.navigate(['/dashboard/candidates/edit', candidate._id]);\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n            \n            \n        \n        \n             Add candidate\n        \n    \n    \n        \n            \n                \n                    \n                        Name \n                    \n                \n                \n                    \n                        Party \n                    \n                \n                Biography\n                Electoral Program\n            \n        \n        \n            \n                \n                    \n                        \n                        {{ candidate.name }}\n                    \n                \n                {{ candidate.party }}\n                {{ candidate.biography }}\n                {{ candidate.electoralProgram }}\n                    \n                        \n                        \n                    \n                \n            \n        \n        \n            \n                No Candidates found.\n            \n        \n    \n\n\n    Do you really want to delete this candidate?\n    \n        \n        \n    \n\n    \n\n    \n                \n                    ./admin-list-candidats.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                             Add candidate                                                                                                Name                                                                                                 Party                                                     Biography                Electoral Program                                                                                                                            {{ candidate.name }}                                                    {{ candidate.party }}                {{ candidate.biography }}                {{ candidate.electoralProgram }}                                                                                                                                                                No Candidates found.                            Do you really want to delete this candidate?                        '\n    var COMPONENTS = [{'name': 'AccueilComponent', 'selector': 'app-accueil'},{'name': 'AdminFormCandidatsComponent', 'selector': 'app-admin-form-candidats'},{'name': 'AdminListCandidatsComponent', 'selector': 'app-admin-list-candidats'},{'name': 'AdminListUsersComponent', 'selector': 'app-admin-list-users'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CandidatDetailsComponent', 'selector': 'app-candidat-details'},{'name': 'CandidatDivComponent', 'selector': 'app-candidat-div'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProfilComponent', 'selector': 'app-profil'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminListCandidatsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminListUsersComponent.html":{"url":"components/AdminListUsersComponent.html","title":"component - AdminListUsersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdminListUsersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/dashboard/admin-list-users/admin-list-users.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin-list-users\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            TableModule\n                            ToastModule\n                            SpeedDialModule\n                            DialogModule\n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./admin-list-users.component.css\n            \n\n\n\n            \n                templateUrl\n                ./admin-list-users.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filteredUsers\n                            \n                            \n                                loading\n                            \n                            \n                                searchValue\n                            \n                            \n                                selectedUser\n                            \n                            \n                                showDialogue\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                cancelSup\n                            \n                            \n                                deleteUser\n                            \n                            \n                                editUser\n                            \n                            \n                                fetchUsers\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSearchChange\n                            \n                            \n                                showIt\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/dashboard/admin-list-users/admin-list-users.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addUser\n                        \n                    \n                \n            \n            \n                \naddUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/dashboard/admin-list-users/admin-list-users.component.ts:89\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cancelSup\n                        \n                    \n                \n            \n            \n                \ncancelSup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/dashboard/admin-list-users/admin-list-users.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/dashboard/admin-list-users/admin-list-users.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editUser\n                        \n                    \n                \n            \n            \n                \neditUser(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/dashboard/admin-list-users/admin-list-users.component.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchUsers\n                        \n                    \n                \n            \n            \n                \nfetchUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/dashboard/admin-list-users/admin-list-users.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/dashboard/admin-list-users/admin-list-users.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSearchChange\n                        \n                    \n                \n            \n            \n                \nonSearchChange(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/dashboard/admin-list-users/admin-list-users.component.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showIt\n                        \n                    \n                \n            \n            \n                \nshowIt(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/dashboard/admin-list-users/admin-list-users.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        filteredUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/admin-list-users/admin-list-users.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/admin-list-users/admin-list-users.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/admin-list-users/admin-list-users.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/admin-list-users/admin-list-users.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showDialogue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/admin-list-users/admin-list-users.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/admin-list-users/admin-list-users.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TableModule } from 'primeng/table';\nimport { SpeedDialModule } from 'primeng/speeddial';\nimport { ToastModule } from 'primeng/toast';\nimport { DialogModule } from 'primeng/dialog';\nimport { User } from '../../../models/user.model';\nimport { UserService } from '../../../services/user.service';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-admin-list-users',\n  standalone: true,\n  imports: [TableModule, ToastModule, SpeedDialModule, DialogModule,CommonModule],\n  templateUrl: './admin-list-users.component.html',\n  styleUrls: ['./admin-list-users.component.css'],\n})\nexport class AdminListUsersComponent implements OnInit {\n  loading: boolean = true;\n  showDialogue: boolean = false;\n  searchValue: string | undefined;\n  filteredUsers: User[] = [];\n  users: User[] = [];\n  selectedUser: User | null = null;\n\n  constructor(private userService: UserService, private router: Router) {}\n\n  ngOnInit() {\n    this.fetchUsers();\n  }\n\n  fetchUsers(): void {\n    this.userService.getUsers().subscribe({\n      next: (users) => {\n        this.users = users;\n        this.filteredUsers = users;\n        this.loading = false;\n      },\n      error: (error) => {\n        console.error('Error fetching users:', error);\n        this.loading = false;\n      },\n    });\n  }\n\n  onSearchChange(event: Event) {\n    const input = (event.target as HTMLInputElement).value.toLowerCase();\n    if (input === '') {\n      this.filteredUsers = this.users;\n    } else {\n      this.filteredUsers = this.users.filter(\n        (data) =>\n          (data.name ? data.name.toLowerCase().includes(input) : false) ||\n          (data.email ? data.email.toLowerCase().includes(input) : false)\n      );\n    }\n  }\n\n  showIt(user: User) {\n    this.selectedUser = user;\n    this.showDialogue = true;\n  }\n\n  cancelSup() {\n    this.showDialogue = false;\n    this.selectedUser = null;\n  }\n\n  deleteUser() {\n    if (this.selectedUser) {\n      this.userService.deleteUser(this.selectedUser._id!).subscribe({\n        next: () => {\n          this.users = this.users.filter(\n            (u) => u._id !== this.selectedUser!._id\n          );\n          this.filteredUsers = this.filteredUsers.filter(\n            (u) => u._id !== this.selectedUser!._id\n          );\n          this.showDialogue = false;\n          this.selectedUser = null;\n        },\n        error: (error) => {\n          console.error('Error deleting user:', error);\n        },\n      });\n    }\n  }\n\n  addUser() {\n    this.router.navigate(['/dashboard/users/add']);\n  }\n\n  editUser(user: User) {\n    this.router.navigate(['/dashboard/users/edit', user._id]);\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n            \n            \n        \n    \n    \n        \n            \n                \n                    \n                        Name \n                    \n                \n                \n                    \n                        Age \n                    \n                \n                Biography\n                Role\n                Actions\n            \n        \n        \n            \n                \n                    \n                        \n                        {{ user.name }}\n                    \n                \n                {{ user.age }}\n                {{ user.bio }}\n                    *No biography\n                \n                \n                    User\n                    Admin\n                \n                \n                    \n                \n            \n        \n        \n            \n                No Users found.\n            \n        \n    \n\n\n    Do you really want to delete this User?\n    \n        \n        \n    \n\n    \n\n    \n                \n                    ./admin-list-users.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                Name                                                                                                 Age                                                     Biography                Role                Actions                                                                                                                            {{ user.name }}                                                    {{ user.age }}                {{ user.bio }}                    *No biography                                                    User                    Admin                                                                                                                            No Users found.                            Do you really want to delete this User?                        '\n    var COMPONENTS = [{'name': 'AccueilComponent', 'selector': 'app-accueil'},{'name': 'AdminFormCandidatsComponent', 'selector': 'app-admin-form-candidats'},{'name': 'AdminListCandidatsComponent', 'selector': 'app-admin-list-candidats'},{'name': 'AdminListUsersComponent', 'selector': 'app-admin-list-users'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CandidatDetailsComponent', 'selector': 'app-candidat-details'},{'name': 'CandidatDivComponent', 'selector': 'app-candidat-div'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProfilComponent', 'selector': 'app-profil'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminListUsersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            BrowserModule\n                            HttpClient\n                \n            \n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'frontendProjetNode'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { HomeComponent } from \"./components/home/home.component\";\nimport { CandidatDetailsComponent } from \"./components/candidat-details/candidat-details.component\";\nimport { LoginComponent } from \"./components/login/login.component\";\nimport { SignupComponent } from \"./components/signup/signup.component\";\nimport { DashboardComponent } from \"./components/dashboard/dashboard/dashboard.component\";\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CandidatDivComponent } from './components/candidat-div/candidat-div.component';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [\n    RouterOutlet,\n  ],\n  providers: [BrowserModule, HttpClient],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.css',\n})\nexport class AppComponent {\n  title = 'frontendProjetNode';\n}\n\n    \n\n    \n        \n \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' '\n    var COMPONENTS = [{'name': 'AccueilComponent', 'selector': 'app-accueil'},{'name': 'AdminFormCandidatsComponent', 'selector': 'app-admin-form-candidats'},{'name': 'AdminListCandidatsComponent', 'selector': 'app-admin-list-candidats'},{'name': 'AdminListUsersComponent', 'selector': 'app-admin-list-users'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CandidatDetailsComponent', 'selector': 'app-candidat-details'},{'name': 'CandidatDivComponent', 'selector': 'app-candidat-div'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProfilComponent', 'selector': 'app-profil'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.routes.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { SignupComponent } from './components/signup/signup.component';\nimport { DashboardComponent } from './components/dashboard/dashboard/dashboard.component';\nimport { CandidatDetailsComponent } from './components/candidat-details/candidat-details.component';\nimport { AdminListCandidatsComponent } from './components/dashboard/admin-list-candidats/admin-list-candidats.component';\nimport { AdminListUsersComponent } from './components/dashboard/admin-list-users/admin-list-users.component';\nimport { AccueilComponent } from './components/accueil/accueil.component';\nimport { ProfilComponent } from './components/profil/profil.component';\nimport { AdminFormCandidatsComponent } from './components/dashboard/admin-form-candidats/admin-form-candidats.component';\n\nexport const routes: Routes = [\n  {\n    path: 'accueil',\n    component: AccueilComponent,\n    children: [\n      { path: 'home', component: HomeComponent },\n      { path: 'candidate/:id', component: CandidatDetailsComponent },\n      { path: 'profile', component: ProfilComponent },\n      { path: '**', redirectTo: 'home' },\n    ],\n  },\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: SignupComponent },\n  {\n    path: 'dashboard',\n    component: DashboardComponent,\n    children: [\n      { path: 'candidates', component: AdminListCandidatsComponent },\n      { path: 'candidates/add', component: AdminFormCandidatsComponent },\n      { path: 'candidates/edit/:id', component: AdminFormCandidatsComponent },\n      { path: 'users', component: AdminListUsersComponent },\n      { path: '**', redirectTo: 'candidates' },\n    ],\n  },\n  { path: '**', redirectTo: 'accueil' },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      scrollPositionRestoration: 'enabled',\n      anchorScrolling: 'enabled',\n      onSameUrlNavigation: 'reload',\n      scrollOffset: [0, 50],\n    }),\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Private\n                                loggedIn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAuthHeaders\n                            \n                            \n                                getToken\n                            \n                            \n                                    Private\n                                hasToken\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                register\n                            \n                            \n                                saveToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAuthHeaders\n                        \n                    \n                \n            \n            \n                \ngetAuthHeaders()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     HttpHeaders\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getToken\n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        hasToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    hasToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n            \n                \nisLoggedIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveToken\n                        \n                    \n                \n            \n            \n                \nsaveToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${environment.apiBaseUrl}/api/auth`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(this.hasToken())\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { User } from '../models/user.model';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private apiUrl = `${environment.apiBaseUrl}/api/auth`;\n  private loggedIn = new BehaviorSubject(this.hasToken());\n\n  constructor(private http: HttpClient) {}\n\n  register(user: User): Observable {\n    return this.http.post(\n      `${this.apiUrl}/register`,\n      user\n    );\n  }\n\n  login(\n    email: string,\n    password: string\n  ): Observable {\n    return this.http.post(\n      `${this.apiUrl}/login`,\n      { email, password }\n    );\n  }\n\n  saveToken(token: string): void {\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('authToken', token);\n      this.loggedIn.next(true);\n    }\n  }\n\n  getToken(): string | null {\n    if (typeof window !== 'undefined') {\n      return localStorage.getItem('authToken');\n    }\n    return null;\n  }\n\n  getAuthHeaders(): HttpHeaders {\n    const token = this.getToken();\n    return new HttpHeaders({\n      Authorization: `Bearer ${token}`,\n    });\n  }\n\n  logout(): void {\n    if (typeof window !== 'undefined') {\n      localStorage.removeItem('authToken');\n      this.loggedIn.next(false);\n    }\n  }\n\n  isLoggedIn(): Observable {\n    return this.loggedIn.asObservable();\n  }\n\n  private hasToken(): boolean {\n    return !!this.getToken();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CandidatDetailsComponent.html":{"url":"components/CandidatDetailsComponent.html","title":"component - CandidatDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CandidatDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/candidat-details/candidat-details.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                CandidateService\n                                CommentService\n                                FavoriteService\n                                VoteService\n                \n            \n\n\n            \n                selector\n                app-candidat-details\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            DialogModule\n                            CommonModule\n                            TooltipModule\n                            FormsModule\n                \n            \n\n            \n                styleUrls\n                ./candidat-details.component.css\n            \n\n\n\n            \n                templateUrl\n                ./candidat-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                alreadyFavorite\n                            \n                            \n                                    Optional\n                                candidate\n                            \n                            \n                                comments\n                            \n                            \n                                hasVoted\n                            \n                            \n                                newComment\n                            \n                            \n                                visible\n                            \n                            \n                                votedForCurrentCandidate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addComment\n                            \n                            \n                                castVote\n                            \n                            \n                                checkFavorite\n                            \n                            \n                                checkVote\n                            \n                            \n                                confirmVote\n                            \n                            \n                                getCandidate\n                            \n                            \n                                getComments\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleFavorite\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, candidateService: CandidateService, commentService: CommentService, favoriteService: FavoriteService, voteService: VoteService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/candidat-details/candidat-details.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        candidateService\n                                                  \n                                                        \n                                                                        CandidateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commentService\n                                                  \n                                                        \n                                                                        CommentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        favoriteService\n                                                  \n                                                        \n                                                                        FavoriteService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        voteService\n                                                  \n                                                        \n                                                                        VoteService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addComment\n                        \n                    \n                \n            \n            \n                \naddComment()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/candidat-details/candidat-details.component.ts:103\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        castVote\n                        \n                    \n                \n            \n            \n                \ncastVote()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/candidat-details/candidat-details.component.ts:159\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkFavorite\n                        \n                    \n                \n            \n            \n                \ncheckFavorite(candidateId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/candidat-details/candidat-details.component.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                candidateId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkVote\n                        \n                    \n                \n            \n            \n                \ncheckVote(candidateId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/candidat-details/candidat-details.component.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                candidateId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmVote\n                        \n                    \n                \n            \n            \n                \nconfirmVote()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/candidat-details/candidat-details.component.ts:155\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCandidate\n                        \n                    \n                \n            \n            \n                \ngetCandidate(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/candidat-details/candidat-details.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getComments\n                        \n                    \n                \n            \n            \n                \ngetComments(candidateId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/candidat-details/candidat-details.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                candidateId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/candidat-details/candidat-details.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleFavorite\n                        \n                    \n                \n            \n            \n                \ntoggleFavorite()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/candidat-details/candidat-details.component.ts:133\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        alreadyFavorite\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/candidat-details/candidat-details.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        candidate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Candidate\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/candidat-details/candidat-details.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Comment[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/candidat-details/candidat-details.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasVoted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/candidat-details/candidat-details.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newComment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/candidat-details/candidat-details.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/candidat-details/candidat-details.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        votedForCurrentCandidate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/candidat-details/candidat-details.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { CandidateService } from '../../services/candidate.service';\nimport { CommentService } from '../../services/comment.service';\nimport { FavoriteService } from '../../services/favorite.service';\nimport { VoteService } from '../../services/vote.service';\nimport { Candidate } from '../../models/candidate.model';\nimport { Comment } from '../../models/comment.model';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { DialogModule } from 'primeng/dialog';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { log } from 'console';\n\n@Component({\n  selector: 'app-candidat-details',\n  standalone: true,\n  imports: [DialogModule, CommonModule, TooltipModule, FormsModule],\n  templateUrl: './candidat-details.component.html',\n  styleUrls: ['./candidat-details.component.css'],\n  providers: [CandidateService, CommentService, FavoriteService, VoteService],\n})\nexport class CandidatDetailsComponent implements OnInit {\n  candidate?: Candidate;\n  comments: Comment[] = [];\n  alreadyFavorite: boolean = false;\n  hasVoted: boolean = false;\n  votedForCurrentCandidate: boolean = false;\n  visible: boolean = false;\n  newComment: string = '';\n\n  constructor(\n    private route: ActivatedRoute,\n    private candidateService: CandidateService,\n    private commentService: CommentService,\n    private favoriteService: FavoriteService,\n    private voteService: VoteService\n  ) {}\n\n  ngOnInit(): void {\n    const candidateId = this.route.snapshot.paramMap.get('id')!;\n    this.getCandidate(candidateId);\n    this.getComments(candidateId);\n    this.checkFavorite(candidateId);\n    this.checkVote(candidateId);\n    console.log(this.hasVoted);\n  }\n\n  getCandidate(id: string): void {\n    this.candidateService.getCandidate(id).subscribe({\n      next: (candidate) => {\n        this.candidate = candidate;\n      },\n      error: (error) => {\n        console.error('Error fetching candidate:', error);\n      },\n    });\n  }\n\n  getComments(candidateId: string): void {\n    this.commentService.getComments(candidateId).subscribe({\n      next: (comments) => {\n        this.comments = comments;\n      },\n      error: (error) => {\n        console.error('Error fetching comments:', error);\n      },\n    });\n  }\n\n  checkFavorite(candidateId: string): void {\n    this.favoriteService.getFavorites().subscribe({\n      next: (favorites) => {\n        this.alreadyFavorite = favorites.some(\n          (favorite) => favorite._id === candidateId\n        );\n      },\n      error: (error) => {\n        console.error('Error checking favorites:', error);\n      },\n    });\n  }\n\n  checkVote(candidateId: string): void {\n    this.voteService.getUserVotes().subscribe({\n      next: (votes) => {\n        console.log('Votes:', votes);\n\n        this.hasVoted = votes.length > 0;\n        console.log('Has voted:', this.hasVoted);\n\n        // User has voted for the current candidate if there is a vote with the current candidate ID\n        this.votedForCurrentCandidate = votes.some(\n          (vote) => vote.candidate._id === candidateId\n        );\n      },\n      error: (error) => {\n        console.error('Error checking votes:', error);\n      },\n    });\n  }\n\n  addComment(): void {\n    if (!this.candidate) {\n      console.error('Candidate is not defined');\n      return;\n    }\n\n    this.commentService\n      .addComment(this.candidate._id!, this.newComment)\n      .subscribe({\n        next: (response) => {\n          const newComment = response.comment;\n          console.log('New comment added:', newComment);\n\n          // Fetch the user details for the new comment\n          this.commentService.getComment(newComment._id!).subscribe({\n            next: (fetchedComment) => {\n              this.comments.push(fetchedComment);\n              this.newComment = '';\n            },\n            error: (error) => {\n              console.error('Error fetching new comment:', error);\n            },\n          });\n        },\n        error: (error) => {\n          console.error('Error adding comment:', error);\n        },\n      });\n  }\n\n  toggleFavorite(): void {\n    if (this.alreadyFavorite) {\n      this.favoriteService.removeFavorite(this.candidate?._id!).subscribe({\n        next: () => {\n          this.alreadyFavorite = false;\n        },\n        error: (error) => {\n          console.error('Error removing favorite:', error);\n        },\n      });\n    } else {\n      this.favoriteService.addFavorite(this.candidate?._id!).subscribe({\n        next: () => {\n          this.alreadyFavorite = true;\n        },\n        error: (error) => {\n          console.error('Error adding favorite:', error);\n        },\n      });\n    }\n  }\n\n  confirmVote(): void {\n    this.visible = !this.visible;\n  }\n\n  castVote(): void {\n    if (!this.candidate) {\n      console.error('Candidate is not defined');\n      return;\n    }\n\n    this.voteService.castVote(this.candidate._id!).subscribe({\n      next: (response) => {\n        console.log('Vote cast successfully:', response);\n        this.hasVoted = true;\n        this.votedForCurrentCandidate = true;\n        this.visible = false;\n      },\n      error: (error) => {\n        console.error('Error casting vote:', error);\n      },\n    });\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                \n            \n            \n                {{ candidate?.name }}\n            \n        \n\n        \n            \n                \n                {{ hasVoted ? (votedForCurrentCandidate ? 'Voted' : 'You already voted for another candidate') : 'Vote' }}\n            \n            \n                \n            \n            \n                \n            \n        \n        \n        \n            BIOGRAPHY:\n        \n        \n            {{ candidate?.biography }}\n        \n    \n    \n        \n            \n                PROGRAM:\n            \n            \n            \n                {{ candidate?.electoralProgram }}\n            \n        \n        \n            Forum\n            \n            \n                \n                    \n                        \n                            \n                            {{ comment.user.name }}\n                        \n                        {{ comment.createdAt | date:'short' }}\n                    \n                    \n                    \n                        {{ comment.content }}\n                    \n                \n            \n            \n                Add a Comment\n                \n                    \n                    \n                        Submit\n                    \n                \n            \n        \n    \n\n\n    \n        Are you sure you want to vote for this candidate?\n        \n            \n                 Confirm\n            \n            \n                 Cancel\n            \n        \n    \n\n    \n\n    \n                \n                    ./candidat-details.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                {{ candidate?.name }}                                                                        {{ hasVoted ? (votedForCurrentCandidate ? \\'Voted\\' : \\'You already voted for another candidate\\') : \\'Vote\\' }}                                                                                                                                BIOGRAPHY:                            {{ candidate?.biography }}                                                    PROGRAM:                                                    {{ candidate?.electoralProgram }}                                        Forum                                                                                                                                            {{ comment.user.name }}                                                {{ comment.createdAt | date:\\'short\\' }}                                                                                    {{ comment.content }}                                                                            Add a Comment                                                                                Submit                                                                        Are you sure you want to vote for this candidate?                                     Confirm                                         Cancel                        '\n    var COMPONENTS = [{'name': 'AccueilComponent', 'selector': 'app-accueil'},{'name': 'AdminFormCandidatsComponent', 'selector': 'app-admin-form-candidats'},{'name': 'AdminListCandidatsComponent', 'selector': 'app-admin-list-candidats'},{'name': 'AdminListUsersComponent', 'selector': 'app-admin-list-users'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CandidatDetailsComponent', 'selector': 'app-candidat-details'},{'name': 'CandidatDivComponent', 'selector': 'app-candidat-div'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProfilComponent', 'selector': 'app-profil'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CandidatDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CandidatDivComponent.html":{"url":"components/CandidatDivComponent.html","title":"component - CandidatDivComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CandidatDivComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/candidat-div/candidat-div.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-candidat-div\n            \n\n            \n                standalone\n                true\n            \n\n\n            \n                styleUrls\n                ./candidat-div.component.css\n            \n\n\n\n            \n                templateUrl\n                ./candidat-div.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toDetails\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                candidate\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/candidat-div/candidat-div.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        candidate\n                    \n                \n                \n                    \n                        Type :         Candidate\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/candidat-div/candidat-div.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toDetails\n                        \n                    \n                \n            \n            \n                \ntoDetails()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/candidat-div/candidat-div.component.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Candidate } from '../../models/candidate.model';\n\n@Component({\n  selector: 'app-candidat-div',\n  standalone: true,\n  imports: [],\n  templateUrl: './candidat-div.component.html',\n  styleUrls: ['./candidat-div.component.css'],\n})\nexport class CandidatDivComponent {\n  @Input() candidate!: Candidate;\n\n  constructor(private router: Router) {}\n\n  toDetails() {\n    console.log('Navigating to candidate details:', this.candidate._id);\n    \n    this.router.navigate(['/accueil/candidate', this.candidate._id]);\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n        {{candidate.name}}\n        {{candidate.biography}}\n    \n\n    \n        {{candidate.name}}\n        {{candidate.party}}\n        {{candidate.electoralProgram}}.\n        Details\n    \n\n    \n\n    \n                \n                    ./candidat-div.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{candidate.name}}        {{candidate.biography}}                {{candidate.name}}        {{candidate.party}}        {{candidate.electoralProgram}}.        Details    '\n    var COMPONENTS = [{'name': 'AccueilComponent', 'selector': 'app-accueil'},{'name': 'AdminFormCandidatsComponent', 'selector': 'app-admin-form-candidats'},{'name': 'AdminListCandidatsComponent', 'selector': 'app-admin-list-candidats'},{'name': 'AdminListUsersComponent', 'selector': 'app-admin-list-users'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CandidatDetailsComponent', 'selector': 'app-candidat-details'},{'name': 'CandidatDivComponent', 'selector': 'app-candidat-div'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProfilComponent', 'selector': 'app-profil'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CandidatDivComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Candidate.html":{"url":"interfaces/Candidate.html","title":"interface - Candidate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Candidate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/candidate.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            biography\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            electoralProgram\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            party\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            profilePicture\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        biography\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        biography:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        electoralProgram\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        electoralProgram:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        party\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        party:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profilePicture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profilePicture:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Candidate {\n  _id?: string;\n  name: string;\n  party: string;\n  biography: string;\n  electoralProgram: string;\n  profilePicture?: string;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CandidateService.html":{"url":"injectables/CandidateService.html","title":"injectable - CandidateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CandidateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/candidate.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createCandidate\n                            \n                            \n                                deleteCandidate\n                            \n                            \n                                getCandidate\n                            \n                            \n                                getCandidates\n                            \n                            \n                                updateCandidate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/candidate.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createCandidate\n                        \n                    \n                \n            \n            \n                \ncreateCandidate(candidate: Candidate)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/candidate.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                candidate\n                                            \n                                                            Candidate\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteCandidate\n                        \n                    \n                \n            \n            \n                \ndeleteCandidate(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/candidate.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCandidate\n                        \n                    \n                \n            \n            \n                \ngetCandidate(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/candidate.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCandidates\n                        \n                    \n                \n            \n            \n                \ngetCandidates()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/candidate.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateCandidate\n                        \n                    \n                \n            \n            \n                \nupdateCandidate(id: string, candidate: Candidate)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/candidate.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                candidate\n                                            \n                                                            Candidate\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${environment.apiBaseUrl}/api/candidates`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/candidate.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Candidate } from '../models/candidate.model';\nimport { environment } from '../../environments/environment';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CandidateService {\n  private apiUrl = `${environment.apiBaseUrl}/api/candidates`;\n\n  constructor(private http: HttpClient, private authService: AuthService) {}\n\n  getCandidates(): Observable {\n    return this.http.get(this.apiUrl, {\n      headers: this.authService.getAuthHeaders(),\n    });\n  }\n\n  getCandidate(id: string): Observable {\n    return this.http.get(`${this.apiUrl}/${id}`, {\n      headers: this.authService.getAuthHeaders(),\n    });\n  }\n\n  createCandidate(candidate: Candidate): Observable {\n    return this.http.post(this.apiUrl, candidate, {\n      headers: this.authService.getAuthHeaders(),\n    });\n  }\n\n  updateCandidate(id: string, candidate: Candidate): Observable {\n    return this.http.put(`${this.apiUrl}/${id}`, candidate, {\n      headers: this.authService.getAuthHeaders(),\n    });\n  }\n\n  deleteCandidate(id: string): Observable {\n    return this.http.delete(`${this.apiUrl}/${id}`, {\n      headers: this.authService.getAuthHeaders(),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Comment.html":{"url":"interfaces/Comment.html","title":"interface - Comment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Comment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/comment.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            candidate\n                                        \n                                \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        candidate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        candidate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Comment {\n  _id: string;\n  user: { _id: string; name: string }; // Update to expect user object\n  candidate: string;\n  content: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommentService.html":{"url":"injectables/CommentService.html","title":"injectable - CommentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CommentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/comment.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addComment\n                            \n                            \n                                getComment\n                            \n                            \n                                getComments\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/comment.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addComment\n                        \n                    \n                \n            \n            \n                \naddComment(candidateId: string, content: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/comment.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                candidateId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                content\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getComment\n                        \n                    \n                \n            \n            \n                \ngetComment(commentId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/comment.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                commentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getComments\n                        \n                    \n                \n            \n            \n                \ngetComments(candidateId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/comment.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                candidateId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${environment.apiBaseUrl}/api/comments`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/comment.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Comment } from '../models/comment.model';\nimport { environment } from '../../environments/environment';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CommentService {\n  private apiUrl = `${environment.apiBaseUrl}/api/comments`;\n\n  constructor(private http: HttpClient, private authService: AuthService) {}\n\n  addComment(\n    candidateId: string,\n    content: string\n  ): Observable {\n    const body = { candidateId, content };\n    return this.http.post(\n      this.apiUrl,\n      body,\n      {\n        headers: this.authService.getAuthHeaders(),\n      }\n    );\n  }\n\n  getComment(commentId: string): Observable {\n    return this.http.get(`${this.apiUrl}/comment/${commentId}`, {\n      headers: this.authService.getAuthHeaders(),\n    });\n  }\n\n  getComments(candidateId: string): Observable {\n    return this.http.get(`${this.apiUrl}/${candidateId}`, {\n      headers: this.authService.getAuthHeaders(),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/dashboard/dashboard/dashboard.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n            \n                styleUrl\n                ./dashboard.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/dashboard/dashboard/dashboard.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateTo\n                        \n                    \n                \n            \n            \n                \nnavigateTo(route: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/dashboard/dashboard/dashboard.component.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { Router, RouterModule, RouterOutlet } from '@angular/router';\n@Component({\n  selector: 'app-dashboard',\n  standalone: true,\n  imports: [RouterOutlet,RouterModule],\n  templateUrl: './dashboard.component.html',\n  styleUrl: './dashboard.component.css'\n})\nexport class DashboardComponent {\n  constructor(private router: Router) {}\n\n  navigateTo(route: string) {\n    this.router.navigate([`${route}`]);\n  }\n}\n\n    \n\n    \n        \n    \n        \n        \n            Dashboard\n        \n    \n\n    \n        \n            \n                \n                    \n                        Candidats\n                    \n                \n                \n                    \n                        Users\n                    \n                \n            \n        \n        \n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                Dashboard                                                                                                Candidats                                                                                                Users                                                                                        '\n    var COMPONENTS = [{'name': 'AccueilComponent', 'selector': 'app-accueil'},{'name': 'AdminFormCandidatsComponent', 'selector': 'app-admin-form-candidats'},{'name': 'AdminListCandidatsComponent', 'selector': 'app-admin-list-candidats'},{'name': 'AdminListUsersComponent', 'selector': 'app-admin-list-users'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CandidatDetailsComponent', 'selector': 'app-candidat-details'},{'name': 'CandidatDivComponent', 'selector': 'app-candidat-div'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProfilComponent', 'selector': 'app-profil'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Election.html":{"url":"interfaces/Election.html","title":"interface - Election","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Election\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/election.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            _id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            candidates\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            endDate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isActive\n                                        \n                                \n                                \n                                        \n                                            startDate\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        candidates\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        candidates:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Election {\n  _id?: string;\n  title: string;\n  startDate: Date;\n  endDate: Date;\n  isActive?: boolean;\n  candidates?: string[]; // Array of Candidate IDs\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ElectionService.html":{"url":"injectables/ElectionService.html","title":"injectable - ElectionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ElectionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/election.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createElection\n                            \n                            \n                                deleteElection\n                            \n                            \n                                getElection\n                            \n                            \n                                getElections\n                            \n                            \n                                updateElection\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/election.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createElection\n                        \n                    \n                \n            \n            \n                \ncreateElection(election: Election)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/election.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                election\n                                            \n                                                            Election\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteElection\n                        \n                    \n                \n            \n            \n                \ndeleteElection(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/election.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getElection\n                        \n                    \n                \n            \n            \n                \ngetElection(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/election.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getElections\n                        \n                    \n                \n            \n            \n                \ngetElections()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/election.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateElection\n                        \n                    \n                \n            \n            \n                \nupdateElection(id: string, election: Election)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/election.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                election\n                                            \n                                                            Election\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${environment.apiBaseUrl}/api/elections`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/election.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Election } from '../models/election.model';\nimport { environment } from '../../environments/environment';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ElectionService {\n  private apiUrl = `${environment.apiBaseUrl}/api/elections`;\n\n  constructor(private http: HttpClient, private authService: AuthService) {}\n\n  getElections(): Observable {\n    return this.http.get(this.apiUrl, {\n      headers: this.authService.getAuthHeaders(),\n    });\n  }\n\n  getElection(id: string): Observable {\n    return this.http.get(`${this.apiUrl}/${id}`, {\n      headers: this.authService.getAuthHeaders(),\n    });\n  }\n\n  createElection(election: Election): Observable {\n    return this.http.post(this.apiUrl, election, {\n      headers: this.authService.getAuthHeaders(),\n    });\n  }\n\n  updateElection(id: string, election: Election): Observable {\n    return this.http.put(`${this.apiUrl}/${id}`, election, {\n      headers: this.authService.getAuthHeaders(),\n    });\n  }\n\n  deleteElection(id: string): Observable {\n    return this.http.delete(`${this.apiUrl}/${id}`, {\n      headers: this.authService.getAuthHeaders(),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FavoriteService.html":{"url":"injectables/FavoriteService.html","title":"injectable - FavoriteService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FavoriteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/favorite.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addFavorite\n                            \n                            \n                                getFavorites\n                            \n                            \n                                removeFavorite\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/favorite.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addFavorite\n                        \n                    \n                \n            \n            \n                \naddFavorite(candidateId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/favorite.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                candidateId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFavorites\n                        \n                    \n                \n            \n            \n                \ngetFavorites()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/favorite.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFavorite\n                        \n                    \n                \n            \n            \n                \nremoveFavorite(candidateId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/favorite.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                candidateId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${environment.apiBaseUrl}/api/favorites`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/favorite.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Candidate } from '../models/candidate.model';\nimport { environment } from '../../environments/environment';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FavoriteService {\n  private apiUrl = `${environment.apiBaseUrl}/api/favorites`;\n\n  constructor(private http: HttpClient, private authService: AuthService) {}\n\n  getFavorites(): Observable {\n    return this.http.get(this.apiUrl, {\n      headers: this.authService.getAuthHeaders(),\n    });\n  }\n\n  addFavorite(candidateId: string): Observable {\n    return this.http.post(\n      `${this.apiUrl}/${candidateId}`,\n      {},\n      {\n        headers: this.authService.getAuthHeaders(),\n      }\n    );\n  }\n\n  removeFavorite(candidateId: string): Observable {\n    return this.http.delete(`${this.apiUrl}/${candidateId}`, {\n      headers: this.authService.getAuthHeaders(),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/footer/footer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./footer.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  standalone: true,\n  imports: [],\n  templateUrl: './footer.component.html',\n  styleUrl: './footer.component.css'\n})\nexport class FooterComponent {\n\n}\n\n    \n\n    \n        \n\n    \n        \n        \n            Presidential Election 2024\n        \n\n        \n        \n            About\n            Privacy Policy\n            Terms of Service\n            Contact Us\n        \n\n        \n        \n            \n            \n            \n        \n    \n\n    \n    \n        © 2024 Presidential Election App. All rights reserved. This app is an informational resource and is not affiliated with any official government agency.\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                Presidential Election 2024                                    About            Privacy Policy            Terms of Service            Contact Us                                                                                        © 2024 Presidential Election App. All rights reserved. This app is an informational resource and is not affiliated with any official government agency.    '\n    var COMPONENTS = [{'name': 'AccueilComponent', 'selector': 'app-accueil'},{'name': 'AdminFormCandidatsComponent', 'selector': 'app-admin-form-candidats'},{'name': 'AdminListCandidatsComponent', 'selector': 'app-admin-list-candidats'},{'name': 'AdminListUsersComponent', 'selector': 'app-admin-list-users'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CandidatDetailsComponent', 'selector': 'app-candidat-details'},{'name': 'CandidatDivComponent', 'selector': 'app-candidat-div'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProfilComponent', 'selector': 'app-profil'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/home/home.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewChecked\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ChartModule\n                                CandidatDivComponent\n                            AnimateOnScrollModule\n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./home.component.css\n            \n\n            \n                styles\n                \n      :host {\n        @keyframes slidedown-icon {\n          0% {\n            transform: translateY(0);\n          }\n\n          50% {\n            transform: translateY(20px);\n          }\n\n          100% {\n            transform: translateY(0);\n          }\n        }\n\n        .slidedown-icon {\n          animation: slidedown-icon;\n          animation-duration: 3s;\n          animation-iteration-count: infinite;\n        }\n\n        .box {\n          background-image: radial-gradient(\n            var(--primary-300),\n            var(--primary-600)\n          );\n          border-radius: 50% !important;\n          color: var(--primary-color-text);\n        }\n      }\n    \n            \n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                candidates\n                            \n                            \n                                data\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCandidates\n                            \n                            \n                                ngAfterViewChecked\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                scrollToFragment\n                            \n                            \n                                updateChartData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(candidateService: CandidateService, voteService: VoteService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/home/home.component.ts:60\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        candidateService\n                                                  \n                                                        \n                                                                        CandidateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        voteService\n                                                  \n                                                        \n                                                                        VoteService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCandidates\n                        \n                    \n                \n            \n            \n                \ngetCandidates()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewChecked\n                        \n                    \n                \n            \n            \n                \nngAfterViewChecked()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:68\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:72\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        scrollToFragment\n                        \n                    \n                \n            \n            \n                \n                        \n                    scrollToFragment()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:135\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateChartData\n                        \n                    \n                \n            \n            \n                \nupdateChartData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:89\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        candidates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Candidate[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:59\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewChecked, Component, OnInit } from '@angular/core';\nimport { ChartModule } from 'primeng/chart';\nimport { CandidatDivComponent } from '../candidat-div/candidat-div.component';\nimport { AnimateOnScrollModule } from 'primeng/animateonscroll';\nimport { Candidate } from '../../models/candidate.model';\nimport { CandidateService } from '../../services/candidate.service';\nimport { VoteService } from '../../services/vote.service';\nimport { CommonModule } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  standalone: true,\n  imports: [\n    ChartModule,\n    CandidatDivComponent,\n    AnimateOnScrollModule,\n    CommonModule,\n  ],\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n  styles: [\n    `\n      :host {\n        @keyframes slidedown-icon {\n          0% {\n            transform: translateY(0);\n          }\n\n          50% {\n            transform: translateY(20px);\n          }\n\n          100% {\n            transform: translateY(0);\n          }\n        }\n\n        .slidedown-icon {\n          animation: slidedown-icon;\n          animation-duration: 3s;\n          animation-iteration-count: infinite;\n        }\n\n        .box {\n          background-image: radial-gradient(\n            var(--primary-300),\n            var(--primary-600)\n          );\n          border-radius: 50% !important;\n          color: var(--primary-color-text);\n        }\n      }\n    `,\n  ],\n})\nexport class HomeComponent implements OnInit, AfterViewChecked {\n  data: any;\n  options: any;\n  candidates: Candidate[] = [];\n\n  constructor(\n    private candidateService: CandidateService,\n    private voteService: VoteService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngAfterViewChecked(): void {\n    this.scrollToFragment();\n  }\n\n  ngOnInit() {\n    this.scrollToFragment();\n    this.getCandidates();\n  }\n\n  getCandidates(): void {\n    this.candidateService.getCandidates().subscribe({\n      next: (candidates) => {\n        this.candidates = candidates;\n        this.updateChartData();\n      },\n      error: (error) => {\n        console.error('Error fetching candidates:', error);\n      },\n    });\n  }\n\n  updateChartData(): void {\n    const labels: string[] = [];\n    const data: number[] = [];\n    const backgroundColor: string[] = [\n      '#FF6384',\n      '#4BC0C0',\n      '#FFCE56',\n      '#36A2EB',\n      '#9966FF',\n    ];\n    const hoverBackgroundColor: string[] = [\n      '#FF6384',\n      '#4BC0C0',\n      '#FFCE56',\n      '#36A2EB',\n      '#9966FF',\n    ];\n\n    let requests = this.candidates.map((candidate, index) => {\n      return this.voteService\n        .getVotesByCandidate(candidate._id!)\n        .toPromise()\n        .then((votes) => {\n          labels.push(candidate.name);\n          data.push(votes!.length);\n        });\n    });\n\n    Promise.all(requests)\n      .then(() => {\n        this.data = {\n          labels: labels,\n          datasets: [\n            {\n              data: data,\n              backgroundColor: backgroundColor,\n              hoverBackgroundColor: hoverBackgroundColor,\n            },\n          ],\n        };\n      })\n      .catch((error) => {\n        console.error('Error fetching votes:', error);\n      });\n  }\n\n  private scrollToFragment(): void {\n    this.route.fragment?.subscribe((fragment) => {\n      if (fragment) {\n        const element = document.getElementById(fragment);\n        if (element) {\n          element.scrollIntoView({ behavior: 'smooth' });\n        }\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n        Welcome to the Presidential Election Portal\n     -->\n  \n    \n    \n\n    \n    \n      \n        This application provides up-to-date information and resources on the\n        presidential election. Here, you can view candidate profiles, track\n        election events, view results, and more.\n      \n    \n  \n  \n  \n    List of candidates\n    \n      \n        \n      \n    \n  \n  \n  \n    \n      Current Results\n    \n    \n      \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./home.component.css\n                \n                \n            \n      :host {\n        @keyframes slidedown-icon {\n          0% {\n            transform: translateY(0);\n          }\n\n          50% {\n            transform: translateY(20px);\n          }\n\n          100% {\n            transform: translateY(0);\n          }\n        }\n\n        .slidedown-icon {\n          animation: slidedown-icon;\n          animation-duration: 3s;\n          animation-iteration-count: infinite;\n        }\n\n        .box {\n          background-image: radial-gradient(\n            var(--primary-300),\n            var(--primary-600)\n          );\n          border-radius: 50% !important;\n          color: var(--primary-color-text);\n        }\n      }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Welcome to the Presidential Election Portal     -->                                This application provides up-to-date information and resources on the        presidential election. Here, you can view candidate profiles, track        election events, view results, and more.                    List of candidates                                            Current Results                                  '\n    var COMPONENTS = [{'name': 'AccueilComponent', 'selector': 'app-accueil'},{'name': 'AdminFormCandidatsComponent', 'selector': 'app-admin-form-candidats'},{'name': 'AdminListCandidatsComponent', 'selector': 'app-admin-list-candidats'},{'name': 'AdminListUsersComponent', 'selector': 'app-admin-list-users'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CandidatDetailsComponent', 'selector': 'app-candidat-details'},{'name': 'CandidatDivComponent', 'selector': 'app-candidat-div'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProfilComponent', 'selector': 'app-profil'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            CommonModule\n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                formSubmitted\n                            \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login/login.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login/login.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formSubmitted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [ReactiveFormsModule, CommonModule,RouterModule],\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  loginForm!: FormGroup;\n  formSubmitted = false;\n  errorMessage: string | null = null;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      remember: [false],\n    });\n  }\n\n  onSubmit(): void {\n    this.formSubmitted = true;\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    const { email, password } = this.loginForm.value;\n    this.authService.login(email, password).subscribe({\n      next: (response) => {\n        // Save the token\n        this.authService.saveToken(response.token);\n        // Handle successful login\n        console.log('User logged in successfully', response);\n        this.router.navigate(['/home']); // Navigate to dashboard or another page\n      },\n      error: (error) => {\n        // Handle error\n        this.errorMessage = error.error.message;\n      },\n    });\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n  \n  \n    \n      Login\n      Write your informations.\n      \n      \n        \n          Email\n          \n            \n            \n              \n            \n          \n          \n             Email is required.\n             Invalid email address.\n          \n        \n        \n          Password\n          \n            \n            \n              \n            \n          \n          \n             Password is required.\n             Password must be at least 6 characters long.\n          \n        \n        \n          \n            \n            Remember Me\n          \n        \n        \n          {{ errorMessage }}\n        \n        \n          \n            Log in \n          \n        \n      \n      \n      \n        Not logged in? Create an account\n      \n    \n  \n\n    \n\n    \n                \n                    ./login.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Login      Write your informations.                              Email                                                                                             Email is required.             Invalid email address.                                    Password                                                                                             Password is required.             Password must be at least 6 characters long.                                                            Remember Me                                    {{ errorMessage }}                                      Log in                                             Not logged in? Create an account            '\n    var COMPONENTS = [{'name': 'AccueilComponent', 'selector': 'app-accueil'},{'name': 'AdminFormCandidatsComponent', 'selector': 'app-admin-form-candidats'},{'name': 'AdminListCandidatsComponent', 'selector': 'app-admin-list-candidats'},{'name': 'AdminListUsersComponent', 'selector': 'app-admin-list-users'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CandidatDetailsComponent', 'selector': 'app-candidat-details'},{'name': 'CandidatDivComponent', 'selector': 'app-candidat-div'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProfilComponent', 'selector': 'app-profil'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/navbar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterModule\n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./navbar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loggedIn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                navigateTo\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navbar/navbar.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/navbar/navbar.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateTo\n                        \n                    \n                \n            \n            \n                \nnavigateTo(route: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/navbar/navbar.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/navbar/navbar.component.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/navbar/navbar.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router, RouterModule } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-navbar',\n  standalone: true,\n  imports: [RouterModule, CommonModule],\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css'],\n})\nexport class NavbarComponent implements OnInit {\n  loggedIn: boolean = false;\n\n  constructor(private router: Router, private authService: AuthService) {}\n\n  ngOnInit(): void {\n    this.authService.isLoggedIn().subscribe((status) => {\n      this.loggedIn = status;\n    });\n  }\n\n  navigateTo(route: string): void {\n    this.router.navigate([route]);\n  }\n\n  logout(): void {\n    this.authService.logout();\n    this.router.navigate(['/login']);\n  }\n}\n\n    \n\n    \n        \n  Home\n  ----- Welcome to the Presidential Election Portal -----\n  \n    \n       Profile\n    \n    \n       Login\n    \n    \n       Logout\n    \n  \n\n    \n\n    \n                \n                    ./navbar.component.css\n                \n                a.active {\n    background-color: white;\n    color: red;\n    border: 1px solid red;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Home  ----- Welcome to the Presidential Election Portal -----             Profile               Login               Logout      '\n    var COMPONENTS = [{'name': 'AccueilComponent', 'selector': 'app-accueil'},{'name': 'AdminFormCandidatsComponent', 'selector': 'app-admin-form-candidats'},{'name': 'AdminListCandidatsComponent', 'selector': 'app-admin-list-candidats'},{'name': 'AdminListUsersComponent', 'selector': 'app-admin-list-users'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CandidatDetailsComponent', 'selector': 'app-candidat-details'},{'name': 'CandidatDivComponent', 'selector': 'app-candidat-div'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProfilComponent', 'selector': 'app-profil'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfilComponent.html":{"url":"components/ProfilComponent.html","title":"component - ProfilComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfilComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/profil/profil.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profil\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            TableModule\n                            ToastModule\n                            SpeedDialModule\n                            DialogModule\n                            ReactiveFormsModule\n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./profil.component.css\n            \n\n\n\n            \n                templateUrl\n                ./profil.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                changeInfoForm\n                            \n                            \n                                errorMessage\n                            \n                            \n                                favoriteCandidates\n                            \n                            \n                                formSubmitted\n                            \n                            \n                                show\n                            \n                            \n                                user\n                            \n                            \n                                votedCandidateName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelCh\n                            \n                            \n                                editUser\n                            \n                            \n                                fetchFavoriteCandidates\n                            \n                            \n                                fetchUserProfile\n                            \n                            \n                                fetchUserVotes\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, userService: UserService, favoriteService: FavoriteService, voteService: VoteService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/profil/profil.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        favoriteService\n                                                  \n                                                        \n                                                                        FavoriteService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        voteService\n                                                  \n                                                        \n                                                                        VoteService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancelCh\n                        \n                    \n                \n            \n            \n                \ncancelCh()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profil/profil.component.ts:120\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editUser\n                        \n                    \n                \n            \n            \n                \neditUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profil/profil.component.ts:98\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchFavoriteCandidates\n                        \n                    \n                \n            \n            \n                \nfetchFavoriteCandidates()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profil/profil.component.ts:72\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchUserProfile\n                        \n                    \n                \n            \n            \n                \nfetchUserProfile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profil/profil.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchUserVotes\n                        \n                    \n                \n            \n            \n                \nfetchUserVotes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profil/profil.component.ts:83\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profil/profil.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profil/profil.component.ts:102\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        changeInfoForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/profil/profil.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/profil/profil.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        favoriteCandidates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Candidate[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/profil/profil.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formSubmitted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/profil/profil.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/profil/profil.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/profil/profil.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        votedCandidateName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/profil/profil.component.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { User } from '../../models/user.model';\nimport { Candidate } from '../../models/candidate.model';\nimport { TableModule } from 'primeng/table';\nimport { SpeedDialModule } from 'primeng/speeddial';\nimport { ToastModule } from 'primeng/toast';\nimport { DialogModule } from 'primeng/dialog';\nimport {\n  FormBuilder,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { UserService } from '../../services/user.service';\nimport { FavoriteService } from '../../services/favorite.service';\nimport { VoteService } from '../../services/vote.service';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-profil',\n  standalone: true,\n  imports: [\n    TableModule,\n    ToastModule,\n    SpeedDialModule,\n    DialogModule,\n    ReactiveFormsModule,\n    CommonModule\n  ],\n  templateUrl: './profil.component.html',\n  styleUrls: ['./profil.component.css'],\n})\nexport class ProfilComponent implements OnInit {\n  changeInfoForm!: FormGroup;\n  formSubmitted = false;\n  errorMessage: string | null = null;\n  show: boolean = false;\n  user: User | null = null;\n  favoriteCandidates: Candidate[] = [];\n  votedCandidateName: string | null = null;\n\n  constructor(\n    private fb: FormBuilder,\n    private userService: UserService,\n    private favoriteService: FavoriteService,\n    private voteService: VoteService\n  ) {}\n\n  ngOnInit(): void {\n    this.changeInfoForm = this.fb.group({\n      name: ['', [Validators.required, Validators.minLength(3)]],\n      email: ['', [Validators.required, Validators.email]],\n    });\n\n    this.fetchUserProfile();\n    this.fetchFavoriteCandidates();\n    this.fetchUserVotes();\n  }\n\n  fetchUserProfile(): void {\n    this.userService.getUserProfile().subscribe({\n      next: (user) => {\n        this.user = user;\n        this.changeInfoForm.patchValue(user);\n      },\n      error: (error) => {\n        console.error('Error fetching user profile:', error);\n      },\n    });\n  }\n\n  fetchFavoriteCandidates(): void {\n    this.favoriteService.getFavorites().subscribe({\n      next: (candidates) => {\n        this.favoriteCandidates = candidates;\n      },\n      error: (error) => {\n        console.error('Error fetching favorite candidates:', error);\n      },\n    });\n  }\n\n  fetchUserVotes(): void {\n    this.voteService.getUserVotes().subscribe({\n      next: (votes) => {\n        if (votes.length > 0) {\n          this.votedCandidateName = votes[0].candidate.name;\n        } else {\n          this.votedCandidateName = null;\n        }\n      },\n      error: (error) => {\n        console.error('Error fetching user votes:', error);\n      },\n    });\n  }\n\n  editUser(): void {\n    this.show = !this.show;\n  }\n\n  onSubmit(): void {\n    this.formSubmitted = true;\n    if (this.changeInfoForm.invalid) {\n      return;\n    }\n\n    this.userService.updateUserProfile(this.changeInfoForm.value).subscribe({\n      next: (user) => {\n        this.user = user;\n        this.show = false;\n      },\n      error: (error) => {\n        console.error('Error updating user profile:', error);\n        this.errorMessage = 'Failed to update profile. Please try again.';\n      },\n    });\n  }\n\n  cancelCh(): void {\n    this.show = !this.show;\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n            \n            \n                {{ user?.name }}\n                \n            \n        \n        \n        \n            BIOGRAPHY:\n        \n        \n            {{ user?.bio || 'No biography available.' }}\n        \n    \n    \n        Go Vote Now!\n        \n            You voted for: {{ votedCandidateName || 'No candidate voted yet.' }}\n        \n        \n        \n            \n                List of favourited candidates:\n            \n            \n                \n                    \n                        \n                            \n                                Name \n                            \n                        \n                        \n                            \n                                Party \n                            \n                        \n                        Biography\n                        Electoral Program\n                    \n                \n                \n                    \n                        \n                            \n                                \n                                {{ candidate.name }}\n                            \n                        \n                        {{ candidate.party }}\n                        {{ candidate.biography }}\n                        {{ candidate.electoralProgram }}\n                    \n                \n                \n                    \n                        No Candidates found.\n                    \n                \n            \n        \n    \n\n\n    Change your information\n    \n        \n            Full Name:\n            \n            \n                Name is required.\n            \n        \n        \n            Email:\n            \n            \n                Valid email is required.\n            \n        \n        \n            \n            \n        \n    \n\n    \n\n    \n                \n                    ./profil.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                {{ user?.name }}                                                                BIOGRAPHY:                            {{ user?.bio || \\'No biography available.\\' }}                        Go Vote Now!                    You voted for: {{ votedCandidateName || \\'No candidate voted yet.\\' }}                                                    List of favourited candidates:                                                                                                                                                Name                                                                                                                                         Party                                                                             Biography                        Electoral Program                                                                                                                                                                                            {{ candidate.name }}                                                                            {{ candidate.party }}                        {{ candidate.biography }}                        {{ candidate.electoralProgram }}                                                                                                No Candidates found.                                                                Change your information                        Full Name:                                        Name is required.                                        Email:                                        Valid email is required.                                                                '\n    var COMPONENTS = [{'name': 'AccueilComponent', 'selector': 'app-accueil'},{'name': 'AdminFormCandidatsComponent', 'selector': 'app-admin-form-candidats'},{'name': 'AdminListCandidatsComponent', 'selector': 'app-admin-list-candidats'},{'name': 'AdminListUsersComponent', 'selector': 'app-admin-list-users'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CandidatDetailsComponent', 'selector': 'app-candidat-details'},{'name': 'CandidatDivComponent', 'selector': 'app-candidat-div'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProfilComponent', 'selector': 'app-profil'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfilComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResultsService.html":{"url":"injectables/ResultsService.html","title":"injectable - ResultsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResultsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/results.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getElectionResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/results.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getElectionResults\n                        \n                    \n                \n            \n            \n                \ngetElectionResults(electionId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/results.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                electionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${environment.apiBaseUrl}/api/results`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/results.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ResultsService {\n  private apiUrl = `${environment.apiBaseUrl}/api/results`;\n\n  constructor(private http: HttpClient, private authService: AuthService) {}\n\n  getElectionResults(electionId: string): Observable {\n    return this.http.get(`${this.apiUrl}/${electionId}`, {\n      headers: this.authService.getAuthHeaders(),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignupComponent.html":{"url":"components/SignupComponent.html","title":"component - SignupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SignupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/signup/signup.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-signup\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            CommonModule\n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./signup.component.css\n            \n\n\n\n            \n                templateUrl\n                ./signup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                formSubmitted\n                            \n                            \n                                signupForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                matchPasswords\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/signup/signup.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        matchPasswords\n                        \n                    \n                \n            \n            \n                \nmatchPasswords(password: string, confirmPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/signup/signup.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                confirmPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     (formGroup: FormGroup) => void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/signup/signup.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/signup/signup.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/signup/signup.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formSubmitted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/signup/signup.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signupForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/signup/signup.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport { CommonModule } from '@angular/common';\n\n\n\n@Component({\n  selector: 'app-signup',\n  standalone: true,\n  imports: [ReactiveFormsModule, CommonModule,RouterModule],\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css'],\n})\nexport class SignupComponent implements OnInit {\n  signupForm!: FormGroup;\n  formSubmitted = false;\n  errorMessage: string | null = null;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.signupForm = this.fb.group(\n      {\n        name: ['', [Validators.required, Validators.minLength(3)]],\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', [Validators.required, Validators.minLength(6)]],\n        confirmPassword: ['', Validators.required],\n        role: ['user'], // Default role\n      },\n      { validator: this.matchPasswords('password', 'confirmPassword') }\n    );\n  }\n\n  // Custom validator to check if passwords match\n  matchPasswords(password: string, confirmPassword: string) {\n    return (formGroup: FormGroup) => {\n      const passControl = formGroup.controls[password];\n      const confirmPassControl = formGroup.controls[confirmPassword];\n      if (confirmPassControl.errors && !confirmPassControl.errors['mismatch']) {\n        return;\n      }\n      if (passControl.value !== confirmPassControl.value) {\n        confirmPassControl.setErrors({ mismatch: true });\n      } else {\n        confirmPassControl.setErrors(null);\n      }\n    };\n  }\n\n  onSubmit(): void {\n    this.formSubmitted = true;\n    if (this.signupForm.invalid) {\n      return;\n    }\n\n    this.authService.register(this.signupForm.value).subscribe({\n      next: (response) => {\n        // Handle successful registration\n        console.log('User registered successfully', response);\n        this.router.navigate(['/login']);\n        \n      },\n      error: (error) => {\n        // Handle error\n        this.errorMessage = error.error.message;\n      },\n    });\n  }\n}\n\n    \n\n    \n        \n  \n\n  \n    \n      \n        \n          \n        \n        Create your account\n        Write the necessary informations.\n        \n        \n          \n            \n              \n                Full Name:\n                \n                \n                   Full Name is required.\n                   Full Name must be at least 3 characters long.\n                \n              \n              \n                Email:\n                \n                \n                   Email is required.\n                   Invalid email address.\n                \n              \n              \n            \n            \n              \n                Password:\n                \n                \n                   Password is required.\n                   Password must be at least 6 characters long.\n                \n              \n              \n                Confirm Password:\n                \n                \n                   Confirm Password is required.\n                   Passwords do not match.\n                \n              \n            \n          \n          \n            {{ errorMessage }}\n          \n          \n            \n              Create your account \n            \n          \n        \n        \n        \n          Already have an account? Log in\n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./signup.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                Create your account        Write the necessary informations.                                                                    Full Name:                                                   Full Name is required.                   Full Name must be at least 3 characters long.                                                            Email:                                                   Email is required.                   Invalid email address.                                                                                                  Password:                                                   Password is required.                   Password must be at least 6 characters long.                                                            Confirm Password:                                                   Confirm Password is required.                   Passwords do not match.                                                                          {{ errorMessage }}                                              Create your account                                                         Already have an account? Log in                    '\n    var COMPONENTS = [{'name': 'AccueilComponent', 'selector': 'app-accueil'},{'name': 'AdminFormCandidatsComponent', 'selector': 'app-admin-form-candidats'},{'name': 'AdminListCandidatsComponent', 'selector': 'app-admin-list-candidats'},{'name': 'AdminListUsersComponent', 'selector': 'app-admin-list-users'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CandidatDetailsComponent', 'selector': 'app-candidat-details'},{'name': 'CandidatDivComponent', 'selector': 'app-candidat-div'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProfilComponent', 'selector': 'app-profil'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            _id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            age\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            bio\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            favorites\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            password\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            profilePicture\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            role\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        age\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        age:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bio:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        favorites\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        favorites:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profilePicture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profilePicture:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     \"user\" | \"admin\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"user\" | \"admin\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  _id?: string;\n  name: string;\n  email: string;\n  password?: string;\n  role?: 'user' | 'admin';\n  favorites?: string[]; // Array of Candidate IDs\n  age?: number;\n  bio?: string;\n  profilePicture?: string;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteUser\n                            \n                            \n                                getUserById\n                            \n                            \n                                getUserProfile\n                            \n                            \n                                getUsers\n                            \n                            \n                                updateUserProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserById\n                        \n                    \n                \n            \n            \n                \ngetUserById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserProfile\n                        \n                    \n                \n            \n            \n                \ngetUserProfile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUserProfile\n                        \n                    \n                \n            \n            \n                \nupdateUserProfile(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${environment.apiBaseUrl}/api/users`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from '../models/user.model';\nimport { environment } from '../../environments/environment';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  private apiUrl = `${environment.apiBaseUrl}/api/users`;\n\n  constructor(private http: HttpClient, private authService: AuthService) {}\n\n  getUserProfile(): Observable {\n    return this.http.get(`${this.apiUrl}/profile`, {\n      headers: this.authService.getAuthHeaders(),\n    });\n  }\n\n  updateUserProfile(user: User): Observable {\n    return this.http.put(`${this.apiUrl}/profile`, user, {\n      headers: this.authService.getAuthHeaders(),\n    });\n  }\n\n  getUserById(id: string): Observable {\n    return this.http.get(`${this.apiUrl}/${id}`, {\n      headers: this.authService.getAuthHeaders(),\n    });\n  }\n\n  getUsers(): Observable {\n    return this.http.get(this.apiUrl, {\n      headers: this.authService.getAuthHeaders(),\n    });\n  }\n\n  deleteUser(id: string): Observable {\n    return this.http.delete(`${this.apiUrl}/${id}`, {\n      headers: this.authService.getAuthHeaders(),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Vote.html":{"url":"interfaces/Vote.html","title":"interface - Vote","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Vote\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/vote.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            candidate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        candidate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        candidate:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Vote {\n  _id?: string;\n  user: string; // User ID\n  candidate: { _id: string; name: string,party:string }; // Candidate ID\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VoteService.html":{"url":"injectables/VoteService.html","title":"injectable - VoteService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VoteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/vote.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                castVote\n                            \n                            \n                                getUserVotes\n                            \n                            \n                                getVotes\n                            \n                            \n                                getVotesByCandidate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/vote.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        castVote\n                        \n                    \n                \n            \n            \n                \ncastVote(candidateId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/vote.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                candidateId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserVotes\n                        \n                    \n                \n            \n            \n                \ngetUserVotes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/vote.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVotes\n                        \n                    \n                \n            \n            \n                \ngetVotes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/vote.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVotesByCandidate\n                        \n                    \n                \n            \n            \n                \ngetVotesByCandidate(candidateId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/vote.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                candidateId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${environment.apiBaseUrl}/api/votes`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/vote.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Vote } from '../models/vote.model';\nimport { environment } from '../../environments/environment';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class VoteService {\n  private apiUrl = `${environment.apiBaseUrl}/api/votes`;\n\n  constructor(private http: HttpClient, private authService: AuthService) {}\n\n  castVote(candidateId: string): Observable {\n    const body = { candidateId };\n    return this.http.post(this.apiUrl, body, {\n      headers: this.authService.getAuthHeaders(),\n    });\n  }\n\n  getVotes(): Observable {\n    return this.http.get(this.apiUrl, {\n      headers: this.authService.getAuthHeaders(),\n    });\n  }\n\n  getUserVotes(): Observable {\n    return this.http.get(`${this.apiUrl}/user`, {\n      headers: this.authService.getAuthHeaders(),\n    });\n  }\n\n  getVotesByCandidate(candidateId: string): Observable {\n    return this.http.get(`${this.apiUrl}/candidate/${candidateId}`, {\n      headers: this.authService.getAuthHeaders(),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        server.ts\n            \n            function\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        server.ts\n            \n            function\n            run\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/accueil/accueil.component.ts\n            \n            component\n            AccueilComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/candidat-details/candidat-details.component.ts\n            \n            component\n            CandidatDetailsComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/components/candidat-div/candidat-div.component.ts\n            \n            component\n            CandidatDivComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/dashboard/admin-form-candidats/admin-form-candidats.component.ts\n            \n            component\n            AdminFormCandidatsComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/dashboard/admin-list-candidats/admin-list-candidats.component.ts\n            \n            component\n            AdminListCandidatsComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/components/dashboard/admin-list-users/admin-list-users.component.ts\n            \n            component\n            AdminListUsersComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/components/dashboard/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/profil/profil.component.ts\n            \n            component\n            ProfilComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/components/signup/signup.component.ts\n            \n            component\n            SignupComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/models/candidate.model.ts\n            \n            interface\n            Candidate\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/models/comment.model.ts\n            \n            interface\n            Comment\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/election.model.ts\n            \n            interface\n            Election\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/models/user.model.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/models/vote.model.ts\n            \n            interface\n            Vote\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/app/services/auth.interceptor.ts\n            \n            variable\n            authInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/services/candidate.service.ts\n            \n            injectable\n            CandidateService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/comment.service.ts\n            \n            injectable\n            CommentService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/election.service.ts\n            \n            injectable\n            ElectionService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/favorite.service.ts\n            \n            injectable\n            FavoriteService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/results.service.ts\n            \n            injectable\n            ResultsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/vote.service.ts\n            \n            injectable\n            VoteService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.2.0\n        \n            @angular/common : ^18.2.0\n        \n            @angular/compiler : ^18.2.0\n        \n            @angular/core : ^18.2.0\n        \n            @angular/forms : ^18.2.0\n        \n            @angular/platform-browser : ^18.2.0\n        \n            @angular/platform-browser-dynamic : ^18.2.0\n        \n            @angular/platform-server : ^18.2.0\n        \n            @angular/router : ^18.2.0\n        \n            @angular/ssr : ^18.2.7\n        \n            @fortawesome/angular-fontawesome : ^0.15.0\n        \n            @fortawesome/fontawesome-svg-core : ^6.6.0\n        \n            @fortawesome/free-solid-svg-icons : ^6.6.0\n        \n            @ngx-env/core : ^16.1.3\n        \n            chart.js : ^4.4.6\n        \n            express : ^4.18.2\n        \n            primeicons : ^7.0.0\n        \n            primeng : ^17.18.11\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.10\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            app   (server.ts)\n                        \n                        \n                            run   (server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n            \n                \napp()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     express.Express\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        run\n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nFrontendProjetNode\nThis project was generated with Angular CLI version 18.2.7.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    14 Components\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            authInterceptor   (src/.../auth.interceptor.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideAnimationsAsync(),\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes),\n    provideClientHydration(),\n    provideHttpClient(),\n  ],\n}\n                    \n                \n\n\n        \n    \n\n    src/app/services/auth.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authInterceptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (req, next) => {\n  const authService = inject(AuthService);\n  const token = authService.getToken();\n  console.log('Interceptor: Token:', token); // Add logging\n  if (token) {\n    const cloned = req.clone({\n      headers: req.headers.set('Authorization', `Bearer ${token}`),\n    });\n    console.log('Interceptor: Cloned Request:', cloned); // Add logging\n    return next(cloned);\n  } else {\n    return next(req);\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => bootstrapApplication(AppComponent, config)\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering()\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  apiBaseUrl: 'http://localhost:5000',\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  apiBaseUrl: 'http://localhost:5000',\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
